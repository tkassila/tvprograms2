{"version":3,"sources":["webpack:///./components/amppari/ChannelTypes.js","webpack:///./routes/amppari/style.css","webpack:///./components/amppari/ProgramTypes.js","webpack:///./components/amppari/SearchPrograms.js","webpack:///./components/amppari/Amppari.js","webpack:///./routes/amppari/AmppariRoute.js","webpack:///./components/amppari/AmppariChannel.js","webpack:///../node_modules/dayjs/dayjs.min.js","webpack:///./components/amppari/style.css","webpack:///./components/amppari/AmppariShowProgram.js"],"names":["ChannelTypes","props","unsubscribelistener","storestate","_mounted","fetchitems","state","Config","bDebug","console","log","items","filterChannesAfterChannelPay","channeltypeitems","setState","store","channeltype","ind","selected","fitems","length","undefined","selectedsuodattimet","selectedsuodatinindex","chls","ret","filter","s","pay","Date","now","errmsg","fetcheditems","disabled","keys","push","this","subscribeAttributeNameListener","listenerStoreChange2","setRemoverFunction","removelisteners","nextProps","selectchanneltypes","arr_selectchanneltypes","map","child","i","value","id","for","tabIndex","selectedIndex","preselected","outlined","onChange","e","target","text","changed","Component","ProgramTypes","filterAfterProgramType","programtypeitems","change","mychange","selectedtyyppi","getMovieOrSportChannels","channels","chcoopy","foundedPrograms","progfounded","foundmovies","foundsport","foundedChannels","Array","from","forEach","cha","channelprograms","pr","movie","sport","selectedTyyppiinindex","selecttyyppi_items","arr_selecttyyppi_items","SearchPrograms","filterAfterSearch","bSearchButtonClicked","bDisplayAllDescriptions","setDisplayAllDescriptionsTrue","textSearch","event","preventDefault","searchText","trim","getState","toString","makeSearchChange","all_channels","index","founded","uppersearchText","toUpperCase","search_channels","bCheckShowChannelsAtSameTime","selectedchannelindex","selectedTitle","title","filteredchannels","indexOf","titleindex","prcopy","description","descriptionindex","inputw","buttoninputw","themevalue","style","type","onKeyUp","textFieldSearchChanged","Button","ripple","raised","searchTextFromChannelsClicked","String","prototype","indexOfRegex","regex","fromIndex","str","substring","match","lastIndexOfRegex","lastIndexOf","filtercalled","PROGRAMTYPE","CHANNELTYPE","SEARCHCHANE","MAKESEARCH","Amppari","milliseconds","Promise","resolve","setTimeout","removerfunctionProgramType","removerfunctionSearchProgram","removerfunctionChannelType","func","fname","store_selectedtyyppi","selday","selecteddate","month","getMonth","day","getDate","getFullYear","tvchannels","jsonch","item","getJsonChannel","channel","name","getNextJsonArrayAfterLabel","slug","pr2","timestamp","ch","ch2","tvchannel","programs","jsonprograms","jsonpr","jsonchannel","getArrayIntoChannel","getJsonProgram","json","j","maxj","programming","max","searchtext","foundSearchText","programchannels","k","maxk","jsonprogram","progdata","dayparameter","bUnderFetch","channelurl","getUrlQueryForAmppari","currentChannelSetIndex","fetched","fetch","method","headers","Accept","mode","signal","abortSignal","then","handleErrors","response","data","data2","INITIAL_STATE","indexEnd","JSON","parse","json2","getChannelsAndProgramsFromJsonArray","catch","error","AmppariException","Map","get","set","size","Object","fromEntries","strprorams","indStart","searchResultChannel","getJsonLabel","strprograms","channeldata","firstIndex","arrprogs","firstIndexEnd","strprogram","jsonprog","iCount","indSecondChannel","searchResultChanne","indEnd","searchResult","searchresult","getJsonNextValue","channelname","channelslug","channelpay","search_start_program","getJsonProg","searchstart","indId","strjson","getJsonLabelAndValue","getJsonNextLabel","name2","ind2","search","bStartWithStrike","iAdd","querySelectorAll","ok","status","Error","fetch_url_ampparissa","selectedaika","searchsanat","parseddate","today","checkshowdcurrentprogramsRef","current","bshowdcurrentprograms","fetchHtmlAmppariChannels","plusdaynumber","dayjs","plusdate","add","format","weekdayname","getDay","timeparameter","idends","days","showChannelsAtSameTime","channelSets","calculateMaxChannelSetIndex","checked","bValue","bShowTableBorder","const_showChannelsAtSameTime","txt","txt1","txtlen","first","between","last","newvalue_first","foundedthtml","newvalue_between","newvalue_last","newvalue","currProg","currtime","nextProg","getNextProgOf","oldProgramWithNextProg","foundedChannel","nextPropgram","foundedProg","progs","prog","program","currenttime","nextprogram","endtTime","endtTimeHours","getHours","currentHours","getMinutes","AmppariChannel","showSearch","getPOfIndex","oldProgram","displayAllDescriptions","bAllChannels","min","Math","floor","newChannelSet","validNumber","parseInt","NaN","filterWhenUIControlsHasBeenChanged","showAllDescrRef","forceUpdate","bChange","showOneChannelRef","onech","calledfrom","path","includes","strNum","childNodes","ret2","cols","currentColInd","keyCode","window","which","shiftKey","altKey","row","tablCntl","rows","cells","currColInd","colIndex","lenCols","currentCol","closest","key","document","activeElement","innerHTML","speakScreenReader","composedPath","divInsideOfCol","getH3OfCurrentColumn","channelText","focus","getCurrentColumnIndex","prevcol","getPrevColumn","nextcol","getNextColumn","getElementById","divh3","nextChannelSetClicked","prevChannelSetClicked","altPlusKeyUp","section_width","hideButton","x","display","hideButtonText","html","selectedpage","currentchannel","bAllChannelsLoaded","fetch_url_telkku","http_curlserver","bind","createRef","selectChannelRef","showTableBordersRef","channelTypeRef","searchProgramRef","programTypeRef","sectionRef","sectionStyle","sectionwidth","tablesectionStyle","abortController","AbortController","store_fetcheditems","offsetWidth","aField","sleep","aborted","abort","setStateNoneCallListeners","categories","schedules","message","labelitem","found","foundedItem","screenreaderdiv","getSectionWidthCss","divDialogStyle","tableBorderStyle","table_border_color","selectchannels","ddd","tableheaders","tabletds","tableheaders_and_rows","getTableHeadersAndTableRowsAfterChannels","lang","altPlusKeyUpProgramHeader","class","cardHeader","getFetchedDate","ref","href","getPlus1DayId","onClick","onClickSetDateString","getPlus1Day","color","inputid","labeltext","showdcurrentprograms","propref","showAllDescriptions","showOneChannel","textFieldChannelsAtSameTimeChanged","showTableBorders","buttonHidePressed","tabindex","AmppariRoute","control","loadTime","performance","timing","domContentLoadedEventEnd","navigationStart","displayitems","filteredchannels1","n","r","u","a","o","f","h","c","d","l","$","y","M","weekdays","split","months","ordinal","t","m","join","v","z","utcOffset","abs","date","year","clone","ceil","p","w","D","ms","Q","toLowerCase","replace","g","_","S","args","arguments","O","locale","$L","utc","$u","$x","$offset","$d","test","UTC","init","$y","$M","$D","$W","$H","$m","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","daysInMonth","Number","round","subtract","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","T","extend","$i","isDayjs","en","Ls","exports","module","define","AmppariShowProgram","useState","displaydescription","setDisplayDescription","scrollingDlgRef","useRef","dot","onClickDisplay","open","changeDisplayDescriptionValue","changeDisplayDes","timemillisec","hours","minutes","getProgramSymbol","onKeyDown","getPOfTitleIndex","link","openHtmlPage","role","okButtonPressed","close","okText","scrollable","default"],"mappings":"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","file":"9.chunk.7211a.js","sourcesContent":["import { Component, Fragment } from \"preact\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// import moment from 'moment';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Select/style.css';\n//import Formfield from 'preact-material-components/FormField';\n//import 'preact-material-components/Theme/style.css';\n\nimport dayjs from \"dayjs\";\nimport AmppariChannel from \"./AmppariChannel\";\n\n//if (!season) {\n//\tthrow new Error(\"Season is not defined\")\n//}\n\nexport default class ChannelTypes extends Component {\n  _mounted = false;\n  store = null;\n  unsubscribelistener = null;\n  arr_selectchanneltypes = [\"kaikki\", \"ilmaiset\", \"maksulliset\"];\n  fetcheditems = [];\n  channeltypeitems = [];\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"ChannnelTypes.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let today = new Date(Date.now());\n    this.state = {\n      errmsg: null,\n      selectedsuodattimet: \"kaikki\",\n      selectedsuodatinindex: 0,\n      fetcheditems: [],\n      channeltypeitems: [],\n      disabled: props.disabled,\n    };\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount ChannnelTypes\");\n\n    let keys = [];\n    keys.push(\"fetchitems\");\n    this.unsubscribelistener = this.store.subscribeAttributeNameListener(\n      keys,\n      (state) => this.listenerStoreChange2(state)\n    );\n    this.props.setRemoverFunction(this.removelisteners, \"ChannelTypes\");\n    this._mounted = true;\n  }\n\n  componentWillUnmounted() {\n    this.removelisteners();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"ChannnelTypes componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n    if (!this._mounted) return;\n    if (\n      nextProps.disabled != undefined &&\n      nextProps.disabled != this.props.disabled\n    )\n      this.setState({ disabled: nextProps.disabled });\n  }\n\n  removelisteners = () => {\n    if (this.unsubscribelistener != null) {\n      this.unsubscribelistener();\n      this.unsubscribelistener = null;\n    }\n  };\n\n  listenerStoreChange2 = (storestate) => {\n    if (storestate === undefined || storestate === null) {\n      console.log(\"ChannnelTypes listenerStoreChange storestate\");\n      return;\n    }\n    if (!this._mounted) return;\n\n    const fetchitems = storestate.fetchitems;\n    if (fetchitems == this.state.fetchitems) return;\n\n    if (Config.bDebug) {\n      console.log(\"storestate.fetchitems change\");\n      console.log(\"storestate\");\n      console.log(storestate);\n    }\n\n    this.fetchitems = fetchitems;\n    const items = this.filterChannesAfterChannelPay();\n    this.channeltypeitems = items;\n    this.setState({ fetchitems: fetchitems });\n    this.store.setState({ channeltypeitems: items });\n  };\n\n  filterChannesAfterChannelPay = (channeltype) => {\n    //  filterChannesAfterChannelPay takes items from fetcheditems and populates: channeltypeitems,\n    let ind = null;\n    let selected = null;\n    let chtype = null;\n\n    // const fitems = this.state.fetcheditems;\n    const fitems = this.fetchitems;\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay\");\n      console.log(\"channeltype\");\n      console.log(channeltype);\n      console.log(\"fitems\");\n      console.log(fitems);\n      console.log(\"fitems.size\");\n      console.log(fitems.length);\n    }\n    if (channeltype !== undefined) {\n      ind = channeltype.ind;\n      selected = channeltype.selected;\n      chtype = channeltype.channeltype;\n    } else {\n      selected = this.state.selectedsuodattimet;\n      ind = this.state.selectedsuodatinindex;\n    }\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay 2\");\n      console.log(\"ind\");\n      console.log(ind);\n      console.log(\"selected\");\n      console.log(selected);\n    }\n\n    let chls = null;\n    if (fitems == null) chls = null;\n    else if (selected == undefined || selected == null) chls = fitems;\n    else {\n      if (selected == \"kaikki\") chls = fitems;\n      else {\n        let ret = null;\n        if (selected === \"ilmaiset\") {\n          ret = fitems.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.pay === false;\n          });\n        } else if (selected === \"maksulliset\") {\n          ret = fitems.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.pay === true;\n          });\n        }\n        chls = ret;\n      }\n    }\n\n    if (Config.bDebug) {\n      console.log(\"chls 2\");\n      console.log(chls);\n    }\n\n    if (Config.bDebug) {\n      console.log(\"chls - channeltypeitems\");\n      console.log(chls);\n      console.log(\"channeltypeitems.size\");\n      console.log(chls.length);\n    }\n\n    this.channeltypeitems = chls;\n\n    // let chls = this.filterFetchedItemsIntoChannelsAfterSuodin(chtype);\n    /*\n\t\tif (!bChange)\n\t\tthis.setState({\n\t\t\tselectedsuodatinindex: ind,\t\n\t\t\tselectedsuodattimet: selected,\n\t\t\tchanneltypeitems: chls\n\t\t});\n\t\telse\n\t\tthis.setState({\n\t\t\tselectedsuodatinindex: ind,\t\n\t\t\tselectedsuodattimet: selected,\n\t\t\tchanneltypeitems: chls,\n\t\t\tbCheckShowChannelsAtSameTime: true\n\t\t});\n\t\t*/\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay 3\");\n      console.log(this.state);\n    }\n    return chls;\n  };\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    // suodatus=ilmaiset,maksulliset,kaikki\n    //return <Select.Item id={i}>{child}</Select.Item>\n    let selectchanneltypes = this.arr_selectchanneltypes.map((child, i) => {\n      return (\n        <option value={child} id={i}>\n          {child}\n        </option>\n      );\n    });\n\n    return (\n      <Fragment>\n        <span>\n          <label for=\"idchanneltype\">Kanavatyyppi:</label>\n          <select\n            tabIndex=\"0\"\n            disabled={state.disabled}\n            id=\"idchanneltype\"\n            selectedIndex={this.state.selectedsuodatinindex}\n            preselected\n            outlined\n            onChange={(e) => {\n              console.log(\"e.target.target\");\n              console.log(e.target.text);\n              const ind = e.target.selectedIndex;\n              const selected =\n                this.arr_selectchanneltypes[e.target.selectedIndex];\n              let changed = {};\n              changed.ind = ind;\n              changed.selected = selected;\n              let items = this.filterChannesAfterChannelPay(changed);\n              this.setState({\n                selectedsuodatinindex: ind,\n                selectedsuodattimet: selected,\n                channeltypeitems: items,\n              });\n              this.store.setState({ channeltypeitems: items });\n            }}\n          >\n            {selectchanneltypes}\n          </select>\n        </span>\n      </Fragment>\n    );\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__uUe1w\",\"cardHeader\":\"cardHeader__x2VlE\",\"cardBody\":\"cardBody__wlgxk\"};","import { h, Component, Fragment } from \"preact\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// import moment from 'moment';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Select/style.css';\n//import Formfield from 'preact-material-components/FormField';\n//import 'preact-material-components/Theme/style.css';\n\nimport dayjs from \"dayjs\";\n//import AmppariChannel from './AmppariChannel';\n\n//if (!season) {\n//\tthrow new Error(\"Season is not defined\")\n//}\n\nexport default class ProgramTypes extends Component {\n  _mounted = false;\n  store = null;\n  unsubscribelistener = null;\n  arr_selecttyyppi_items = [\"kaikki\", \"elokuvat\", \"urheilu\"];\n  channeltypeitems = [];\n  programtypeitems = [];\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"ProgramTypes.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let today = new Date(Date.now());\n    this.state = {\n      errmsg: null,\n      selectedTyyppiinindex: 0,\n\n      disabled: props.disabled,\n    };\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount ProgramTypes\");\n    //  this.unsubscribelistener = this.store.subscribe( state => this.listenerStoreChange2(state) );\n    let keys = [];\n    keys.push(\"channeltypeitems\");\n    this.unsubscribelistener = this.store.subscribeAttributeNameListener(\n      keys,\n      (state) => this.listenerStoreChange2(state)\n    );\n    this.props.setRemoverFunction(this.removelisteners, \"ProgramTypes\");\n    this._mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"ProgramTypes componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n    if (!this._mounted) return;\n    if (\n      nextProps.disabled != undefined &&\n      nextProps.disabled != this.props.disabled\n    )\n      this.setState({ disabled: nextProps.disabled });\n  }\n\n  removelisteners = () => {\n    if (this.unsubscribelistener != null) {\n      this.unsubscribelistener();\n      this.unsubscribelistener = null;\n    }\n  };\n\n  listenerStoreChange2 = (storestate) => {\n    if (Config.bDebug) {\n      console.log(\"ProgramTypes listenerStoreChange2\");\n      console.log(storestate);\n    }\n    if (storestate === undefined || storestate === null) {\n      if (Config.bDebug)\n        console.log(\"ChannnelTypes listenerStoreChange storestate\");\n      return;\n    }\n    if (!this._mounted) return;\n\n    const fetchitems = storestate.channeltypeitems;\n    if (fetchitems == this.state.channeltypeitems) return;\n\n    if (Config.bDebug) {\n      console.log(\"storestate.channeltypeitems change\");\n      console.log(\"storestate\");\n      console.log(storestate);\n    }\n\n    this.channeltypeitems = fetchitems;\n    this.setState({ channeltypeitems: fetchitems });\n    const items = this.filterAfterProgramType();\n    this.store.setState({ programtypeitems: items });\n  };\n\n  componentWillUnmounted() {\n    this.removelisteners();\n  }\n\n  filterAfterProgramType = (change) => {\n    // if change parameter is undefined, then take value from state!\n    // filterAfterProgramType takes items from channeltypeitems and populates: programtypeitems\n    //         and/or channels if there is no search,\n\n    let ind = null;\n    let mychange = null;\n    if (change == undefined) mychange = this.state.selectedtyyppi;\n    else {\n      ind = change.ind;\n      mychange = change.selected;\n    }\n\n    const fitems = this.channeltypeitems;\n    if (Config.bDebug) {\n      console.log(\"filterAfterProgramType channeltypeitems\");\n      console.log(this.channeltypeitems);\n      console.log(\"channeltypeitems.length\");\n      console.log(fitems.length);\n    }\n\n    let items = fitems;\n    if (mychange == \"kaikki\") items = fitems;\n    else if (mychange === \"elokuvat\") {\n      items = this.getMovieOrSportChannels(mychange);\n    } else if (mychange === \"urheilu\") {\n      items = this.getMovieOrSportChannels(mychange);\n    }\n\n    this.programtypeitems = items;\n    this.channels = items;\n    if (Config.bDebug) {\n      console.log(\"programtypeitems\");\n      console.log(this.programtypeitems);\n      console.log(\"programtypeitems.length\");\n      console.log(this.programtypeitems.length);\n    }\n    /*\t\t\n\t\tif (change !== undefined)\n\t\t\tthis.setState({ programtypeitems: items,\n\t\t\t\tselectedTyyppiinindex: ind,\n\t\t\t\tselectedtyyppi: selected\n\t\t\t\t});\n\t\telse\n\t\t\tthis.setState({ programtypeitems: items\t});\n\t\t\t*/\n\n    // { fetcheditems: data, channels: data,\n    //\tbUnderFetch: false, selectedsuodattimet: 'kaikki',\n    //\t\tselectedtyyppi: 'kaikki', selectedTyyppiinindex: 0,\n    //\t\tselectedsuodatinindex: 0 }\n    return items;\n  };\n\n  getMovieOrSportChannels = (selected) => {\n    const fitems = this.channeltypeitems;\n    if (fitems == null) return null;\n    if (selected == undefined || selected == null) return null;\n    let ret = null;\n    let foundmovies = selected === \"elokuvat\";\n    let foundsport = selected === \"urheilu\";\n    let chcoopy, foundedPrograms, progfounded;\n    let foundedChannels = [];\n\n    Array.from(fitems).forEach((cha) => {\n      if (cha === undefined) return;\n      chcoopy = {};\n      Object.assign(chcoopy, cha);\n      /*\n\t\t\tif (Config.bDebug)\n\t\t\t{\n\t\t\t\tconsole.log(\"chcoopy\");\n\t\t\t\tconsole.log(chcoopy);\n\t\t\t\tconsole.log(\"chcoopy.channelprograms\");\n\t\t\t\tconsole.log(chcoopy.channelprograms);\n\t\t\t}\n\t\t\t*/\n      foundedPrograms = [];\n      progfounded = false;\n\n      let prcopy = null;\n      Array.from(chcoopy.channelprograms).forEach((pr) => {\n        // cha.channelprograms.forEach(pr, i => {\n        if (pr === undefined) return;\n        if (foundmovies && pr.movie) {\n          progfounded = true;\n          foundedPrograms.push(pr);\n        } else if (foundsport && pr.sport) {\n          progfounded = true;\n          foundedPrograms.push(pr);\n        }\n      });\n\n      if (progfounded) {\n        if (foundedPrograms != null && foundedPrograms.length != 0) {\n          chcoopy.channelprograms = foundedPrograms;\n          foundedChannels.push(chcoopy);\n        }\n      }\n    });\n\n    return foundedChannels;\n  };\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    // \t\t\treturn <Select.Item id={i}>{child}</Select.Item>\n    let selecttyyppi_items = this.arr_selecttyyppi_items.map((child, i) => {\n      return (\n        <option id={i} value={child}>\n          {child}\n        </option>\n      );\n    });\n\n    return (\n      <Fragment>\n        <span>\n          <label for=\"idprogramtype\">Ohjelmatyyppi:</label>\n          <select\n            tabIndex=\"0\"\n            id=\"idprogramtype\"\n            disabled={state.disabled}\n            selectedIndex={this.state.selectedTyyppiinindex}\n            preselected\n            outlined\n            onChange={(e) => {\n              console.log(\"e.target.target\");\n              console.log(e.target.text);\n              const ind = e.target.selectedIndex;\n              const selected = this.arr_selecttyyppi_items[ind];\n              let changed = {};\n              changed.ind = ind;\n              changed.selected = selected;\n              const items = this.filterAfterProgramType(changed);\n              this.setState({\n                selectedTyyppiinindex: ind,\n                selectedtyyppi: selected,\n                channels: items,\n              });\n              this.store.setState({\n                programtypeitems: items,\n                selectedtyyppi: selected,\n              });\n            }}\n          >\n            {selecttyyppi_items}\n          </select>\n        </span>\n      </Fragment>\n    );\n  }\n}\n","import { h, Component, Fragment } from \"preact\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// import moment from 'moment';\n//import Button from 'preact-material-components/Button';\nimport Button from \"../button/Button\";\n//import 'preact-material-components/Button/style.css';\n//import TextField from 'preact-material-components/TextField';\n//import 'preact-material-components/TextField/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Formfield from 'preact-material-components/FormField';\n//import 'preact-material-components/Theme/style.css';\n\nimport dayjs from \"dayjs\";\nimport AmppariChannel from \"./AmppariChannel\";\n\nexport default class SearchPrograms extends Component {\n  _mounted = false;\n  store = null;\n  unsubscribelistener = null;\n  programtypeitems = [];\n  textSearch = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"SearchPrograms.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let today = new Date(Date.now());\n    this.state = {\n      errmsg: null,\n      programtypeitems: [],\n      channeltypeitems: [],\n      textSearch: null,\n      bDisplayAllDescriptions: false,\n      disabled: props.disabled,\n    };\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount SearchPrograms\");\n\n    let keys = [];\n    keys.push(\"programtypeitems\");\n    this.unsubscribelistener = this.store.subscribeAttributeNameListener(\n      keys,\n      (state) => this.listenerStoreChange2(state)\n    );\n    this.props.setRemoverFunction(this.removelisteners, \"SearchPrograms\");\n    this._mounted = true;\n  }\n\n  componentWillUnmounted() {\n    this.removelisteners();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"SearchPrograms componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n    if (!this._mounted) return;\n    if (\n      nextProps.disabled != undefined &&\n      nextProps.disabled != null &&\n      nextProps.disabled != this.props.disabled\n    )\n      this.setState({ disabled: nextProps.disabled });\n  }\n\n  removelisteners = () => {\n    if (this.unsubscribelistener != null) {\n      this.unsubscribelistener();\n      this.unsubscribelistener = null;\n    }\n  };\n\n  listenerStoreChange2 = (storestate) => {\n    if (Config.bDebug) {\n      console.log(\"SearchPrograms listenerStoreChange2\");\n      console.log(storestate);\n    }\n    if (storestate === undefined || storestate === null) {\n      console.log(\"SearchPrograms listenerStoreChange storestate\");\n      return;\n    }\n    if (!this._mounted) return;\n\n    const programtypeitems = storestate.programtypeitems;\n    if (programtypeitems == undefined || programtypeitems == null) return;\n    if (programtypeitems == this.state.programtypeitems) return;\n\n    /*\n\t\tif (Config.bDebug)\n\t\t{\n\t\t\tconsole.log(\"storestate change\");\n\t\t\tconsole.log(\"storestate\");\n\t\t\tconsole.log(storestate);\n\t\t}\n\t\t*/\n\n    this.programtypeitems = programtypeitems;\n    /*\n\t\tconsole.log(\"before programtypeitems\");\n\t\tconsole.log(programtypeitems);\n\t\t*/\n    const items = this.filterAfterSearch();\n    this.setState({ programtypeitems: programtypeitems });\n    let bSearchButtonClicked = false;\n    let bDisplayAllDescriptions = false;\n    if (items != this.programtypeitems) {\n      bSearchButtonClicked = true;\n      bDisplayAllDescriptions = true;\n      this.props.setDisplayAllDescriptionsTrue(this.textSearch);\n    }\n    /*\n\t\tconsole.log(\"before store channels\");\n\t\tconsole.log(items);\n\t\t*/\n    this.store.setState({\n      channels: items,\n      bSearchButtonClicked: bSearchButtonClicked,\n      textSearch: this.textSearch,\n      bDisplayAllDescriptions: bDisplayAllDescriptions,\n    });\n  };\n\n  searchTextFromChannelsClicked = (event) => {\n    event.preventDefault();\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked\");\n    }\n\n    const searchText = this.textSearch;\n    if (Config.bDebug) {\n      console.log(\"searchText 2 \");\n      console.log(searchText);\n    }\n    if (\n      searchText == undefined ||\n      searchText == null ||\n      searchText.trim().length == 0\n    )\n      return;\n    // to start make indirect the search:\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked 2 \");\n    }\n\n    console.log(\"before programtypeitems filter\");\n    console.log(this.programtypeitems);\n    this.programtypeitems = this.state.programtypeitems;\n    this.setState({ bSearchButtonClicked: true });\n    const items = this.filterAfterSearch(true);\n    let bSearchButtonClicked = false;\n    let bDisplayAllDescriptions = false;\n    if (items != this.programtypeitems) {\n      bSearchButtonClicked = true;\n      bDisplayAllDescriptions = true;\n      this.props.setDisplayAllDescriptionsTrue(this.textSearch);\n    }\n    this.setState({\n      bSearchButtonClicked: true,\n      bDisplayAllDescriptions: true,\n    });\n    console.log(\"before store channels\");\n    console.log(items);\n    this.store.setState({\n      channels: items,\n      bSearchButtonClicked: bSearchButtonClicked,\n      textSearch: this.textSearch,\n      bDisplayAllDescriptions: true,\n    });\n    console.log(\"after store\");\n    console.log(this.store.getState());\n    // this.forceUpdate();\n  };\n\n  makeSearchChange = (change) => {\n    const bSearch = this.state.bSearchButtonClicked;\n    if (\n      /* bSearch && */ change === undefined ||\n      change === null ||\n      change.toString().trim().length == 0\n    ) {\n      this.textSearch = null;\n      this.setState({ textSearch: null, bSearchButtonClicked: false });\n      this.store.setState({\n        channels: this.programtypeitems,\n        bSearchButtonClicked: false,\n        textSearch: null,\n        bDisplayAllDescriptions: false,\n      });\n    } else this.textSearch = change;\n  };\n\n  textFieldSearchChanged = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldSearchChanged\");\n      console.log(value);\n    }\n    this.makeSearchChange(value);\n  };\n\n  filterAfterSearch = (change) => {\n    // if change parameter is undefined, then take value from state!\n    // filterAfterSearch takes items from programtypeitems and populates: channels if there is a\n    // ongoing search.\n    let mychange = null;\n    if (change == undefined) mychange = this.state.bSearchButtonClicked;\n    else {\n      mychange = change;\n    }\n\n    let bAllChannels = false;\n    let foundedChannels = [];\n    let foundedPrograms = [];\n\n    if (Config.bDebug) {\n      console.log(\"filterAfterSearch mychange\");\n      console.log(mychange);\n    }\n\n    this.channels = this.programtypeitems;\n    if (mychange !== undefined && mychange !== null && mychange) {\n      let all_channels = this.channels;\n      //let all_channels = this.channels;\n      if (Config.bDebug) {\n        console.log(\"all_channels\");\n        console.log(all_channels);\n        console.log(\"all_channels.length\");\n        console.log(all_channels.length);\n      }\n\n      if (all_channels == null) {\n        return null; // this.setState({ bSearchButtonClicked: false, channels: null});\n      } else {\n        // const searchText = this.state.textSearch;\n        const searchText = this.textSearch;\n        if (Config.bDebug) {\n          console.log(\"searchText\");\n          console.log(searchText);\n        }\n        if (searchText == null || searchText.toString().trim().length == 0) {\n          //\t\t\t\t\tthis.setState({ bSearchButtonClicked: false,\n          //\t\t\t\t\t\tchannels: all_channels});\n        } else {\n          let foundedChannelsTitle = null;\n          let index = -1;\n          let founded = false;\n          let progfounded = false;\n          let uppersearchText = searchText.toUpperCase();\n          let chcoopy = {};\n\n          let search_channels = all_channels;\n          if (\n            this.state.bCheckShowChannelsAtSameTime &&\n            this.state.selectedchannelindex != -1\n          ) {\n            console.log(\"filter search bCheckShowChannelsAtSameTime\");\n            let selectedTitle =\n              search_channels[this.state.selectedchannelindex].title;\n            let filteredchannels = search_channels.filter((s, i) => {\n              //\tconsole.log(\"i\");\n              //\tconsole.log(i);\n              return s.title === selectedTitle;\n            });\n            search_channels = filteredchannels;\n          }\n\n          if (Config.bDebug) {\n            console.log(\"search_channels\");\n            console.log(search_channels);\n          }\n\n          Array.from(search_channels).forEach((cha) => {\n            chcoopy = {};\n            index = -1;\n            founded = false;\n            if (cha === undefined) return;\n            // this.state.channels.forEach(cha, i => {\n            Object.assign(chcoopy, cha);\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"chcoopy\");\n\t\t\t\t\t\t\tconsole.log(chcoopy);\n\t\t\t\t\t\t\tconsole.log(\"chcoopy.channelprograms\");\n\t\t\t\t\t\t\tconsole.log(chcoopy.channelprograms);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            index = chcoopy.title\n              ? chcoopy.title.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              chcoopy.titleindex = index;\n              founded = true;\n              if (Config.bDebug) {\n                console.log(\"founded channel title chcoopy\");\n                console.log(chcoopy);\n              }\n            }\n            foundedPrograms = [];\n\n            let prcopy = null;\n            Array.from(chcoopy.channelprograms).forEach((pr) => {\n              // cha.channelprograms.forEach(pr, i => {\n              progfounded = false;\n              prcopy = null;\n              index = pr.title\n                ? pr.title.toString().toUpperCase().indexOf(uppersearchText)\n                : -1;\n              if (index != -1) {\n                if (prcopy == null) {\n                  prcopy = {};\n                  Object.assign(prcopy, pr);\n                }\n                prcopy.titleindex = index;\n                /*\n\t\t\t\t\t\t\t\tprcopy.title = pr.title;\n\t\t\t\t\t\t\t\tprcopy.description = pr.description;\n\t\t\t\t\t\t\t\tprcopy.channel  = pr.channel;\n\t\t\t\t\t\t\t\tprcopy.id  = pr.id;\n\t\t\t\t\t\t\t\tprcopy.movie  = pr.movie;\n\t\t\t\t\t\t\t\tprcopy.sport  = pr.sport;\n\t\t\t\t\t\t\t\tprcopy.timestamp  = pr.timestamp;\t\n\t\t\t\t\t\t\t\t*/\n\n                founded = true;\n                progfounded = true;\n                if (Config.bDebug) {\n                  console.log(\"founded program title\");\n                  console.log(prcopy);\n                }\n              }\n              index = pr.description\n                ? pr.description\n                    .toString()\n                    .toUpperCase()\n                    .indexOf(uppersearchText)\n                : -1;\n              if (index != -1) {\n                if (prcopy == null) {\n                  prcopy = {};\n                  Object.assign(prcopy, pr);\n                }\n                prcopy.descriptionindex = index;\n                founded = true;\n                /*\n\t\t\t\t\t\t\t\tprcopy.title = pr.title;\n\t\t\t\t\t\t\t\tprcopy.description = pr.description;\n\t\t\t\t\t\t\t\tprcopy.channel  = pr.channel;\n\t\t\t\t\t\t\t\tprcopy.id  = pr.id;\n\t\t\t\t\t\t\t\tprcopy.movie  = pr.movie;\n\t\t\t\t\t\t\t\tprcopy.sport  = pr.sport;\n\t\t\t\t\t\t\t\tprcopy.timestamp  = pr.timestamp;\n\t\t\t\t\t\t\t\t*/\n\n                progfounded = true;\n                if (Config.bDebug) {\n                  console.log(\"founded program description\");\n                  console.log(prcopy);\n                }\n              }\n              if (progfounded) foundedPrograms.push(prcopy);\n            });\n\n            if (founded) {\n              if (foundedPrograms != null && foundedPrograms.length != 0)\n                chcoopy.channelprograms = foundedPrograms;\n              else chcoopy.channelprograms = cha.channelprograms;\n              foundedChannels.push(chcoopy);\n            }\n          });\n\n          if (foundedChannels == null || foundedChannels.length == 0) {\n            // if (change == undefined)\n            // this.setState({ bSearchButtonClicked: false,\n            //\tchannels: null});\n            this.channels = null;\n          } else {\n            if (Config.bDebug) {\n              console.log(\"foundedChannels\");\n              console.log(this.foundedChannels);\n              console.log(\"foundedChannels.length\");\n              console.log(foundedChannels.length);\n            }\n            /*\n\t\t\t\t\t\tthis.setState({ bSearchButtonClicked: true, \n\t\t\t\t\t\t\tchannels: foundedChannels});\n\t\t\t\t\t\t\t*/\n            this.channels = foundedChannels;\n            return foundedChannels;\n          }\n        }\n      }\n    } else {\n      //\t\t\tthis.setState({ bSearchButtonClicked: false,\n      //\t\t\t\tchannels: this.state.programtypeitems });\n    }\n    return this.channels;\n  };\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    const inputw =\n      \"float: none; display: inline-block; vertical-align: middle; \";\n    const buttoninputw =\n      \"float: none; display: inline-block; vertical-align: middle; \" +\n      (props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"\"\n        : \" color: white; \");\n\n    return (\n      <Fragment>\n        <span>\n          <label for=\"idsearchvalue\" style={inputw}>\n            Etsi tekstiä ohjelmista:\n          </label>\n          <input\n            type=\"text\"\n            tabIndex=\"0\"\n            id=\"idsearchvalue\"\n            disabled={state.disabled}\n            onKeyUp={this.textFieldSearchChanged}\n            style={\" width: 30%;\" + inputw}\n          />\n          <space> </space>\n          <Button\n            tabIndex=\"0\"\n            ripple\n            raised\n            tabIndex=\"0\"\n            disabled={state.disabled}\n            style={buttoninputw}\n            onClick={this.searchTextFromChannelsClicked}\n            aria-label=\"Hae\"\n            text=\"Hae\"\n          ></Button>\n        </span>\n      </Fragment>\n    );\n  }\n}\n","import { h, Component, createRef, Fragment } from \"preact\";\n\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import 'preact-material-components/Button/style.css';\nimport AbortController from \"abort-controller\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// import fetchJsonp from 'fetch-jsonp';\n// import moment from 'moment';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Sele_ct/style.css';\n// import Checkbox from 'preact-material-components/Checkbox';\n//import Formfield from 'preact-material-components/FormField';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\n//import TextField from 'preact-material-components/TextField';\n//import 'preact-material-components/TextField/style.css';\n//import 'preact-material-components/Theme/style.css';\n\nimport Button from \"../button/Button\";\n\nimport dayjs from \"dayjs\";\nimport AmppariChannel from \"./AmppariChannel\";\nimport ChannelTypes from \"./ChannelTypes\";\nimport ProgramTypes from \"./ProgramTypes\";\nimport SearchPrograms from \"./SearchPrograms\";\nimport SwitchCheckbox from \"../checkbox/CheckBox\";\n\n// import store from '../../utils/store';\n\nString.prototype.indexOfRegex = function (regex, fromIndex) {\n  var str = fromIndex ? this.substring(fromIndex) : this;\n  var match = str.match(regex);\n  return match ? str.indexOf(match[0]) + fromIndex : -1;\n};\n\nString.prototype.lastIndexOfRegex = function (regex, fromIndex) {\n  var str = fromIndex ? this.substring(0, fromIndex) : this;\n  var match = str.match(regex);\n  return match ? str.lastIndexOf(match[match.length - 1]) : -1;\n};\n\nconst filtercalled = {\n  PROGRAMTYPE: \"programtype\",\n  CHANNELTYPE: \"channeltype\",\n  SEARCHCHANE: \"searchchange\",\n  MAKESEARCH: \"makesearch\",\n};\n\n//let season = seasons.SPakRING\n//if (!season) {\n//\tthrow new Error(\"Season is not defined\")\n//}\n\nexport default class Amppari extends Component {\n  store = null;\n  unsubscribelistener = null;\n  fetch_url_telkku = null;\n  fetch_url_ampparissa = null;\n  arr_selecttyyppi_items = [\"kaikki\", \"elokuvat\", \"urheilu\"];\n  arr_selectchanneltypes = [\"kaikki\", \"ilmaiset\", \"maksulliset\"];\n  ilmaisetchannelnames = [\n    \"Yle TV1\",\n    \"Yle TV2\",\n    \"MTV3\",\n    \"Nelonen\",\n    \"Yle Teema Fem\",\n    \"Sub\",\n    \"TV Viisi\",\n    \"Liv\",\n    \"Jim\",\n    \"Kutonen\",\n    \"TLC\",\n    \"Fox\",\n    \"Ava\",\n    \"Hero\",\n    \"alfatv\",\n    \"frii\",\n    \"National Geoprafic\",\n  ];\n  search_start_program = '[\"^2\",';\n  search_end_program = /\\]\\](,*)/gi;\n  showAllDescrRef = null;\n  showOneChannelRef = null;\n  selectChannelRef = null;\n  const_showChannelsAtSameTime = 10;\n  showTableBordersRef = null;\n  channelTypeRef = null;\n  searchProgramRef = null;\n  programTypeRef = null;\n  tablCntl = null;\n\n  fetcheditems = [];\n  channeltypeitems = [];\n  programtypeitems = [];\n  channels = [];\n  textSearch = null;\n  _mounted = false;\n\n  removerfunctionProgramType = null;\n  removerfunctionSearchProgram = null;\n  removerfunctionChannelType = null;\n  checkshowdcurrentprogramsRef = null;\n  bUnderFetch = false;\n  sectionStyle = null;\n  tablesectionStyle = null;\n  sectionRef = null;\n  section_width = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"Amppari.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let today = new Date(Date.now());\n    this.state = {\n      errmsg: null,\n      html: null,\n      selecteddate: null,\n      selectedaika: \"paiva\",\n      selectedsuodattimet: \"kaikki\",\n      selectedtyyppi: \"kaikki\",\n      selectedTyyppiinindex: 0,\n      selectedsuodatinindex: 0,\n      searchsanat: \"\",\n      fetcheditems: [],\n      channeltypeitems: [],\n      programtypeitems: [],\n      channels: [],\n      selectedpage: 1,\n      today: new Date(Date.now),\n\n      currentchannel: null,\n      bDisplayAllDescriptions: false,\n      showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n      selectedchannelindex: 0,\n      bCheckShowChannelsAtSameTime: false,\n      currentChannelSetIndex: 0,\n      bUnderFetch: false,\n      bAllChannelsLoaded: false,\n      textSearch: null,\n      bSearchButtonClicked: false,\n      bShowTableBorder: false,\n      bshowdcurrentprograms: true,\n      themevalue: props.themevalue,     \n      hideButton: false,\n      hideButtonText: 'Piilota ohje',\n    };\n\n    // https://telkussa.fi/sivu/1/20210215\n    this.fetch_url_telkku = \"/telkkussa/\";\n    // tyyppi=kaikki,urheilu,elokuvat\n    // aika=paiva,tulevat,nyt,ilta,yo\n    // pvm=2021-02-22\n    // suodatus=ilmaiset,maksulliset,kaikki\n    // https://www.ampparit.com/tv?aika=paiva&pvm=2021-02-22&sanat=&suodatus=ilmaiset&tyyppi=elokuvat\n    this.fetch_url_ampparissa = Config.http_curlserver + \"/ampparissa/tv\";\n    this.AmppariException = this.AmppariException.bind(this);\n    // location.host\n    this.showAllDescrRef = createRef();\n    this.showOneChannelRef = createRef();\n    this.selectChannelRef = createRef();\n    this.showTableBordersRef = createRef();\n    this.channelTypeRef = createRef();\n    this.searchProgramRef = createRef();\n    this.programTypeRef = createRef();\n    this.tablCntl = createRef();\n    this.checkshowdcurrentprogramsRef = createRef();\n    this.sectionRef = createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"Amppari componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n\n    if (nextProps !== null && nextProps.themevalue != this.props.themevalue) {\n      this.setState({ themevalue: nextProps.themevalue });\n      this.sectionStyle =\n        nextProps.themevalue !== undefined && nextProps.themevalue !== \"\"\n          ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth)\n          : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth);\n      this.tablesectionStyle =\n        nextProps.themevalue !== undefined && nextProps.themevalue !== \"\"\n          ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \"\n          : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\";\n    }\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    this.abortController = new AbortController(); // 1\n    this.abortSignal = this.abortController.signal; // 2\n    //\tthis.unsubscribelistener = this.store.subscribe( state => this.listenerStoreChange2(state) );\n    let keys = [];\n    keys.push(\"channels\");\n    this.unsubscribelistener = this.store.subscribeAttributeNameListener(\n      keys,\n      (state) => this.listenerStoreChange2(state)\n    );\n    // this.openHtmlTelkkuPage(this.state.selectedpage);\n    this._mounted = true;\n    const store_fetcheditems = this.store.getState().fetcheditems;\n    if (store_fetcheditems) {\n      this.setState({ fetcheditems: store_fetcheditems });\n      this.store.setState({ fetcheditems: store_fetcheditems });\n    }\n  //  document.getElementById(\"programtable\").onkeydown = this.altPlusKeyUp;\n    this.section_width = this.sectionRef.current.offsetWidth;  \n    let aField = document.getElementById('focus_1_element'); \n    if (aField) \n    {\n      this.sleep(500);\n      aField.focus();    \n    }\n  }\n\n  sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n  \n\n  removelisteners = () => {\n    if (this.unsubscribelistener != null) {\n      this.unsubscribelistener();\n      this.unsubscribelistener = null;\n    }\n    if (this.removerfunctionProgramType) this.removerfunctionProgramType();\n    if (this.removerfunctionSearchProgram) this.removerfunctionSearchProgram();\n    if (this.removerfunctionChannelType) this.removerfunctionChannelType();\n  };\n\n  setRemoverFunction = (func, fname) => {\n    if (fname === \"ProgramTypes\") this.removerfunctionProgramType = func;\n    else if (fname === \"SearchPrograms\")\n      this.removerfunctionSearchProgram = func;\n    else if (fname === \"ChannelTypes\") this.removerfunctionChannelType = func;\n  };\n\n  componentWillUnmount() {\n    if (this.abortSignal && !this.abortSignal.aborted)\n      this.abortController.abort();\n    this.removelisteners();\n    this.setState({});\n    this.store.setStateNoneCallListeners({\n      fetchitems: [],\n      channeltypeitems: [],\n      programtypeitems: [],\n      categories: [],\n      schedules: [],\n    });\n    this._mounted = false;\n  }\n\n  listenerStoreChange2 = (storestate) => {\n    if (Config.bDebug) {\n      console.log(\"Amppari listenerStoreChange2\");\n      console.log(storestate);\n    }\n    if (storestate === undefined || storestate === null) {\n      console.log(\"Amppari listenerStoreChange storestate\");\n      return;\n    }\n\n    const channels = storestate.channels;\n    const bSearchButtonClicked = storestate.bSearchButtonClicked;\n    const bDisplayAllDescriptions = storestate.bDisplayAllDescriptions;\n    const textSearch = storestate.textSearch;\n    const selectedTyyppiinindex = storestate.selectedTyyppiinindex;\n    this.channels = channels;\n    this.textSearch = textSearch;\n    let store_selectedtyyppi = storestate.selectedtyyppi;\n    if (\n      store_selectedtyyppi &&\n      store_selectedtyyppi != this.state.selectedtyyppi\n    ) {\n      this.setState({ selectedtyyppi: store_selectedtyyppi });\n    }\n    /*\n\t\tif (this.state.bDisplayAllDescriptions !== bDisplayAllDescriptions )\n\t\t{\n\t\t\tlet value = this.showAllDescrRef.current.checked;\n\t\t\tif (!value && bDisplayAllDescriptions)\n\t\t\t\tthis.showAllDescrRef.current.checked = true;\n\t\t\telse\n\t\t\tif (value && !bDisplayAllDescriptions)\n\t\t\t\tthis.showAllDescrRef.current.checked = false;\n\t\t\tthis.setState({ bDisplayAllDescriptions: bDisplayAllDescriptions,\n\t\t\t});\t\t\n\t\t}\n\t\t*/\n    if (bSearchButtonClicked && textSearch) {\n      this.setState({ bDisplayAllDescriptions: true });\n    }\n    this.setState({\n      channels: channels,\n      textSearch: textSearch,\n      bSearchButtonClicked: bSearchButtonClicked,\n      selectedTyyppiinindex: 0,\n    });\n\n    if (Config.bDebug) {\n      console.log(\"-- 3 bSearchButtonClicked\");\n      console.log(bSearchButtonClicked);\n      console.log(\"-- 3 bDisplayAllDescriptions\");\n      console.log(bDisplayAllDescriptions);\n      console.log(\"-- 3 textSearch\");\n      console.log(textSearch);\n      console.log(\"-- 3 channels\");\n      console.log(channels);\n      console.log(\"-- 3\");\n      console.log(this.state);\n    }\n  };\n\n  componentWillUnmounted() {\n    if (this.unsubscribelistener != null) this.unsubscribelistener();\n  }\n\n  AmppariException(message) {\n    this.message = message;\n    this.name = \"AmppariException\";\n  }\n\n  getSelectedDateParam = () => {\n    let selday = this.state.selecteddate;\n    let month = \"\" + (selday.getMonth() + 1);\n    if (month.trim().length === 1) month = \"0\" + month;\n    let day = \"\" + selday.getDate();\n    if (day.trim().length === 1) day = \"0\" + day;\n    return \"\" + selday.getFullYear() + month + day;\n  };\n\n  getNextJsonArrayAfterLabel(json, labelitem) {\n    let ret = null;\n    /*\n\t\tif(Config.bDebug) \n\t\t{\n\t\t\tconsole.log(\"getNextJsonArrayAfterLabel\"); \n\t\t\tconsole.log(\"json\"); \n\t\t\tconsole.log(json); \n\t\t\tconsole.log(\"labelitem\"); \n\t\t\tconsole.log(labelitem); \n\t\t}\n\t\t*/\n    if (labelitem == undefined || labelitem == null) return null;\n    if (json == undefined || json == null || json.length == 0) return null;\n    let iCount = 0;\n    let found = false,\n      founded = false;\n    let foundedItem = null;\n\n    let i = 0;\n    let item = null;\n    let max = json.length;\n\n    for (\n      i = 0;\n      i < max;\n      i++ //Array.from(json).forEach(item =>\n    ) {\n      item = json[i];\n      iCount = iCount + 1;\n      if (!founded) {\n        if (\n          !found &&\n          typeof item === \"string\" &&\n          item.toString() === labelitem\n        ) {\n          found = true;\n          /*\n\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t{\t\t\t\n\t\t\t\t\t\tconsole.log(\"iCount \" +iCount);\n\t\t\t\t\t\tconsole.log(\"found = true\");\n\t\t\t\t\t}\n\t\t\t\t\t*/\n        } else {\n          if (found) {\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(\"iCount \" +iCount);\n\t\t\t\t\t\t\tconsole.log(\"return item\");\n\t\t\t\t\t\t\tconsole.log(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            foundedItem = item;\n            founded = true;\n            return item;\n          }\n        }\n      }\n    }\n    // });\n\n    if (foundedItem == null) console.log(\"return null\");\n\n    return foundedItem;\n  }\n\n  getChannelsAndPrograms = (tvchannels) => {\n    let ret = null;\n    if (tvchannels == undefined || tvchannels == null || tvchannels.length == 0)\n      return null;\n    let jsonch;\n    let channels = [];\n\n    Array.from(tvchannels).forEach((item) => {\n      if (item === undefined) return;\n      jsonch = this.getJsonChannel(item);\n      if (jsonch !== null) channels.push(jsonch);\n    });\n    return channels;\n  };\n\n  getArrayIntoChannel = (channel) => {\n    let ret = null;\n    if (Config.bDebug) {\n      console.log(\"getArrayIntoChannel\");\n      console.log(channel);\n    }\n    if (channel == null) return null;\n    ret = {};\n    let name = this.getNextJsonArrayAfterLabel(channel, \"name\");\n    let slug = this.getNextJsonArrayAfterLabel(channel, \"slug\");\n    let pay = this.getNextJsonArrayAfterLabel(channel, \"pay\");\n    ret.title = name;\n    ret.slug = slug;\n    ret.pay = pay;\n    return ret;\n  };\n\n  getJsonProgram = (pr) => {\n    let ret = null;\n    if (Config.bDebug) {\n      console.log(\"getJsonProgram\");\n      console.log(pr);\n    }\n    if (pr == null) return null;\n    let pr2 = pr[1]; // this.getNextJsonArrayAfterLabel(pr, '^2');\n    ret = {};\n    let id = this.getNextJsonArrayAfterLabel(pr2, \"id\");\n    let timestamp = this.getNextJsonArrayAfterLabel(pr2, \"timestamp\");\n    let title = this.getNextJsonArrayAfterLabel(pr2, \"title\");\n    let description = this.getNextJsonArrayAfterLabel(pr2, \"description\");\n    let channel = this.getNextJsonArrayAfterLabel(pr2, \"channel\");\n    let movie = this.getNextJsonArrayAfterLabel(pr2, \"movie\");\n    let sport = this.getNextJsonArrayAfterLabel(pr2, \"sport\");\n    ret.id = id;\n    ret.title = title;\n    ret.timestamp = timestamp;\n    ret.description = description;\n    ret.channel = channel;\n    ret.movie = movie;\n    ret.sport = sport;\n    return ret;\n  };\n\n  getJsonChannel = (ch) => {\n    // , tvchannels3, tvprograms,\n    let ch2 = ch[1]; // this.getNextJsonArrayAfterLabel(ch, '^2');\n    let tvchannel = ch2[1]; // this.getNextJsonArrayAfterLabel(ch2, 'channel');\n    if (Config.bDebug) {\n      console.log(\"tvchannel\");\n      console.log(tvchannel);\n    }\n    let channel = tvchannel[1]; // this.getNextJsonArrayAfterLabel(tvchannel, '^2');\n    let tvprograms = this.getNextJsonArrayAfterLabel(ch2, \"programs\");\n    let programs = tvprograms[1]; // this.getNextJsonArrayAfterLabel(tvprograms, '^F');\n    if (Config.bDebug) {\n      console.log(\"programs\");\n      console.log(programs);\n    }\n\n    let jsonprograms = [];\n    let jsonpr = null;\n    let jsonchannel = this.getArrayIntoChannel(channel);\n    if (jsonchannel == null) return null;\n\n    Array.from(programs).forEach((pr) => {\n      if (pr === undefined) return;\n      jsonpr = this.getJsonProgram(pr);\n      if (jsonpr !== null) jsonprograms.push(jsonpr);\n    });\n\n    jsonchannel.channels = jsonprograms;\n    return jsonchannel;\n  };\n\n  getChannelsAndProgramsFromJsonArray = (json) => {\n    let tv = null,\n      programming = null,\n      f = null,\n      channel = null,\n      programs = null;\n    let i,\n      j,\n      max = json.length,\n      maxj,\n      data = null;\n    let searchtext = \"tv\",\n      foundSearchText = false;\n\n    for (i = 0; i < max; i++) {\n      if (\n        !foundSearchText &&\n        typeof json[i] === \"string\" &&\n        json[i] === searchtext\n      )\n        foundSearchText = true;\n      else if (foundSearchText) {\n        if (searchtext === \"tv\") {\n          tv = json[i][1];\n          searchtext = \"programming\";\n          foundSearchText = false;\n          programming = tv[1][1];\n          maxj = programming.length;\n          let channels = [];\n          let jsonchannel = {};\n          let programchannels = [];\n\n          for (j = 0; j < maxj; j++) {\n            /*\n\t\t\t\t\t\tif(Config.bDebug) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"programming \" +j); \n\t\t\t\t\t\t\tconsole.log(programming[j]\t); \n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            channel = programming[j][1][1][1];\n            programs = programming[j][1][3][1];\n            /*\n\t\t\t\t\t\tif(Config.bDebug) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"channel\"); \n\t\t\t\t\t\t\tconsole.log(channel); \n\t\t\t\t\t\t\tconsole.log(\"programs\"); \n\t\t\t\t\t\t\tconsole.log(programs); \n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            jsonchannel = {};\n            jsonchannel.id = channel[1];\n            jsonchannel.title = channel[3];\n            jsonchannel.slug = channel[5];\n            jsonchannel.pay = channel[7];\n            let k = 0,\n              maxk = programs.length,\n              jsonprogram,\n              progdata,\n              jsonprograms = [];\n            for (k = 0; k < maxk; k++) {\n              jsonprogram = {};\n              progdata = programs[k][1];\n              // sometimes data values are in different order!:\n              jsonprogram.id = this.getNextJsonArrayAfterLabel(progdata, \"id\");\n              jsonprogram.timestamp = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"timestamp\"\n              );\n              jsonprogram.title = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"title\"\n              );\n              jsonprogram.description = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"description\"\n              );\n              jsonprogram.channel = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"channel\"\n              );\n              jsonprogram.movie = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"movie\"\n              );\n              jsonprogram.sport = this.getNextJsonArrayAfterLabel(\n                progdata,\n                \"sport\"\n              );\n              jsonprograms.push(jsonprogram);\n            }\n            jsonchannel.channelprograms = jsonprograms;\n            /*\n\t\t\t\t\t\tif(Config.bDebug) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"jsonchannel\"); \n\t\t\t\t\t\t\tconsole.log(jsonchannel); \n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            programchannels.push(jsonchannel);\n          }\n          return programchannels;\n        }\n      }\n    }\n\n    return null;\n    /*\n\t\tlet tvchannels1 = this.getNextJsonArrayAfterLabel(json2, 'tv');\n\t\tlet tvchannels2 = tvchannels1[1];\n\t\tif(Config.bDebug) \n\t\t{\n\t\t\tconsole.log(\"tvchannels2\"); \n\t\t\tconsole.log(tvchannels2); \n\t\t}\n\t\t\n\t\tlet tvchannels3 = this.getNextJsonArrayAfterLabel(tvchannels2, 'programming');\n\t\tlet tvchannels = this.getNextJsonArrayAfterLabel(tvchannels3, '^F');\n\t\tlet data = this.getChannelsAndPrograms(tvchannels);\n\t\treturn data;\n\t\t*/\n  };\n\n  fetchHtmlAmppariChannels = async (dayparameter) => {\n    if (this.state.bUnderFetch) return;\n    let channelurl = this.getUrlQueryForAmppari(dayparameter);\n    if (Config.bDebug) {\n      console.log(\"fetchHtmlAmppariChannels 1\");\n      console.log(channelurl);\n    }\n\n    this.fetcheditems = [];\n    this.channeltypeitems = [];\n    this.store.setState({ fetchitems: [] });\n\n    this.setState({\n      bUnderFetch: true,\n      channels: [],\n      selectedchannelindex: 0,\n      currentChannelSetIndex: 0,\n      errmsg: null,\n      fetcheditems: null,\n    });\n\n    this.bUnderFetch = true;\n    let fetched = null;\n    // \tcrossDomain:true,\n    await fetch(channelurl, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"text/html; charset=UTF-8\",\n        Accept: \"*/*\", // application/rss+xml\n      },\n      mode: \"cors\",\n      signal: this.abortSignal,\n    })\n      .then(this.handleErrors)\n      .then((response) => {\n        return response.text();\n      })\n      //\t\t.then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        let data2 = data;\n        if (Config.bDebug) {\n          console.log(\"fetchHtmlAmppariChannels 1.5\");\n          //console.log(\"data\");\n          // console.log(data);\n        }\n        const INITIAL_STATE = \"window.__INITIAL_STATE__=\";\n        let index = data.indexOf(INITIAL_STATE);\n        if (Config.bDebug) {\n          console.log(\"index\");\n          console.log(index);\n        }\n        if (index > -1) {\n          if (Config.bDebug) console.log(\"index > -1\");\n          let indexEnd = data.indexOf(\"</script>\", index);\n          if (Config.bDebug) {\n            console.log(\"indexEnd\");\n            console.log(indexEnd);\n          }\n          if (indexEnd > -1) {\n            if (Config.bDebug) console.log(\"indexEnd > -1\");\n            data2 = data.substring(index + INITIAL_STATE.length, indexEnd);\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(\"data2\");\n\t\t\t\t\t\t\tconsole.log(data2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            let json = JSON.parse(data2);\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(\"json\");\n\t\t\t\t\t\t\tconsole.log(json);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            let strstate = json.state;\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(\"strstate\");\n\t\t\t\t\t\t\tconsole.log(strstate);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            let json2 = JSON.parse(strstate);\n            if (Config.bDebug) {\n              console.log(\"json2\");\n              console.log(json2);\n            }\n            data2 = this.getChannelsAndProgramsFromJsonArray(json2);\n            if (Config.bDebug) {\n              console.log(\"-- 1\");\n              // console.log(data2);\n            }\n            this.fetcheditems = data2;\n            this.channeltypeitems = data2;\n            // this.programtypeitems = data2;\n            // this.channels = data2;\n            this.setState({\n              fetcheditems: this.fetcheditems,\n              channels: [],\n              bUnderFetch: false,\n              selectedsuodattimet: \"kaikki\",\n              channeltypeitems: null,\n              programtypeitems: null,\n              selectedtyyppi: \"kaikki\",\n              selectedTyyppiinindex: 0,\n              selectedsuodatinindex: 0,\n              bSearchButtonClicked: false,\n              selectedchannelindex: 0,\n            });\n            this.store.setState({ fetchitems: data2 });\n            // this.filterWhenUIControlsHasBeenChanged(filtercalled.CHANNELTYPE);\n            // this.channels = data2;\n            // this.setState({ channels: data2, });\n            /*\n\t\t\t\t\t\tthis.setState({ fetcheditems: data2, channels: null,\n\t\t\t\t\t\t\tbUnderFetch: false, selectedsuodattimet: 'kaikki',\n\t\t\t\t\t\t\t\tselectedtyyppi: 'kaikki', selectedTyyppiinindex: 0,\n\t\t\t\t\t\t\t\tselectedsuodatinindex: 0 });\n\t\t\t\t\t\tconsole.log(\"-- 2\");\n\t\t\t\t\t\t//this.filterWhenUIControlsHasBeenChanged(filtercalled.CHANNELTYPE);\n\t\t\t\t\t\t*/\n            this.setState({\n              /* fetcheditems: this.fetcheditems, */ channels: this.channels,\n              bUnderFetch: false,\n              selectedsuodattimet: \"kaikki\",\n              selectedtyyppi: \"kaikki\",\n              selectedTyyppiinindex: 0,\n              selectedsuodatinindex: 0,\n              bSearchButtonClicked: false,\n              selectedchannelindex: 0,\n            });\n            this.bUnderFetch = false;\n          }\n        }\n\n        fetched = data2; // this.getJsonDataFromTelkkuRssXml(data);\n      })\n      .catch((error) => {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.toString(), bUnderFetch: false });\n        this.bUnderFetch = false;\n        throw new this.AmppariException(error.toString());\n      });\n    return fetched;\n  };\n\n  getChannelsAndSortProgramsAfterChannels = (data, channels) => {\n    /*\n    \t\tconst map1 = new Map([\n\t\t\t['foo', 'bar'],\n\t\t\t['baz', 42]\n\t\t  ]);\n\n\t\t  const obj = Object.fromEntries(map1);\n\t\t  // { foo: 'bar', baz: 42 }\n\t\t  \n\t\t  For converting object back to map:\n\t\t  \n\t\t  const map2 = new Map(Object.entries(obj));\n\t\t  // Map(2) { 'foo' => 'bar', 'baz' => 42 }\n\t\t  */\n\n    let ret = null;\n    let map = new Map();\n    let channel = {};\n\n    if (Config.bDebug) console.log(\"chcoopy.channelprograms\");\n    Array.from(data).forEach((pr) => {\n      if (pr === undefined) return;\n      channel = map.get(pr.channel);\n      if (channel == undefined || channel == null) {\n        console.log(\"channel == undefined\");\n        channel = {};\n        Object.assign(channel, {});\n        channel.title = pr.channel;\n        console.log(\"new channel\");\n        console.log(channel.title);\n\n        map.set(channel.title, channel);\n      }\n      if (channel !== null) {\n        if (channel.channelprograms == undefined) channel.channelprograms = [];\n        channel.channelprograms.push(pr);\n        map.set(channel.title, channel);\n      }\n    });\n\n    if (map.size > 0) return Object.fromEntries(map);\n    return null;\n  };\n\n  getJsonChannels = (strprorams) => {\n    let ret = null;\n    if (strprorams === null || strprorams === undefined) return null;\n    let indStart = 0;\n    let searchResultChannel = this.getJsonLabel(\n      \"channel\",\n      strprograms,\n      indStart\n    );\n    let channeldata = null;\n    let firstIndex = -1;\n    let arrprogs = null;\n    let search_end_program = \"]]\";\n    let firstIndexEnd = -1;\n    let strprogram = null;\n    let jsonprog = null;\n    let iCount = 1;\n    let channels = [];\n    let searchSecondChannel = '\"channel\"';\n    let indSecondChannel = -1;\n\n    while (searchResultChannel !== null) {\n      indSecondChannel = strprogram.indexOf(\n        searchSecondChannel,\n        searchResultChanne.indEnd + 1\n      );\n      indStart = searchResult.indEnd;\n      searchResult = this.getJsonLabel(\n        \"id\",\n        strprograms,\n        indStart,\n        indSecondChannel\n      );\n      if (searchResult !== null) {\n        indStart = searchResult.indEnd;\n        searchresult = this.getJsonNextValue(\n          strprograms,\n          indStart,\n          indSecondChannel\n        );\n        if (searchResult !== null) {\n          let channelid = searchResult.value;\n          indStart = searchResult.indEnd;\n          searchResult = this.getJsonLabel(\n            \"name\",\n            strprograms,\n            indStart,\n            indSecondChannel\n          );\n          if (searchResult !== null) {\n            indStart = searchResult.indEnd;\n            searchresult = this.getJsonNextValue(\n              strprograms,\n              indStart,\n              indSecondChannel\n            );\n            let channelname = searchResult.value;\n            console.log(\"channelname\");\n            console.log(channelname);\n\n            searchResult = this.getJsonLabel(\n              \"slug\",\n              strprograms,\n              indStart,\n              indSecondChannel\n            );\n            if (searchResult !== null) {\n              indStart = searchResult.indEnd;\n              searchresult = this.getJsonNextValue(\n                strprograms,\n                indStart,\n                indSecondChannel\n              );\n              let channelslug = searchResult.value;\n              console.log(\"channelslug\");\n              console.log(channelslug);\n\n              searchResult = this.getJsonLabel(\n                \"pay\",\n                strprograms,\n                indStart,\n                indSecondChannel\n              );\n              if (searchResult !== null) {\n                indStart = searchResult.indEnd;\n                searchresult = this.getJsonNextValue(\n                  strprograms,\n                  indStart,\n                  indSecondChannel\n                );\n                let channelpay = searchResult.value;\n                channeldata = {};\n                Object.assign(channeldata, {});\n                channeldata.title = channelname;\n                channeldata.slug = channelslug;\n                channeldata.pay = channelpay;\n\n                arrprogs = new Array();\n\n                firstIndex = strprorams.indexOf(\n                  this.search_start_program,\n                  indStart\n                );\n                firstIndexEnd = strprorams.indexOf(search_end_program);\n                strprogram = null;\n                jsonprog = null;\n                iCount = 1;\n\n                while (\n                  firstIndex !== -1 &&\n                  firstIndexEnd !== -1 &&\n                  (indSecondChannel == -1 ||\n                    (indSecondChannel != -1 &&\n                      firstIndexEnd < indSecondChannel))\n                ) {\n                  strprogram = strprorams.substring(\n                    firstIndex + 1,\n                    firstIndexEnd\n                  );\n                  jsonprog = this.getJsonProg(strprogram, indSecondChannel);\n                  if (jsonprog != null) {\n                    console.log(\"jsonprog\");\n                    console.log(jsonprog);\n                    arrprogs.push(jsonprog);\n                    iCount = iCount + 1;\n                  } else break;\n                  firstIndex = strprorams.indexOf(\n                    this.search_start_program,\n                    firstIndexEnd\n                  );\n                  firstIndexEnd = strprorams.indexOf(\n                    search_end_program,\n                    firstIndex\n                  );\n                }\n                console.log(\"tv programs size\");\n                console.log(iCount);\n\n                channeldata.channelprograms = [];\n                Array.from(arrprogs).forEach((pr) => {\n                  if (pr === undefined) return;\n                  channeldata.channelprograms.push(pr);\n                });\n                if (channeldata != null) channels.push(channeldata);\n              }\n            }\n          }\n        }\n      }\n      searchResultChannel = this.getJsonLabel(\"channel\", strprograms, indStart);\n    }\n\n    return channels;\n  };\n\n  getJsonProg = (strprogram, indSecondChannel) => {\n    if (strprogram === null || strprogram === undefined) return null;\n    console.log(\"strprogram\");\n    console.log(strprogram);\n    let ind = strprogram.indexOf('\"channel\"');\n    if (ind > -1) return null;\n\n    let ret = null;\n    let searchstart = '\"^2\",[';\n    let indId = strprogram.indexOf(searchstart);\n    let searchresult = null;\n    if (indId > -1) {\n      let indStart = 0;\n      let strjson = \"\";\n      strprogram = strprogram.substring(indId + searchstart.length);\n      console.log(\"strprogram 2\");\n      console.log(strprogram);\n\n      searchresult = this.getJsonLabelAndValue(\n        \"id\",\n        strprogram,\n        indStart,\n        indSecondChannel\n      );\n      if (searchresult != null) {\n        strjson = '{\"' + searchresult.name + '\":' + searchresult.value;\n        console.log(\"1 strjson\");\n        console.log(strjson);\n\n        indStart = searchresult.indEnd;\n        searchresult = this.getJsonLabelAndValue(\n          \"timestamp\",\n          strprogram,\n          indStart,\n          indSecondChannel\n        );\n        if (searchresult != null) {\n          strjson =\n            strjson + ',\"' + searchresult.name + '\":' + searchresult.value;\n          console.log(\"2 strjson\");\n          console.log(strjson);\n          indStart = searchresult.indEnd;\n          searchresult = this.getJsonLabelAndValue(\n            \"title\",\n            strprogram,\n            indStart,\n            indSecondChannel\n          );\n          if (searchresult != null) {\n            strjson =\n              strjson + ',\"' + searchresult.name + '\":' + searchresult.value;\n            console.log(\"3 strjson\");\n            console.log(strjson);\n            indStart = searchresult.indEnd;\n            searchresult = this.getJsonLabelAndValue(\n              \"description\",\n              strprogram,\n              indStart,\n              indSecondChannel\n            );\n            if (searchresult != null) {\n              strjson =\n                strjson + ',\"' + searchresult.name + '\":' + searchresult.value;\n              indStart = searchresult.indEnd;\n              console.log(\"4 strjson\");\n              console.log(strjson);\n              searchresult = this.getJsonLabelAndValue(\n                \"channel\",\n                strprogram,\n                indStart,\n                indSecondChannel\n              );\n              if (searchresult != null) {\n                strjson =\n                  strjson +\n                  ',\"' +\n                  searchresult.name +\n                  '\":' +\n                  searchresult.value;\n                console.log(\"5 strjson\");\n                console.log(strjson);\n                indStart = searchresult.indEnd;\n                searchresult = this.getJsonLabelAndValue(\n                  \"movie\",\n                  strprogram,\n                  indStart,\n                  indSecondChannel\n                );\n                if (searchresult != null) {\n                  strjson =\n                    strjson +\n                    ',\"' +\n                    searchresult.name +\n                    '\":' +\n                    searchresult.value;\n                  console.log(\"6 strjson\");\n                  console.log(strjson);\n                  indStart = searchresult.indEnd;\n                  searchresult = this.getJsonLabelAndValue(\n                    \"sport\",\n                    strprogram,\n                    indStart,\n                    indSecondChannel\n                  );\n                  if (searchresult != null) {\n                    strjson =\n                      strjson +\n                      ',\"' +\n                      searchresult.name +\n                      '\":' +\n                      searchresult.value;\n                    strjson = strjson + \" }\";\n                    console.log(\"7 strjson\");\n                    console.log(strjson);\n                    ret = JSON.parse(strjson);\n                    console.log(\"ret\");\n                    console.log(ret);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return ret;\n  };\n\n  getJsonLabelAndValue = (name, strprogram, indStart, indSecondChannel) => {\n    // let searchresult = this.getJsonLabel(name, strprogram, indStart);\n    let searchresult = this.getJsonNextLabel(\n      strprogram,\n      indStart,\n      indSecondChannel\n    );\n    if (searchresult != null) {\n      let indStart2 = searchresult.indEnd;\n      let name2 = searchresult.name;\n      searchresult = this.getJsonNextValue(\n        strprogram,\n        indStart2,\n        indSecondChannel\n      );\n      if (searchresult != null) {\n        searchresult.name = name2;\n        return searchresult;\n      }\n    }\n    return null;\n  };\n\n  getJsonNextLabel = (strprogram, indStart, indSecondChannel) => {\n    let search = '\"';\n    let ind = strprogram.indexOf(search, indStart);\n    console.log(\"getJsonNextLabel ind\");\n    console.log(ind);\n\n    if (ind > -1) {\n      let ind2 = strprogram.indexOf(search, ind + 1);\n      if (ind2 > -1) {\n        console.log(\"getJsonNextLabel ind2\");\n        console.log(ind2);\n        let searchresult = {};\n        searchresult.name = strprogram.substring(ind + 1, ind2);\n        searchresult.indStart = ind + 1;\n        searchresult.indEnd = ind2;\n        console.log(\"getJsonLabel searchresult\");\n        console.log(searchresult);\n        return searchresult;\n      }\n    }\n    return null;\n  };\n\n  getJsonLabel = (name, strprogram, indStart, indSecondChannel) => {\n    let search = '\"' + name + '\"';\n    let ind = strprogram.indexOf(search, indStart);\n    console.log(\"getJsonLabel ind\");\n    console.log(ind);\n\n    if (ind > -1) {\n      let searchresult = {};\n      searchresult.name = name;\n      searchresult.indStart = ind + 1;\n      searchresult.indEnd = ind + search.length;\n      searchresult.name = name;\n      console.log(\"getJsonLabel searchresult\");\n      console.log(searchresult);\n\n      return searchresult;\n    }\n    return null;\n  };\n\n  getJsonNextValue = (strprogram, indStart, indSecondChannel) => {\n    let search = \",\";\n    let ind = strprogram.indexOf(search, indStart);\n    console.log(\"getJsonNextValue ind\");\n    console.log(ind);\n\n    if (ind > -1) {\n      let searchresult = {};\n      let bStartWithStrike = strprogram.substring(ind + 1, ind + 2) == '\"';\n      console.log(\"getJsonNextValue indEnd bStartWithStrike\");\n      console.log(bStartWithStrike);\n\n      searchresult.indStart = ind;\n      let iAdd = 1;\n      if (bStartWithStrike) iAdd = 2;\n      let indEnd = -1;\n      if (bStartWithStrike) indEnd = strprogram.indexOf('\"', ind + iAdd);\n      else indEnd = strprogram.indexOf(search, ind + iAdd);\n      console.log(\"getJsonNextValue indEnd\");\n      console.log(indEnd);\n\n      if (indEnd == -1) {\n        searchresult.indEnd = strprogram.length;\n        searchresult.value = strprogram.substring(ind + iAdd);\n        console.log(\"getJsonNextValue searchresult.value indEnd==-1\");\n        console.log(searchresult.value);\n        return searchresult;\n      } else {\n        if (bStartWithStrike) searchresult.indEnd = indEnd + 1;\n        else searchresult.indEnd = indEnd;\n        if (bStartWithStrike)\n          searchresult.value = strprogram.substring(ind + 1, indEnd + 1);\n        else searchresult.value = strprogram.substring(ind + 1, indEnd);\n        console.log(\"getJsonNextValue searchresult.value\");\n        console.log(searchresult.value);\n        return searchresult;\n      }\n    }\n    return null;\n  };\n\n  getJsonDataFromTelkkuRssXml = (data) => {\n    const items = data.querySelectorAll(\"item\");\n  };\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      // throw Error(response.statusText);\n      console.log(\"response\");\n      console.log(response);\n      console.log(response.status);\n      throw Error(response.status);\n    }\n    return response;\n  };\n\n  getUrlQueryForAmppari = (dayparameter) => {\n    let blankurl =\n      this.fetch_url_ampparissa +\n      \"?aika=\" +\n      this.state.selectedaika +\n      \"&pvm=\" +\n      dayparameter +\n      \"&sanat=\" +\n      this.state.searchsanat +\n      \"&suodatus=\" +\n      this.state.selectedsuodattimet +\n      \"&tyyppi=\" +\n      this.state.selectedtyyppi;\n\n    return blankurl;\n  };\n\n  /*\n\topenHtmlAmppari = (dayparameter) => {\n\t\t// aika=paiva,tulevat,nyt,ilta,yo\n\t\t// pvm=2021-02-22\n\t\t// suodatus=ilmaiset,maksulliset,kaikki\n\t\t// https://www.ampparit.com/tv?aika=paiva&pvm=2021-02-22&sanat=&suodatus=ilmaiset&tyyppi=elokuvat\n\n        let blankurl = this.getUrlQueryForAmppari();\n        window.open(blankurl, '_blank', \"Ampparissa\", \"location=no\");\n\t}\n\t*/\n\n  onClickSetDateString = (event) => {\n    event.preventDefault();\n    let dayparameter = event.target.id;\n    let target = event.target;\n    const search = \"dayname_\";\n    let ind = dayparameter.indexOf(search);\n    if (ind > -1)\n      dayparameter = dayparameter.substring(ind + search.length).trim();\n    const parseddate = Date.parse(dayparameter);\n    const day = new Date(parseddate);\n    const today = new Date(Date.now());\n    if (day.getDate() !== today.getDate()) {\n      if (this.checkshowdcurrentprogramsRef.current.value) {\n        this.checkshowdcurrentprogramsRef.current.value = false;\n        this.setState({ bshowdcurrentprograms: false });\n      }\n      this.checkshowdcurrentprogramsRef.current.disabled = true;\n    } else if (this.checkshowdcurrentprogramsRef.current.disabled == true)\n      this.checkshowdcurrentprogramsRef.current.disabled = false;\n    this.setState({ selecteddate: day });\n    this.fetchHtmlAmppariChannels(dayparameter);\n  };\n\n  getPlus1DayId = (plusdaynumber) => {\n    const today = dayjs();\n    let plusdate = today;\n    if (plusdaynumber > 0) plusdate = today.add(plusdaynumber, \"days\");\n    else if (plusdaynumber < 0) plusdate = today.add(plusdaynumber, \"days\");\n    const ret = plusdate.format(\"YYYY-MM-DD\"); // pvm=2021-02-22\n    return ret;\n  };\n\n  getPlus1Day = (plusdaynumber) => {\n    const today = dayjs();\n    let plusdate = today;\n    if (plusdaynumber > 0) plusdate = today.add(plusdaynumber, \"days\");\n    else if (plusdaynumber < 0) plusdate = today.add(plusdaynumber, \"days\");\n\n    const weekday = new Date(plusdate).getDay();\n    let weekdayname = \"\";\n    switch (weekday) {\n      case 1:\n        weekdayname = \"Ma\";\n        break;\n      case 2:\n        weekdayname = \"Ti\";\n        break;\n      case 3:\n        weekdayname = \"Ke\";\n        break;\n      case 4:\n        weekdayname = \"To\";\n        break;\n      case 5:\n        weekdayname = \"Pe\";\n        break;\n      case 6:\n        weekdayname = \"La\";\n        break;\n      case 0:\n        weekdayname = \"Su\";\n        break;\n    }\n    const ret = weekdayname + \" \" + plusdate.format(\"DD.MM.YYYY\"); // pvm=2021-02-22\n    return ret;\n  };\n\n  onClickSelectedAika = (event) => {\n    event.preventDefault();\n    const timeparameter = event.target.id; // event.target.text;\n    const ind = timeparameter.indexOf(\"_\");\n    if (ind > -1) {\n      const idends = timeparameter.substring(ind + 1);\n      /*\n\t\t\tconsole.log(\"idends\");\n\t\t\tconsole.log(idends);\n\t\t\t*/\n      this.setState({ selectedaika: idends });\n    }\n  };\n\n  getTableHeaders = () => {\n    let ret = null;\n    return ret;\n  };\n\n  getTableRows = () => {\n    let ret = null;\n    return ret;\n  };\n\n  getFetchedDate = () => {\n    if (Config.bDebug) {\n      console.log(\"getFetchedDate\");\n      console.log(\"this.state.selecteddate\");\n      console.log(this.state.selecteddate);\n    }\n    let today = this.state.selecteddate;\n    if (today == null || today == undefined) return \"\";\n\n    if (typeof today === \"string\") today = Date.parse(this.state.selecteddate);\n    let days = today.getDate();\n    let month = today.getMonth() + 1;\n    let year = today.getFullYear();\n    if (days < 10) days = \"0\" + days;\n    if (month < 10) month = \"0\" + month;\n    const ret = \"\" + days + \".\" + month + \".\" + year;\n    return ret;\n  };\n\n  calculateMaxChannelSetIndex = () => {\n    if (Config.bDebug) {\n      console.log(\"calculateMaxChannelSetIndex\");\n      /*\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\t*/\n    }\n    if (this.state.channels == null) return 0;\n    const channelssize = this.state.channels.length;\n    if (channelssize === 0) return 0;\n    if (this.state.bCheckShowChannelsAtSameTime) return 0;\n    if (this.state.showChannelsAtSameTime >= this.state.channels.length)\n      return 0;\n    const channelSets =\n      this.state.channels.length / this.state.showChannelsAtSameTime;\n    if (Config.bDebug) {\n      console.log(\"channelSets\");\n      console.log(channelSets);\n    }\n    if (channelSets == 0) return 0;\n    return channelSets - 1;\n  };\n\n  nextChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (\n      this.state.currentChannelSetIndex > this.calculateMaxChannelSetIndex()\n    ) {\n      this.setState({\n        currentChannelSetIndex: this.calculateMaxChannelSetIndex(),\n        /* bSearchButtonClicked: false */\n      });\n      return;\n    }\n    if (\n      this.state.currentChannelSetIndex === this.calculateMaxChannelSetIndex()\n    ) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex + 1,\n    });\n  };\n\n  prevChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (this.state.currentChannelSetIndex < 0) {\n      this.setState({\n        currentChannelSetIndex: 0,\n        /* bSearchButtonClicked: false */\n      });\n      return;\n    }\n    if (this.state.currentChannelSetIndex === 0) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex - 1,\n    });\n  };\n\n  showAllDescriptions = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showAllDescriptions\");\n    let bValue = value; // this.state.bDisplayAllDescriptions;\n    if (Config.bDebug) console.log(\"bValue\");\n    if (Config.bDebug) console.log(bValue);\n    /*\n\t\tif (value === 'on')\n\t\t\tbValue = true;\n\t\tconsole.log(value);\n\t\t*/\n    this.setState({\n      bDisplayAllDescriptions: bValue,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  showTableBorders = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    console.log(\"showTableBorders\");\n    let bValue = value;\n    console.log(\"bValue\");\n    console.log(bValue);\n    this.setState({ bShowTableBorder: bValue });\n  };\n\n  showOneChannel = (event) => {\n    event.preventDefault();\n    //\tconsole.log(\"showOneChannel\");\n    let value = event.target.checked;\n    let bValue = value; // this.showOneChannelRef.current.;\n\n    if (bValue) {\n      const st = this.store;\n      const storestate = st.getState();\n      // this.selectChannelRef.current.selectedIndex = 0;\n      this.setState({\n        showChannelsAtSameTime: 1,\n        bCheckShowChannelsAtSameTime: true,\n        /* bSearchButtonClicked: false, */\n        selectedchannelindex: 0,\n        currentChannelSetIndex: 0,\n        channels: storestate.channels,\n      });\n    } else {\n      const st = this.store;\n      const storestate = st.getState();\n      this.channels = storestate.channels;\n      -1;\n      this.setState({\n        showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n        selectedchannelindex: -1,\n        bCheckShowChannelsAtSameTime: false,\n        /* bSearchButtonClicked: false, */\n        channels: storestate.channels,\n      });\n      // this.filterWhenUIControlsHasBeenChanged(filtercalled.SEARCHCHANE, null);\n    }\n  };\n\n  getPOfIndex = (index, txt, themevalue) => {\n    if (Config.bDebug) {\n      console.log(\"getPOfIndex\");\n    }\n    let textSearch = this.textSearch;\n    if (Config.bDebug) {\n      console.log(\"textSearch\");\n      console.log(textSearch);\n    }\n    if (txt == undefined || txt == null || txt.toString().trim().length == 0)\n      return \"\";\n    if (Config.bDebug) {\n      console.log(\"txt\");\n      console.log(txt);\n      console.log(\"index\");\n      console.log(index);\n      console.log(\"textSearch\");\n      console.log(textSearch);\n    }\n\n    let txt1 = txt.toString();\n    let txtlen = txt1.length;\n    if (\n      txtlen == undefined ||\n      index == undefined ||\n      index == null ||\n      index < 0 ||\n      txtlen <= index\n    )\n      return txt1.toString();\n    if (\n      textSearch == undefined ||\n      textSearch == null ||\n      textSearch.toString().trim().length == 0\n    )\n      return txt1.toString();\n\n    let first = txt1.substring(0, index);\n    let between = txt1.substring(index, index + textSearch.length);\n    let last = txt1.substring(index + textSearch.length, txt1.length);\n\n    if (Config.bDebug) {\n      console.log(\"first\");\n      console.log(first);\n      console.log(\"between\");\n      console.log(between);\n      console.log(\"last\");\n      console.log(last);\n    }\n\n    let newvalue_first =\n      first != undefined && first != null && first.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {first}\n        </span>\n      ) : (\n        \"\"\n      );\n    let foundedthtml =\n      \"background-color: green; color: white; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    if (themevalue === \"--dark\")\n      foundedthtml =\n        \"background-color: yellow; color: black; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    let newvalue_between = <span style={foundedthtml}>{between}</span>;\n    let newvalue_last =\n      last != undefined && last != null && last.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {last}\n        </span>\n      ) : (\n        \"\"\n      );\n    let newvalue = (\n      <div>\n        {newvalue_first}\n        {newvalue_between}\n        {newvalue_last}\n      </div>\n    );\n    if (Config.bDebug) {\n      console.log(\"newvalue_first\");\n      console.log(newvalue_first);\n      console.log(\"newvalue_between\");\n      console.log(newvalue_between);\n      console.log(\"newvalue_last\");\n      console.log(newvalue_last);\n    }\n    if (Config.bDebug) {\n      console.log(\"newvalue\");\n      console.log(newvalue);\n    }\n    return newvalue;\n  };\n\n  /*\n\tgetIsMaksullinenChannel = (title) =>\n\t{\n\t\tlet ret = false;\n\t\tif (title == undefined || title == null || title.trim().length == 0)\n\t\t\treturn false;\n\t\tif (!ilmaisetchannelnames.includes(title))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tgetIsIlmainenChannel = (title) =>\n\t{\n\t\tlet ret = false;\n\t\tif (title == undefined || title == null || title.trim().length == 0)\n\t\t\treturn false;\n\t\tif (ilmaisetchannelnames.includes(title))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\t*/\n\n  oldProgram = (currProg, currtime, nextProg) => {\n    const selectedtyyppi = this.state.selectedtyyppi;\n    if (selectedtyyppi != \"kaikki\") {\n      nextProg = this.getNextProgOf(currProg);\n    }\n    return this.oldProgramWithNextProg(currProg, currtime, nextProg);\n  };\n\n  getNextProgOf = (currProg) => {\n    if (currProg === null || currProg === undefined) return null;\n    let ret = null;\n    const fetchitems = this.state.fetcheditems;\n    if (fetchitems === null || fetchitems === undefined) return null;\n    let foundedChannel = null;\n    let max = fetchitems.length;\n    let ch = null,\n      i = 0;\n\n    ch = fetchitems[i];\n    if (ch == undefined || ch === null) return null;\n    if (ch.title !== currProg.channel) return null;\n    foundedChannel = ch;\n\n    if (foundedChannel) {\n      let nextPropgram = null;\n      let foundedProg = null;\n      let max = foundedChannel.channelprograms.length;\n      const progs = foundedChannel.channelprograms;\n      let prog = null;\n      for (i = 0; i < max; i++) {\n        prog = progs[i];\n        if (prog == undefined || prog === null) continue;\n        if (foundedProg) {\n          nextPropgram = prog;\n          break;\n        }\n        if (prog.id !== currProg.id) continue;\n        foundedProg = prog;\n      }\n      return nextPropgram;\n    }\n    return ret;\n  };\n\n  oldProgramWithNextProg = (program, currenttime, nextprogram) => {\n    const startTime = new Date(program.timestamp * 1000);\n    let endtTime = null;\n    let endtTimeHours = null;\n    if (!nextprogram) return false;\n    if (nextprogram) {\n      endtTime = new Date(nextprogram.timestamp * 1000);\n      endtTimeHours = endtTime.getHours();\n    }\n\n    if (endtTime > currenttime) {\n      // console.log(\"kkk\");\n      return false;\n    }\n    if (endtTime < currenttime) {\n      // console.log(\"kkk\");\n      return true;\n    }\n\n    const currentHours = currenttime.getHours();\n    if (endtTimeHours && endtTimeHours < currentHours) {\n      console.log(\"kkk\");\n      return true;\n    }\n    if (endtTimeHours && endtTime.getHours() === currenttime.getHours()) {\n      const endtTimeMinutes = endtTime.getMinutes();\n      const currentMinutes = currenttime.getMinutes();\n      if (endtTimeMinutes < currentMinutes) {\n        console.log(\"kkk\");\n        return true;\n      }\n    }\n    return false;\n  };\n\n  getTableHeadersAndTableRowsAfterChannels = () => {\n    let headers = null;\n    let channels = null;\n    if (Config.bDebug) {\n      console.log(\"getTableHeadersAndTableRowsAfterChannels\");\n      console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n      console.log(this.state.bCheckShowChannelsAtSameTime);\n      console.log(\"this.state.selectedchannelindex\");\n      console.log(this.state.selectedchannelindex);\n      console.log(this.state);\n    }\n\n    const currenttime = new Date();\n\n    let all_channels = this.channels;\n    if (all_channels == null) {\n      headers = [];\n      channels = [];\n      let ret = {};\n      ret.headers = headers;\n      ret.channels = channels;\n      return ret;\n    } else if (\n      this.state.bCheckShowChannelsAtSameTime &&\n      this.state.selectedchannelindex != -1\n    ) {\n      console.log(\"filter\");\n      let selectedTitle = null;\n      if (all_channels[this.state.selectedchannelindex])\n        selectedTitle = all_channels[this.state.selectedchannelindex].title;\n      else {\n        //console.log(\"kissa\");\n      }\n      let filteredchannels = all_channels.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.title === selectedTitle;\n      });\n      //\t\t\t\tconsole.log(\"filteredchannels\");\n      //\t\t\t\tconsole.log(filteredchannels);\n      headers = filteredchannels.map((jsonchannel, i) => {\n        return jsonchannel.title;\n      });\n      channels = filteredchannels.map((jsonchannel, i) => {\n        return (\n          <AmppariChannel\n            id={i}\n            data={jsonchannel}\n            selectedtyyppi={this.state.selectedtyyppi}\n            showSearch={\n              this.state.bSearchButtonClicked && this.state.textSearch != null\n            }\n            getPOfIndex={this.getPOfIndex}\n            oldProgram={this.oldProgram}\n            currenttime={currenttime}\n            themevalue={this.state.themevalue}\n            bshowdcurrentprograms={this.state.bshowdcurrentprograms}\n            displayAllDescriptions={this.state.bDisplayAllDescriptions}\n          />\n        );\n      });\n    } else {\n      if (\n        this.state.showChannelsAtSameTime == all_channels.length ||\n        this.state.showChannelsAtSameTime > all_channels.length\n      ) {\n        headers = all_channels.map((jsonchannel, i) => {\n          return jsonchannel.title;\n        });\n        channels = all_channels.map((jsonchannel, i) => {\n          return (\n            <AmppariChannel\n              id={i}\n              data={jsonchannel}\n              showSearch={\n                this.state.bSearchButtonClicked && this.state.textSearch != null\n              }\n              selectedtyyppi={this.state.selectedtyyppi}\n              getPOfIndex={this.getPOfIndex}\n              oldProgram={this.oldProgram}\n              currenttime={currenttime}\n              bshowdcurrentprograms={this.state.bshowdcurrentprograms}\n              themevalue={this.state.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      } else {\n        let bAllChannels = false;\n        if (this.state.showChannelsAtSameTime < all_channels.length) {\n          let min = Math.floor(\n            this.state.currentChannelSetIndex *\n              this.state.showChannelsAtSameTime\n          );\n          let max =\n            this.state.currentChannelSetIndex == 0\n              ? this.state.showChannelsAtSameTime\n              : Math.floor(\n                  this.state.currentChannelSetIndex *\n                    this.state.showChannelsAtSameTime +\n                    this.state.showChannelsAtSameTime\n                );\n          if (Config.bDebug) {\n            console.log(\"min\");\n            console.log(min);\n            console.log(\"max\");\n            console.log(max);\n          }\n          if (min < 0) min = 0;\n          else if (min > all_channels.length) {\n            min = all_channels.length;\n            bAllChannels = true;\n          }\n\n          if (max > all_channels.length) max = all_channels.length;\n\n          if (!bAllChannels) {\n            let i;\n            let newChannelSet = [];\n            for (i = min; i < max; i++) {\n              newChannelSet.push(all_channels[i]);\n            }\n\n            headers = newChannelSet.map((jsonchannel, i) => {\n              return jsonchannel.title;\n            });\n            channels = newChannelSet.map((jsonchannel, i) => {\n              return (\n                <AmppariChannel\n                  id={i}\n                  data={jsonchannel}\n                  showSearch={\n                    this.state.bSearchButtonClicked &&\n                    this.state.textSearch != null\n                  }\n                  selectedtyyppi={this.state.selectedtyyppi}\n                  getPOfIndex={this.getPOfIndex}\n                  oldProgram={this.oldProgram}\n                  currenttime={currenttime}\n                  bshowdcurrentprograms={this.state.bshowdcurrentprograms}\n                  themevalue={this.state.themevalue}\n                  displayAllDescriptions={this.state.bDisplayAllDescriptions}\n                />\n              );\n            });\n          }\n        } else {\n          bAllChannels = true;\n        }\n\n        if (bAllChannels) {\n          headers = all_channels.map((jsonchannel, i) => {\n            return jsonchannel.title;\n          });\n          channels = all_channels.map((jsonchannel, i) => {\n            return (\n              <AmppariChannel\n                id={i}\n                data={jsonchannel}\n                showSearch={\n                  this.state.bSearchButtonClicked &&\n                  this.state.textSearch != null\n                }\n                selectedtyyppi={this.state.selectedtyyppi}\n                getPOfIndex={this.getPOfIndex}\n                oldProgram={this.oldProgram}\n                currenttime={currenttime}\n                themevalue={\n                  props.themevalue ? props.themevalue : this.state.themevalue\n                }\n                bshowdcurrentprograms={this.state.bshowdcurrentprograms}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      }\n    }\n\n    /*\n\t\tif (this.state.selectedsuodattimet != 'kaikki')\n\t\t{\n\t\t\tif (this.state.selectedsuodattimet === 'ilmaiset')\n\t\t\t{\n\t\t\t\tlet chs = all_channels.filter( (s, i) =>\n\t\t\t\t{ \n\t\t\t\t//\tconsole.log(\"i\");\n\t\t\t\t//\tconsole.log(i);\n\t\t\t\t\treturn this.getIsIlmainenChannel(s.title) \n\t\t\t\t} );\n\t\t\t\tall_channels = chs;\n\t\t\t}\n\t\t\telse\n\t\t\tif (this.state.selectedsuodattimet === 'ilmaiset')\n\t\t\t{\n\t\t\t\tlet chs = all_channels.filter( (s, i) =>\n\t\t\t\t{ \n\t\t\t\t//\tconsole.log(\"i\");\n\t\t\t\t//\tconsole.log(i);\n\t\t\t\t\treturn this.getIsMaksullinenChannel(s.title) \n\t\t\t\t} );\n\t\t\t\tall_channels = chs;\n\t\t\t}\t\t\t\n\t\t}\n\t\t*/\n\n    /*\n\t\tlet bAllChannels = false;\n\t\tif (this.state.bSearchButtonClicked)\n\t\t{\n\t\t\tif (all_channels == null)\n\t\t\t{\n\t\t\t\theaders = [];\n\t\t\t\tchannels = [];\t\n\t\t\t\tlet ret = {};\n\t\t\t\tret.headers = headers;\n\t\t\t\tret.channels = channels;\n\t\t\t\treturn ret;\t\t\n\t\t\t}\n\t\t\tconst searchText = this.state.textSearch;\n\t\t\tif (searchText != null && searchText.toString().trim().length > 0)\n\t\t\t{\n\t\t\t\tlet foundedChannelsTitle = null;\n\t\t\t\tlet index = -1;\n\t\t\t\tlet foundedChannels = [];\n\t\t\t\tlet foundedPrograms = [];\n\t\t\t\tlet founded = false;\t\t\t\t\n\t\t\t\tlet progfounded = false;\n\t\t\t\tlet uppersearchText = searchText.toUpperCase();\n\t\t\t\tlet chcoopy = {};\n\n\t\t\t\tlet search_channels = all_channels;\n\t\t\t\tif (this.state.bCheckShowChannelsAtSameTime\n\t\t\t\t\t&& this.state.selectedchannelindex != -1)\n\t\t\t\t{\t\t\t\n\t\t\t\t\tconsole.log(\"filter search bCheckShowChannelsAtSameTime\");\n\t\t\t\t\tlet selectedTitle = search_channels[this.state.selectedchannelindex].title;\n\t\t\t\t\tlet filteredchannels = search_channels.filter( (s, i) =>\n\t\t\t\t\t{ \n\t\t\t\t\t//\tconsole.log(\"i\");\n\t\t\t\t\t//\tconsole.log(i);\n\t\t\t\t\t\treturn s.title === selectedTitle \n\t\t\t\t\t} );\n\t\t\t\t\tsearch_channels = filteredchannels;\n\t\t\t\t}\n\t\t\t\tArray.from(search_channels).forEach(cha => {\n\t\t\t\t\tchcoopy = {};\n\t\t\t\t\tindex = -1;\n\t\t\t\t\tfounded = false;\n\t\t\t\t// this.state.channels.forEach(cha, i => {\n\t\t\t\t\tObject.assign(chcoopy, cha);\n\t\t\t\t\tindex = chcoopy.title.toUpperCase().indexOf(uppersearchText);\n\t\t\t\t\tif (index != -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tchcoopy.titleindex = index;\n\t\t\t\t\t\tfounded = true;\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"founded channel title chcoopy\");\n\t\t\t\t\t\t\tconsole.log(chcoopy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfoundedPrograms = [];\n\n\t\t\t\t\tlet prcopy = null;\n\t\t\t\t\tArray.from(chcoopy.channelprograms).forEach(pr => {\n\t\t\t\t\t// cha.channelprograms.forEach(pr, i => {\n\t\t\t\t\t\tprogfounded = false;\n\t\t\t\t\t\tprcopy = null;\n\t\t\t\t\t\tindex = pr.title.toString().toUpperCase().indexOf(uppersearchText);\n\t\t\t\t\t\tif (index != -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (prcopy == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprcopy = {};\n\t\t\t\t\t\t\t\tObject.assign(prcopy, pr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprcopy.titleindex = index;\n\n\t\t\t\t\t\t\tfounded = true;\n\t\t\t\t\t\t\tprogfounded = true;\n\t\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"founded program title\");\n\t\t\t\t\t\t\t\tconsole.log(prcopy);\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex = pr.description.toString().toUpperCase().indexOf(uppersearchText);\n\t\t\t\t\t\tif (index != -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (prcopy == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprcopy = {};\n\t\t\t\t\t\t\t\tObject.assign(prcopy, pr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprcopy.descriptionindex = index;\n\t\t\t\t\t\t\tfounded = true;\n\n\t\t\t\t\t\t\tprogfounded = true;\n\t\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconsole.log(\"founded program description\");\n\t\t\t\t\t\t\t\tconsole.log(prcopy);\n\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (progfounded)\n\t\t\t\t\t\t\tfoundedPrograms.push(prcopy);\n\t\t\t\t\t});\t\n\n\t\t\t\t\tif (founded)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tif (foundedPrograms != null && foundedPrograms.length != 0)\n\t\t\t\t\t\t\tchcoopy.channelprograms = foundedPrograms;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tchcoopy.channelprograms = cha.channelprograms;\n\t\t\t\t\t\tfoundedChannels.push(chcoopy);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (foundedChannels == null && foundedChannels.length == 0)\n\t\t\t\t{\n\t\t\t\t\theaders = [];\n\t\t\t\t\tchannels = [];\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\n\t\t\t\t\theaders = foundedChannels.map((jsonchannel, i) => {\n\t\t\t\t\t\treturn jsonchannel.title\n\t\t\t\t\t});\n\t\t\t\t\tchannels = foundedChannels.map((jsonchannel, i) => {\n\t\t\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\t\t\tshowSearch={true}\n\t\t\t\t\t\t\t\tgetPOfIndex={this.getPOfIndex}\n\t\t\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\t\t\tdisplayAllDescriptions=\n\t\t\t\t\t\t\t\t      {this.state.bDisplayAllDescriptions} \n\t\t\t\t\t\t\t\t/>;\n\t\t\t\t\t});\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\theaders = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\treturn jsonchannel.title\n\t\t\t\t});\n\t\t\t\tchannels = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\t\tshowSearch={false}\n\t\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t\t});\t\n\t\t\t}\n\t\t}\n\t\telse\n\t\tif (this.state.bCheckShowChannelsAtSameTime\n\t\t\t&& this.state.selectedchannelindex != -1)\n\t\t{\t\t\t\n\t\t\tconsole.log(\"filter\");\n\t\t\tlet selectedTitle = all_channels[this.state.selectedchannelindex].title;\n\t\t\tlet filteredchannels = all_channels.filter( (s, i) =>\n\t\t\t{ \n\t\t\t//\tconsole.log(\"i\");\n\t\t\t//\tconsole.log(i);\n\t\t\t\treturn s.title === selectedTitle \n\t\t\t} );\n//\t\t\t\tconsole.log(\"filteredchannels\");\n//\t\t\t\tconsole.log(filteredchannels);\n\t\t\theaders = filteredchannels.map((jsonchannel, i) => {\n\t\t\t\treturn jsonchannel.title\n\t\t\t\t});\n\t\t\tchannels = filteredchannels.map((jsonchannel, i) => {\n\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\tshowSearch={false}\n\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.state.showChannelsAtSameTime == all_channels.length\n\t\t\t   || this.state.showChannelsAtSameTime > all_channels.length)\n\t\t\t{\n\t\t\t\theaders = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\treturn jsonchannel.title\n\t\t\t\t});\n\t\t\t\tchannels = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\t\tshowSearch={false}\n\t\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlet bAllChannels = false;\n\t\t\t\tif (this.state.showChannelsAtSameTime < all_channels.length)\n\t\t\t\t{\n\t\t\t\t\tlet min = Math.floor(this.state.currentChannelSetIndex * this.state.showChannelsAtSameTime);\n\t\t\t\t\tlet max = (this.state.currentChannelSetIndex == 0 \n\t\t\t\t\t\t? this.state.showChannelsAtSameTime : \n\t\t\t\t\t\tMath.floor((this.state.currentChannelSetIndex * this.state.showChannelsAtSameTime) \n\t\t\t\t\t\t\t+this.state.showChannelsAtSameTime));\n\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"min\");\n\t\t\t\t\t\tconsole.log(min);\n\t\t\t\t\t\tconsole.log(\"max\");\n\t\t\t\t\t\tconsole.log(max);\n\t\t\t\t\t}\n\t\t\t\t\tif (min < 0)\n\t\t\t\t\t\tmin = 0;\n\t\t\t\t\telse\n\t\t\t\t\tif (min > all_channels.length)\n\t\t\t\t\t{\n\t\t\t\t\t\tmin = all_channels.length;\n\t\t\t\t\t\tbAllChannels = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (max > all_channels.length)\n\t\t\t\t\t\tmax = all_channels.length;\n\n\t\t\t\t\tif (!bAllChannels)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet i;\n\t\t\t\t\t\tlet newChannelSet = []\n\t\t\t\t\t\tfor (i = min; i < max; i++) {\n\t\t\t\t\t\t\tnewChannelSet.push(all_channels[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\theaders = newChannelSet.map((jsonchannel, i) => {\n\t\t\t\t\t\t\treturn jsonchannel.title\n\t\t\t\t\t\t});\n\t\t\t\t\t\tchannels = newChannelSet.map((jsonchannel, i) => {\n\t\t\t\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\t\t\t\tshowSearch={false}\n\t\t\t\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbAllChannels = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (bAllChannels)\n\t\t\t\t{\n\t\t\t\t\theaders = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\t\treturn jsonchannel.title\n\t\t\t\t\t});\n\t\t\t\t\tchannels = all_channels.map((jsonchannel, i) => {\n\t\t\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\t\t\t\tshowSearch={false}\n\t\t\t\t\t\t\t\tselectedtyyppi={this.state.selectedtyyppi}\n\t\t\t\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t*/\n\n    /*\n\t\t\t\tlet divided = this.state.channels.size() % this.state.showChannelsAtSameTime:\t\t\t\t\t\t\n\t\t\t\tif (Config.bDebug)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"divided\");\n\t\t\t\t\tconsole.log(divided);\n\t\t\t\t}\n\t\t\t\t*/\n\n    let ret = {};\n    ret.headers = headers;\n    ret.channels = channels;\n    return ret;\n  };\n\n  textFieldChannelsAtSameTimeChanged = (event) => {\n    event.preventDefault();\n    let value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldChannelsAtSameTimeChanged\");\n      console.log(value);\n    }\n    let validNumber = parseInt(value);\n    if (Config.bDebug) {\n      console.log(\"validNumber\");\n      console.log(validNumber);\n    }\n    if (validNumber == NaN || validNumber == undefined) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    } else if (parseInt(validNumber) < 1) {\n      event.target.value = 1;\n      return;\n    } else if (parseInt(validNumber) > this.const_showChannelsAtSameTime) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    }\n    this.setState({\n      showChannelsAtSameTime: validNumber,\n      currentChannelSetIndex: 0,\n    });\n  };\n\n  textFieldSearchChanged = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldSearchChanged\");\n      console.log(value);\n    }\n    this.filterWhenUIControlsHasBeenChanged(filtercalled.SEARCHCHANE, value);\n  };\n\n  searchTextFromChannelsClicked = () => {\n    event.preventDefault();\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked\");\n    }\n    const searchText = this.textSearch;\n    if (Config.bDebug) {\n      console.log(\"searchText 2 \");\n      console.log(searchText);\n    }\n    if (\n      searchText == undefined ||\n      searchText == null ||\n      searchText.trim().length == 0\n    )\n      return;\n    // to start make indirect the search:\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked 2 \");\n    }\n    let value = this.showAllDescrRef.current.value;\n    if (!value) this.showAllDescrRef.current.value = true;\n\n    this.filterWhenUIControlsHasBeenChanged(filtercalled.MAKESEARCH, true);\n    this.setState({\n      bSearchButtonClicked: true,\n      bDisplayAllDescriptions: true,\n      channels: this.channels,\n    });\n    this.forceUpdate();\n  };\n\n  getMovieOrSportChannels = (selected) => {\n    const fitems = this.channeltypeitems;\n    if (fitems == null) return null;\n    if (selected == undefined || selected == null) return null;\n    let ret = null;\n    let foundmovies = selected === \"elokuvat\";\n    let foundsport = selected === \"urheilu\";\n    let chcoopy, foundedPrograms, progfounded;\n    let foundedChannels = [];\n\n    Array.from(fitems).forEach((cha) => {\n      if (cha === undefined) return;\n      chcoopy = {};\n      Object.assign(chcoopy, cha);\n      /*\n\t\t\tif (Config.bDebug)\n\t\t\t{\n\t\t\t\tconsole.log(\"chcoopy\");\n\t\t\t\tconsole.log(chcoopy);\n\t\t\t\tconsole.log(\"chcoopy.channelprograms\");\n\t\t\t\tconsole.log(chcoopy.channelprograms);\n\t\t\t}\n\t\t\t*/\n      foundedPrograms = [];\n      progfounded = false;\n\n      let prcopy = null;\n      Array.from(chcoopy.channelprograms).forEach((pr) => {\n        // cha.channelprograms.forEach(pr, i => {\n        if (foundmovies && pr.movie) {\n          progfounded = true;\n          foundedPrograms.push(pr);\n        } else if (foundsport && pr.sport) {\n          progfounded = true;\n          foundedPrograms.push(pr);\n        }\n      });\n\n      if (progfounded) {\n        if (foundedPrograms != null && foundedPrograms.length != 0) {\n          chcoopy.channelprograms = foundedPrograms;\n          foundedChannels.push(chcoopy);\n        }\n      }\n    });\n\n    return foundedChannels;\n  };\n\n  filterFetchedItemsIntoChannelsAfterTyyppi = (selected) => {\n    const fitems = this.state.fetcheditems;\n    if (fitems == null) return null;\n    if (selected == undefined || selected == null) return null;\n    let ret = null;\n    if (selected == \"kaikki\") ret = fitems;\n    else if (selected === \"elokuvat\") {\n      ret = this.getMovieOrSportChannels(selected);\n    } else if (selected === \"urheile\") {\n      ret = this.getMovieOrSportChannels(selected);\n    }\n    return ret;\n  };\n\n  filterFetchedItemsIntoChannelsAfterSuodin = (selected) => {\n    const fitems = this.state.fetcheditems;\n    if (fitems == null) return null;\n    if (selected == undefined || selected == null) return null;\n    let ret = null;\n    if (selected == \"kaikki\") ret = fitems;\n    else if (selected === \"ilmaiset\") {\n      ret = fitems.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.pay === false;\n      });\n    } else if (selected === \"maksulliset\") {\n      ret = fitems.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.pay === true;\n      });\n    }\n    return ret;\n  };\n\n  filterChannesAfterChannelPay = (channeltype) => {\n    //  filterChannesAfterChannelPay takes items from fetcheditems and populates: channeltypeitems,\n    let ind = null;\n    let selected = null;\n    let chtype = null;\n\n    // const fitems = this.state.fetcheditems;\n    const fitems = this.fetcheditems;\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay\");\n      console.log(\"channeltype\");\n      console.log(channeltype);\n      console.log(\"channeltype\");\n      console.log(channeltype);\n      console.log(\"fitems\");\n      console.log(fitems);\n      console.log(\"fitems.size\");\n      console.log(fitems.length);\n    }\n    if (channeltype !== undefined) {\n      ind = channeltype.ind;\n      selected = channeltype.selected;\n      chtype = channeltype.channeltype;\n    } else {\n      selected = this.state.selectedsuodattimet;\n      ind = this.state.selectedsuodatinindex;\n    }\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay 2\");\n      console.log(\"ind\");\n      console.log(ind);\n      console.log(\"selected\");\n      console.log(selected);\n    }\n\n    let chls = null;\n    if (fitems == null) chls = null;\n    else if (selected == undefined || selected == null) chls = fitems;\n    else {\n      if (selected == \"kaikki\") chls = fitems;\n      else {\n        let ret = null;\n        if (selected === \"ilmaiset\") {\n          ret = fitems.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.pay === false;\n          });\n        } else if (selected === \"maksulliset\") {\n          ret = fitems.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.pay === true;\n          });\n        }\n        chls = ret;\n      }\n    }\n\n    if (Config.bDebug) {\n      console.log(\"chls 2\");\n      console.log(chls);\n    }\n\n    let bChange = false;\n    let value = this.showOneChannelRef.current.checked;\n    if (value) {\n      this.showOneChannelRef.current.checked = false;\n      bChange = true;\n    }\n\n    if (Config.bDebug) {\n      console.log(\"bChange 2\");\n      console.log(bChange);\n      console.log(\"chls - channeltypeitems\");\n      console.log(chls);\n      console.log(\"channeltypeitems.size\");\n      console.log(chls.length);\n    }\n\n    this.channeltypeitems = chls;\n\n    // let chls = this.filterFetchedItemsIntoChannelsAfterSuodin(chtype);\n    /*\n\t\tif (!bChange)\n\t\tthis.setState({\n\t\t\tselectedsuodatinindex: ind,\t\n\t\t\tselectedsuodattimet: selected,\n\t\t\tchanneltypeitems: chls\n\t\t});\n\t\telse\n\t\tthis.setState({\n\t\t\tselectedsuodatinindex: ind,\t\n\t\t\tselectedsuodattimet: selected,\n\t\t\tchanneltypeitems: chls,\n\t\t\tbCheckShowChannelsAtSameTime: true\n\t\t});\n\t\t*/\n\n    if (Config.bDebug) {\n      console.log(\"filterChannesAfterChannelPay 3\");\n      console.log(this.state);\n    }\n  };\n\n  filterAfterProgramType = (change) => {\n    // if change parameter is undefined, then take value from state!\n    // filterAfterProgramType takes items from channeltypeitems and populates: programtypeitems\n    //         and/or channels if there is no search,\n\n    let ind = null;\n    let mychange = null;\n    if (change == undefined) mychange = this.state.selectedtyyppi;\n    else {\n      ind = change.ind;\n      mychange = change.selected;\n    }\n\n    // const fitems = this.state.channeltypeitems;\n    const fitems = this.channeltypeitems;\n    if (Config.bDebug) {\n      console.log(\"filterAfterProgramType channeltypeitems\");\n      console.log(this.channeltypeitems);\n      console.log(\"channeltypeitems.length\");\n      console.log(fitems.length);\n    }\n\n    let items = fitems;\n    if (mychange == \"kaikki\") items = fitems;\n    else if (mychange === \"elokuvat\") {\n      items = this.getMovieOrSportChannels(mychange);\n    } else if (mychange === \"urheilu\") {\n      items = this.getMovieOrSportChannels(mychange);\n    }\n\n    this.programtypeitems = items;\n    this.channels = items;\n    if (Config.bDebug) {\n      console.log(\"programtypeitems\");\n      console.log(this.programtypeitems);\n      console.log(\"programtypeitems.length\");\n      console.log(this.programtypeitems.length);\n    }\n    /*\t\t\n\t\tif (change !== undefined)\n\t\t\tthis.setState({ programtypeitems: items,\n\t\t\t\tselectedTyyppiinindex: ind,\n\t\t\t\tselectedtyyppi: selected\n\t\t\t\t});\n\t\telse\n\t\t\tthis.setState({ programtypeitems: items\t});\n\t\t\t*/\n\n    // { fetcheditems: data, channels: data,\n    //\tbUnderFetch: false, selectedsuodattimet: 'kaikki',\n    //\t\tselectedtyyppi: 'kaikki', selectedTyyppiinindex: 0,\n    //\t\tselectedsuodatinindex: 0 }\n  };\n\n  makeSearchChange = (change) => {\n    const bSearch = this.state.bSearchButtonClicked;\n    if (\n      /* bSearch && */ change === undefined ||\n      change === null ||\n      change.toString().trim().length == 0\n    ) {\n      this.textSearch = null;\n      this.channels = this.programtypeitems;\n      this.setState({ textSearch: null, bSearchButtonClicked: false });\n      // this.filterAfterSearch();\n      /*\n\t\t\tthis.setState({ textSearch: change, \n\t\t\t\tbSearchButtonClicked: false});\n\t\t\t*/\n    } else this.textSearch = change;\n    //\t\t\tthis.setState({ textSearch: change});\n    // this.setState({ textSearch: change,\n    //\tbSearchButtonClicked: false})\n  };\n\n  filterAfterSearch = (change) => {\n    // if change parameter is undefined, then take value from state!\n    // filterAfterSearch takes items from programtypeitems and populates: channels if there is a\n    // ongoing search.\n    let mychange = null;\n    if (change == undefined) mychange = this.state.bSearchButtonClicked;\n    else {\n      mychange = change;\n    }\n\n    let bAllChannels = false;\n    let foundedChannels = [];\n    let foundedPrograms = [];\n\n    if (Config.bDebug) {\n      console.log(\"filterAfterSearch mychange\");\n      console.log(mychange);\n    }\n\n    this.channels = this.state.programtypeitems;\n    if (mychange !== undefined || mychange !== null || mychange) {\n      let all_channels = this.channels;\n      //let all_channels = this.channels;\n      if (Config.bDebug) {\n        console.log(\"all_channels\");\n        console.log(all_channels);\n        console.log(\"all_channels.length\");\n        console.log(all_channels.length);\n      }\n\n      if (all_channels == null) {\n        // this.setState({ bSearchButtonClicked: false, channels: null});\n      } else {\n        // const searchText = this.state.textSearch;\n        const searchText = this.textSearch;\n        if (Config.bDebug) {\n          console.log(\"searchText\");\n          console.log(searchText);\n        }\n        if (searchText == null || searchText.toString().trim().length == 0) {\n          //\t\t\t\t\tthis.setState({ bSearchButtonClicked: false,\n          //\t\t\t\t\t\tchannels: all_channels});\n        } else {\n          let foundedChannelsTitle = null;\n          let index = -1;\n          let founded = false;\n          let progfounded = false;\n          let uppersearchText = searchText.toUpperCase();\n          let chcoopy = {};\n\n          let selectedchannelindex = this.state.selectedchannelindex;\n          if (\n            this.state.bCheckShowChannelsAtSameTime &&\n            selectedchannelindex > -1\n          ) {\n            const onech = all_channels[selectedchannelindex];\n            if (onech) {\n              all_channels = [];\n              all_channels.push(onech);\n              this.setState({\n                /* this makes a smaill bug: selectedchannelindex: 0, */\n                currentChannelSetIndex: 0,\n              });\n              selectedchannelindex = 0;\n            }\n          }\n\n          let search_channels = all_channels;\n          if (\n            this.state.bCheckShowChannelsAtSameTime &&\n            selectedchannelindex != -1\n          ) {\n            console.log(\"filter search bCheckShowChannelsAtSameTime\");\n            let selectedTitle = search_channels[selectedchannelindex].title;\n            let filteredchannels = search_channels.filter((s, i) => {\n              //\tconsole.log(\"i\");\n              //\tconsole.log(i);\n              return s.title === selectedTitle;\n            });\n            search_channels = filteredchannels;\n          }\n\n          if (Config.bDebug) {\n            console.log(\"search_channels\");\n            console.log(search_channels);\n          }\n\n          Array.from(search_channels).forEach((cha) => {\n            if (cha === undefined) return;\n            chcoopy = {};\n            index = -1;\n            founded = false;\n            // this.state.channels.forEach(cha, i => {\n            Object.assign(chcoopy, cha);\n            /*\n\t\t\t\t\t\tif (Config.bDebug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconsole.log(\"chcoopy\");\n\t\t\t\t\t\t\tconsole.log(chcoopy);\n\t\t\t\t\t\t\tconsole.log(\"chcoopy.channelprograms\");\n\t\t\t\t\t\t\tconsole.log(chcoopy.channelprograms);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n            index = chcoopy.title.toUpperCase().indexOf(uppersearchText);\n            if (index != -1) {\n              chcoopy.titleindex = index;\n              founded = true;\n              if (Config.bDebug) {\n                console.log(\"founded channel title chcoopy\");\n                console.log(chcoopy);\n              }\n            }\n            foundedPrograms = [];\n\n            let prcopy = null;\n            Array.from(chcoopy.channelprograms).forEach((pr) => {\n              if (pr === undefined) return;\n              // cha.channelprograms.forEach(pr, i => {\n              progfounded = false;\n              prcopy = {};\n              Object.assign(prcopy, pr);\n              index = prcopy.title\n                ? prcopy.title.toString().toUpperCase().indexOf(uppersearchText)\n                : -1;\n              if (index != -1) {\n                prcopy.titleindex = index;\n                /*\n\t\t\t\t\t\t\t\tprcopy.title = pr.title;\n\t\t\t\t\t\t\t\tprcopy.description = pr.description;\n\t\t\t\t\t\t\t\tprcopy.channel  = pr.channel;\n\t\t\t\t\t\t\t\tprcopy.id  = pr.id;\n\t\t\t\t\t\t\t\tprcopy.movie  = pr.movie;\n\t\t\t\t\t\t\t\tprcopy.sport  = pr.sport;\n\t\t\t\t\t\t\t\tprcopy.timestamp  = pr.timestamp;\t\n\t\t\t\t\t\t\t\t*/\n\n                founded = true;\n                progfounded = true;\n                if (Config.bDebug) {\n                  console.log(\"founded program title\");\n                  console.log(prcopy);\n                }\n              }\n              index = prcopy.description\n                ? prcopy.description\n                    .toString()\n                    .toUpperCase()\n                    .indexOf(uppersearchText)\n                : -1;\n              if (index != -1) {\n                prcopy.descriptionindex = index;\n                founded = true;\n                /*\n\t\t\t\t\t\t\t\tprcopy.title = pr.title;\n\t\t\t\t\t\t\t\tprcopy.description = pr.description;\n\t\t\t\t\t\t\t\tprcopy.channel  = pr.channel;\n\t\t\t\t\t\t\t\tprcopy.id  = pr.id;\n\t\t\t\t\t\t\t\tprcopy.movie  = pr.movie;\n\t\t\t\t\t\t\t\tprcopy.sport  = pr.sport;\n\t\t\t\t\t\t\t\tprcopy.timestamp  = pr.timestamp;\n\t\t\t\t\t\t\t\t*/\n\n                progfounded = true;\n                if (Config.bDebug) {\n                  console.log(\"founded program description\");\n                  console.log(prcopy);\n                }\n              }\n              if (progfounded) foundedPrograms.push(prcopy);\n            });\n\n            if (founded) {\n              if (foundedPrograms != null && foundedPrograms.length != 0)\n                chcoopy.channelprograms = foundedPrograms;\n              else chcoopy.channelprograms = cha.channelprograms;\n              foundedChannels.push(chcoopy);\n            }\n          });\n\n          if (foundedChannels == null || foundedChannels.length == 0) {\n            // if (change == undefined)\n            // this.setState({ bSearchButtonClicked: false,\n            //\tchannels: null});\n            this.channels = null;\n          } else {\n            if (Config.bDebug) {\n              console.log(\"foundedChannels\");\n              console.log(this.programtypeitems);\n              console.log(\"foundedChannels.length\");\n              console.log(foundedChannels.length);\n            }\n            /*\n\t\t\t\t\t\tthis.setState({ bSearchButtonClicked: true, \n\t\t\t\t\t\t\tchannels: foundedChannels});\n\t\t\t\t\t\t\t*/\n            this.channels = foundedChannels;\n          }\n        }\n      }\n    } else {\n      //\t\t\tthis.setState({ bSearchButtonClicked: false,\n      //\t\t\t\tchannels: this.state.programtypeitems });\n    }\n  };\n\n  filterWhenUIControlsHasBeenChanged = (calledfrom, change) => {\n    //  filterChannesAfterChannelPay takes items from fetcheditems and populates: channeltypeitems,\n    // filterAfterProgramType takes items from channeltypeitems and populates: programtypeitems\n    //         and/or channels if there is no search,\n    // filterAfterSearch takes items from programtypeitems and populates: channels if there is a\n    // ongoing search.\n    // if there is no 'previos' stage change, then take previous items and only filter 'own' items and\n    // put those on 'next' item state state variable. See above! (this method is called in all\n    // possible change place, ie from ui controll change methods).\n    console.log(\"filterWhenUIControlsHasBeenChanged\");\n    console.log(\"calledfrom\");\n    console.log(calledfrom);\n    console.log(\"change\");\n    console.log(change);\n\n    //\tthis.setState({ channels: null });\n\n    switch (calledfrom) {\n      case filtercalled.CHANNELTYPE:\n        console.log(\"calledfrom.CHANNELTYPE\");\n        this.filterChannesAfterChannelPay(change);\n        this.filterAfterProgramType();\n        //\tthis.filterAfterSearch(); // possible a search call\n        break;\n      case filtercalled.PROGRAMTYPE:\n        this.filterAfterProgramType(change);\n        //\tthis.filterAfterSearch(); // possible a search call\n        break;\n      case filtercalled.SEARCHCHANE:\n        // only a search data change or if null or empty set 'bSearch' false:\n        this.makeSearchChange(change);\n        break;\n      case filtercalled.MAKESEARCH:\n        this.filterAfterSearch(change); // search button pressed!\n        break;\n    }\n    //\tthis.setState({ channels: this.channels });\n  };\n\n  setDisplayAllDescriptionsTrue = (textSearch) => {\n    let value = this.showAllDescrRef.current.checked;\n    if (!value) this.showAllDescrRef.current.checked = true;\n    /*\n\t\tthis.setState({ bDisplayAllDescriptions: true, \n\t\t\tbSearchButtonClicked: textSearch !== undefined || textSearch !== null \n\t\t\t|| textSearch.trim().length !== 0 ? true : false,\n\t\t\ttextSearch: textSearch !== undefined || textSearch !== null \n\t\t\t|| textSearch.trim().length !== 0 ? textSearch : null });\n\t\tconsole.log(\"setDisplayAllDescriptionsTrue\");\n\t\tconsole.log(this.state);\n\t\t*/\n  };\n\n  getCurrentColumnIndex = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        ret = parseInt(strNum);\n        break;\n      }\n    }\n    return ret;\n  };\n\n  getH3OfCurrentColumn = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        let ind2 = parseInt(strNum);\n        ret = value.childNodes[0];\n        if (ret) {\n          let ret2 = ret.childNodes[0];\n          if (ret2) ret = ret2;\n        }\n        break;\n      }\n    }\n    return ret;\n  };\n\n  getNextColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd !== undefined && currentColInd !== null) {\n      if (cols[currentColInd + 1]) ret = cols[currentColInd + 1];\n    }\n    return ret;\n  };\n\n  getPrevColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd) {\n      if (cols[currentColInd - 1]) ret = cols[currentColInd - 1];\n    }\n    return ret;\n  };\n\n  speakScreenReader(text)\n  {\n    document.getElementById(\"screenreaderdiv\").innerHTML = text;\n    this.setState({screenreaderdiv: text })\n  }\n\n\n  altPlusKeyUp = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n    if (Config.bDebug) console.log(\"pressed\");\n    if (e.shiftKey || e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"e.shiftKey\");\n        console.log(e.shiftKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      let row = this.tablCntl.current.rows[1];\n      const cols = row.cells;\n      const currColInd = row.colIndex;\n      const lenCols = cols.length;\n      const currentCol = row.closest(\"td\");\n      if (Config.bDebug) {\n        console.log(\"--- row\");\n        console.log(row);\n        console.log(\"--- cols\");\n        console.log(cols);\n        console.log(\"--- lenCols\");\n        console.log(lenCols);\n        console.log(\"--- currColInd\");\n        console.log(currColInd);\n        console.log(\"--- currentCol\");\n        console.log(currentCol);\n\n        console.log(\"--- this.tablCntl.current\");\n        console.log(this.tablCntl.current);\n      }\n      let currentColInd = null;\n      let path = null;\n\n      // .item(0).innerHTML\n      switch (e.key) {        \n        case \"r\":\n        case \"R\":\n          e.preventDefault();\n          path = document.activeElement;\n          if (path && path.innerHTML) {\n            this.speakScreenReader(path.innerHTML.toString());\n          }\n          break;\n\n        case \"c\":\n        case \"C\":\n          e.preventDefault();\n          path = e.composedPath();\n          //... handle alt+o\n          divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            const channelTextHtml = divInsideOfCol.innerHTML;\n            const channelText = channelTextHtml.toString();\n            if (channelText)\n              this.speakScreenReader(channelText);\n          }\n          break;\n\n        case \"o\":\n        case \"O\":\n          e.preventDefault();\n          //... handle alt+o\n          path = e.composedPath();\n          let divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            divInsideOfCol.focus();\n          }\n          break;\n\n        case \"k\":\n        case \"K\":\n          e.preventDefault();\n          //... handle alt+k\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd > 0) {\n            const prevcol = this.getPrevColumn(cols, currentColInd);\n            if (prevcol) {\n              prevcol.focus();\n            }\n          }\n          break;\n\n        case \"a\":\n        case \"A\":\n          e.preventDefault();\n          //... handle alt+s\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd < lenCols - 1) {\n            const nextcol = this.getNextColumn(cols, currentColInd);\n            // const nextcol = getH3OfCurrentColumn(e.path);\n            // document.getElementById(\"tablecol\" +(currentColInd+1)).focus();\n            if (nextcol) {\n              if (Config.bDebug) {\n                console.log(\"nextcol\");\n                console.log(nextcol);\n              }\n              nextcol.focus();\n              // document.getElementById(\"tablecol\" +(currentColInd+1)).focus();\n              // route(\"#\"+nextcol.id);\n              // Config.callFocusOfId(nextcol.id);\n            }\n          }\n          /* test code for firefox browser:\n\n\t\t\t\tdivInsideOfCol = this.getH3OfCurrentColumn(e.path);\n\t\t\t\tif (divInsideOfCol)\n\t\t\t\t{\n\t\t\t\t\t divInsideOfCol.setAttribute('tabindex', '0');\t\t\t\t\t\n\t\t\t\t\t divInsideOfCol.focus();\n\t\t\t\t\t window.setTimeout(function ()\n    \t\t\t\t{\n        \t\t\t\tdocument.getElementById(divInsideOfCol.id).focus();\n    \t\t\t\t}, 100);\n\t\t\t\t\t// document.getElementById(divInsideOfCol.id).focus(); \n\t\t\t\t\t// aField = document.getElementById('entryField');\n\t\t\t\t\t// Config.callFocusOfId(divInsideOfCol.id);\n\t\t\t\t\t// document.getElementById(divInsideOfCol.id).click();\n\t\t\t\t}\n\t\t\t\t*/\n          break;\n      }\n    }\n  };\n\n  showdcurrentprograms = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    console.log(\"showdcurrentprograms\");\n    let bValue = value; // this.state.bDisplayAllDescriptions;\n    console.log(\"bValue\");\n    console.log(bValue);\n    /*\n\t\tif (value === 'on')\n\t\t\tbValue = true;\n\t\tconsole.log(value);\n\t\t*/\n    this.setState({\n      bshowdcurrentprograms: bValue,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  altPlusKeyUpProgramHeader = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n    if (Config.bDebug) console.log(\"pressed\");\n    if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n      // .item(0).innaerHTML\n      switch (e.key) {\n        case \"m\":\n        case \"M\":  \n          //... handle alt+t\n          if (document.getElementById(\"idprogramtableh3\")) {\n            let divh3 = document.getElementById(\"idprogramtableh3\");\n            if (divh3) divh3.focus();\n          }\n          break;\n          case \"n\":\n          case \"N\":  \n              //... handle alt+t\n              if (document.getElementById(\"divControl\")) {\n                let divh3 = document.getElementById(\"divControl\");\n                if (divh3) divh3.focus();\n              }\n              break;\n              case \"i\":\n                case \"I\":  \n                      //... handle alt+t\n                      if (document.getElementById(\"divDays\")) {\n                        let divh3 = document.getElementById(\"divDays\");\n                        if (divh3) divh3.focus();\n                    }\n                    break;          \n          case \"j\":\n          case \"J\":\n                 this.nextChannelSetClicked(e);            \n         //         if (document.getElementById(\"button_next_channel_page\")) {\n    //              let buttonNext = document.getElementById(\"button_next_channel_page\");\n    //              if (buttonNext) buttonNext.click();\n        //        }\n              break;\n            case \"g\":\n            case \"G\":\n                  this.prevChannelSetClicked(e);\n             //  if (document.getElementById(\"button_prev_channel_page\")) {\n    //              let buttonPrev = document.getElementById(\"button_prev_channel_page\");\n    //              if (buttonPrev) buttonPrev.click();\n           //    }\n               break;\n          default:\n            return this.altPlusKeyUp(e); \n            break;  \n      }\n    }\n  };\n\n  getSectionWidthCss = () => {\n    return \"width: \" + this.section_width + \"px;\";\n  };\n\n  buttonHidePressed = (e) => {\n    let bValue = !this.state.hideButton;\n    var x = document.getElementById(\"hideDiv\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n    this.setState({ hideButton: bValue, hideButtonText: bValue ? \"Näytä ohje\" : \"Piilota ohje\" });\n  }\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    let sectionwidth = \"\";\n    if (state.fetcheditems != null && state.fetcheditems.length > 0) {\n      sectionwidth = this.getSectionWidthCss();\n    }\n\n    const buttonFocusStyle =\n      props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \" outline: 15px solid white;\"\n        : \" outline: 15px solid black;\";\n\n    const inputw =\n      \"float: none; display: inline-block; vertical-align: middle; \";\n    const buttoninputw =\n      \"float: none; display: inline-block; vertical-align: middle; \" +\n      (props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"\"\n        : \" color: white; \");\n\n    let divDialogStyle =\n      props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n        : \"\";\n    const storestate = this.store.getState();\n    let tableBorderStyle = \"\";\n    let table_border_color = \"black\";\n    if (state.bShowTableBorder) {\n      tableBorderStyle = \" border: 1px solid \" + table_border_color + \";\";\n\n      if (props.themevalue === \"--dark\") {\n        table_border_color = \"white\";\n        tableBorderStyle = \" border: 1px solid \" + table_border_color + \";\";\n      }\n    }\n    // suodatus=ilmaiset,maksulliset,kaikki\n    // \treturn <Select.Item id={i} >{child}</Select.Item>\n    let selectchanneltypes = this.arr_selectchanneltypes.map((child, i) => {\n      return (\n        <option value={child} id={i}>\n          {child}\n        </option>\n      );\n    });\n\n    // tyyppi=kaikki,urheilu,elokuvat\n    // \treturn <Select.Item id={i}>{child}</Select.Item>\n    let selecttyyppi_items = this.arr_selecttyyppi_items.map((child, i) => {\n      return (\n        <option value={child} id={i}>\n          {child}\n        </option>\n      );\n    });\n\n    let headers = null;\n    let channels = null;\n    /*\n\t\tif (state.fetcheditems != null)\n\t\t{\n\t\t\theaders = this.getTableHeaders();\n\t\t\tchannels = this.getTableRows();\t\n\t\t}\n\t\t*/\n\n    let selectchannels = null;\n    let selectedchannelindex = state.selectedchannelindex;\n    if (selectedchannelindex < 0) selectedchannelindex = 0;\n    else if (state.ddd) selectedchannelindex = 0;\n\n    let tableheaders = null;\n    let tabletds = null;\n    if (state.channels !== null) {\n      // selected={child.title.fi===state.selectedcategory.title.fi}\n      // \treturn <Select.Item id={i} selected={i===selectedchannelindex}\n      //\t>{child.title}</Select.Item>\n      selectchannels = state.channels.map((child, i) => {\n        return (\n          <option\n            selected={i === selectedchannelindex}\n            value={child.title}\n            id={i}\n          >\n            {child.title}\n          </option>\n        );\n      });\n      let tableheaders_and_rows =\n        this.getTableHeadersAndTableRowsAfterChannels();\n      headers = tableheaders_and_rows.headers;\n      /*\n\t\t\tif (headers != null)\n\t\t\t\ttableheaders = headers.map((child, i) => {\n\t\t\t\t\treturn <th style={'vertical-align: top; padding-left: 5px; padding-right: 5px; ' +tableBorderStyle}>{child}</th> \t\t\t\t\n\t\t\t\t});\n\t\t\t\t*/\n      channels = tableheaders_and_rows.channels;\n      if (channels != null && channels.length > 0)\n        tabletds = channels.map((child, i) => {\n          return (\n            <td\n              tabIndex=\"0\"\n              id={\"tablecol\" + i}\n              lang=\"fi\"\n              style={\n                \"vertical-align: top; padding-left: 5px; padding-right: 5px;\" +\n                tableBorderStyle\n              }\n            >\n              {child}\n            </td>\n          );\n        });\n    }\n\n    if (channels != null) {\n      if (tableheaders != null) console.log(tableheaders.length);\n      if (Config.bDebug) {\n        console.log(\"tabletds.length\");\n        if (tabletds == null || tabletds == undefined)\n          console.log(\"tabletds == null || tabletds == undefined\");\n        else console.log(tabletds.length);\n      }\n    }\n    /*\n\t\tif (state.channels != null)\n\t\t{\n\t\t\theaders = this.state.channels.map((jsonchannel, i) => {\n\t\t\t\treturn <th>{jsonchannel.title}</th>\n\t\t\t});\n\t\t\tchannels = this.state.channels.map((jsonchannel, i) => {\n\t\t\t\treturn <AmppariChannel id={i} data={jsonchannel}\n\t\t\t\t\tdisplayAllDescriptions={this.state.bDisplayAllDescriptions} />;\n\t\t\t});\n\t\t}\n\t\t*/\n\n    /*\n\t\t  let msgdiv = null;\n\t\t  if ((state.errmsg != null))\n\t          msgdiv = <p className={\"p\" +cssDark} tabIndex=\"0\" style={style.political_p} aria-label={state.errmsg}></p>;\n\t\t*/\n\n    return (\n      <Fragment>\n        <div\n          id=\"amppari_main_div\"\n          style={\n            \" min-height: 100%; margin: 0px; height: 100%: \" + divDialogStyle\n          }\n          onKeyUp={this.altPlusKeyUpProgramHeader}\n        >\n          <div\n            class={style.cardHeader + divDialogStyle}\n            \n          >\n            <h1 tabIndex=\"0\" lang=\"fi\" id=\"focus_1_element\">\n              Amppari {this.getFetchedDate()}\n            </h1>\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              <div class={style.cardHeader}>\n                <div lang=\"fi\" tabIndex=\"0\" id=\"divDays\">\n                  Hae tv-ohjelmatiedot alimpaan taulukkoon alla olevan\n                  päivämäärän mukaan:\n                </div>\n                <div class={style.cardHeader}>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(0)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(0)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(1)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(1)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(2)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(2)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(3)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(3)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(4)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(4)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(5)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(5)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(6)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(6)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(7)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(7)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(8)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(8)}\n                  </a>\n                  <space> </space>\n                  <a\n                    lang=\"fi\"\n                    href=\".\"\n                    id={\"dayname_\" + this.getPlus1DayId(9)}\n                    onClick={this.onClickSetDateString}\n                  >\n                    {this.getPlus1Day(9)}\n                  </a>\n                </div>\n              </div>\n            </section>\n\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              <div>\n                <div\n                  lang=\"fi\"\n                  tabIndex=\"0\"\n                  aria-labelled=\"Miten ohjelmatiedot näytetään\"\n                >\n                  <div style={{ \"background-color\": \"red\", color: \"yellow\" }} tabIndex=\"0\">\n                    {state.errmsg}\n                  </div>\n                  <div class=\" mdc-typography--caption\" tabIndex=\"0\" id=\"divControl\">\n                    Miten ohjelmatiedot näytetään:\n                  </div>\n                </div>\n                <br />\n                <span>\n                  <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    disabled={\n                      state.channels == null ||\n                      (state.showChannelsAtSameTime == 1 &&\n                        state.bCheckShowChannelsAtSameTime) ||\n                      state.showChannelsAtSameTime >= state.channels.length\n                    }\n                    style={buttoninputw}\n                    text=\"&lt;\"\n                    onClick={this.prevChannelSetClicked}\n                    aria-label=\"Aikaisemmat kanavat\"\n                  ></Button>\n                </span>\n                <space> </space>\n                <span>\n                  <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    aria-label=\"Seuraavat kanavat\"\n                    disabled={\n                      state.channels == null ||\n                      (state.showChannelsAtSameTime == 1 &&\n                        state.bCheckShowChannelsAtSameTime) ||\n                      state.showChannelsAtSameTime >= state.channels.length\n                    }\n                    style={buttoninputw}\n                    text=\"&gt;\"\n                    onClick={this.nextChannelSetClicked}\n                  ></Button>\n                </span>\n\n                <span>\n                  <SwitchCheckbox\n                    lang=\"fi\"\n                    inputid=\"checkshowdcurrentprograms\"\n                    labeltext=\"Näytä par'aikaa ja myöhemmät esitettävät\"\n                    checked={state.bshowdcurrentprograms}\n                    onChange={this.showdcurrentprograms}\n                    style={inputw}\n                    propref={this.checkshowdcurrentprogramsRef}\n                  />\n                </span>\n                <span>\n                  <SwitchCheckbox\n                    onChange={this.showAllDescriptions}\n                    propref={this.showAllDescrRef}\n                    inputid=\"checkshowdescribtions\"\n                    style={inputw}\n                    labeltext=\"Näytä selitykset\"\n                    checked={state.bDisplayAllDescriptions}\n                  />\n                </span>\n                <span>\n                  <SwitchCheckbox\n                    onChange={this.showOneChannel}\n                    propref={this.showOneChannelRef}\n                    inputid=\"checkshowonechannel\"\n                    style={inputw}\n                    labeltext=\"Näytä yksi kanava:\"\n                    checked={state.bCheckShowChannelsAtSameTime}\n                  />\n                  <select\n                    tabIndex=\"0\"\n                    lang=\"fi\"\n                    selectedIndex={selectedchannelindex}\n                    disabled={!state.bCheckShowChannelsAtSameTime}\n                    preselected\n                    outlined\n                    ref={this.selectChannelRef}\n                    style={inputw}\n                    onChange={(e) => {\n                      this.setState({\n                        selectedchannelindex: e.target.selectedIndex,\n                        bSearchButtonClicked: false,\n                      });\n                    }}\n                  >\n                    {selectchannels}\n                  </select>\n                </span>\n                <space> </space>\n                <span>\n                  <label for=\"input_number_columss\" lang=\"fi\" style={inputw}>\n                    Näytettävien kanavien lkm:{\" \"}\n                  </label>\n                  <input\n                    id=\"input_number_columss\"\n                    lang=\"fi\"\n                    name=\"input_number_columns\"\n                    disabled={this.state.bCheckShowChannelsAtSameTime}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10\"\n                    style={inputw}\n                    value={\n                      this.state.showChannelsAtSameTime === -1\n                        ? \"\"\n                        : this.state.showChannelsAtSameTime\n                    }\n                    onKeyUp={this.textFieldChannelsAtSameTimeChanged}\n                  />\n                </span>\n                <space> </space>\n                <SearchPrograms\n                  disabled={\n                    state.fetcheditems == null || state.fetcheditems.length == 0\n                  }\n                  setDisplayAllDescriptionsTrue={\n                    this.setDisplayAllDescriptionsTrue\n                  }\n                  store={this.store}\n                  setRemoverFunction={this.setRemoverFunction}\n                  ref={this.searchProgramRef}\n                />\n                <space> </space>\n                <span>\n                  <SwitchCheckbox\n                    onChange={this.showTableBorders}\n                    propref={this.showTableBordersRef}\n                    lang=\"fi\"\n                    inputid=\"checkTableBorders\"\n                    style={inputw}\n                    labeltext=\"Näytä taulun raamit\"\n                    checked={state.bShowTableBorder}\n                  />\n                </span>\n                <ProgramTypes\n                  disabled={\n                    state.fetcheditems == null || state.fetcheditems.length == 0\n                  }\n                  store={this.store}\n                  ref={this.programTypeRef}\n                  setRemoverFunction={this.setRemoverFunction}\n                  bshowdcurrentprograms={props.bshowdcurrentprograms}\n                />\n                <ChannelTypes\n                  disabled={\n                    state.fetcheditems == null || state.fetcheditems.length == 0\n                  }\n                  store={this.store}\n                  ref={this.channelTypeRef}\n                  setRemoverFunction={this.setRemoverFunction}\n                />\n              </div>\n            </section>\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              {\" \"}\n              <div>\n                <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n                  {state.errmsg}\n                </div>\n                <div class=\" mdc-typography--caption\">\n                  <h3 id=\"idprogramtableh3\" lang=\"fi\" tabIndex=\"0\">\n                    Ohjelmataulukko&emsp;\n                    <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    style={buttoninputw}\n                    text={state.hideButtonText}\n                    id=\"buttonHide\"\n                    onClick={this.buttonHidePressed}\n                    aria-label=\"Näytä/Piilota teksi\"\n                  ></Button>\n\n                  </h3>\n\n                  <div class={style.cardHeader} style={state.hideButton} id=\"hideDiv\">\n                    <h3 lang=\"fi\" tabIndex=\"0\">\n                      -- Ohjelmataulukko, liikutaan hiirellä tai taulukon\n                      sisällä seuraavilla näppäimillä: alt+a = seuraava kanava,\n                      alt+k = edellinen kanava sekä alt+o = liikutaan kanavan otsakkeeseen. \n                      Myös ensimmäisen kerran/sama kanava on mahdollista painaa al+c:ää, \n                      jolloin ruudunlukuohjelma sanoo kanavan nimen, mutta selauskohta \n                      ei muutu. Samoin atl+r:lla toistetaan kerran/ohjelmatieto sen teksti.\n                      Ohjelman kuvailun saa näkymään tab näppäimellä ja enterillä \n                      tai hiirenklikkauksella. Taulukon sisällä toimivat myös tab \n                      sekä shift-tab näppäimet. Taulukon yläpuolelle tekstin \n                      \"Ohjelmataulukko\" kohdalle pääsee komennolla alt+m. Myös seuraavat \n                      näppäimet toimivat, kun kanavia enemmän kuin taulukossa näytetään: \n                      edelliset kanavat: alt+g ja seuraavat kanavat: alt+j. Alt+i vie \n                      suoraan päiväkohtaisten hakulinkkien yläpuolelle. Alt+n vie suoraan\n                      miten taulukon ohjelmatiedot näytetään yläpuolelle.\n                    </h3>\n                  </div>\n                  {state.bSearchButtonClicked && state.textSearch != null\n                    ? \" (haun tulokset)\"\n                    : \"\"}\n                </div>\n                {tabletds === null && (\n                  <div\n                    tabIndex=\"0\"\n                    lang=\"fi\"\n                    aria-label=\"Ei ohjelmatietoja haettu\"\n                  >\n                    <br></br>\n                    Ei ohjelmatietoja haettu tai tekstihakutulosta (tyhjää\n                    hakutekstikenttä)\n                  </div>\n                )}\n              </div>\n            </section>\n            <section\n              style={this.state.themevalue === \"\" ? \"\" : this.tablesectionStyle}\n            >\n              <table\n                id=\"programtable\"\n                style={\n                  \"width:100%; \" +\n                  tableBorderStyle +\n                  (this.state.themevalue === \"\"\n                    ? this.sectionStyle\n                    : this.state.themevalue)\n                }\n                ref={this.tablCntl}\n              >\n                <tbody>\n                  <tr>{tableheaders}</tr>\n                  <tr>{tabletds}</tr>\n                </tbody>\n              </table>\n            </section>\n          </div>\n          <div id=\"screenreaderdiv\" tabindex=\"0\" aria-live=\"priority || polite\"\n               class=\"visually-hidden\" aria-label={this.state.screenreaderdiv} />\n       \n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/*\n\t\t\t\t\t<Formfield>\n\t\t\t\t\t\t\t<div class={style.cardHeader}>Ohjelmatyyppi<space>     </space>\n\t\t\t\t\t\t\t  <Select tabIndex=\"0\" \n\t\t\t\t\t\t\t\t\tselectedIndex={this.state.selectedTyyppiinindex}\n\t\t\t\t\t\t\t\t\tpreselected outlined \n\t\t\t\t\t\t\t\t\tonChange={(e)=>{\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"e.target.target\");\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.text);\n\t\t\t\t\t\t\t\t\t\tconst ind = e.target.selectedIndex;\n\t\t\t\t\t\t\t\t\t\tconst selected = this.arr_selecttyyppi_items[e.target.selectedIndex];\n\t\t\t\t\t\t\t\t\t\tlet changed ={};\n\t\t\t\t\t\t\t\t\t\tchanged.ind = ind;\n\t\t\t\t\t\t\t\t\t\tchanged.selected = selected;\n\t\t\t\t\t\t\t\t\t\tthis.filterWhenUIControlsHasBeenChanged(filtercalled.PROGRAMTYPE, changed);\n\t\t\t\t\t\t\t\t\t\tthis.setState({ selectedTyyppiinindex: ind,\n\t\t\t\t\t\t\t\t\t\t\tselectedtyyppi: selected,\n\t\t\t\t\t\t\t\t\t\t\t channels: this.channels,\n\t\t\t\t\t\t\t\t\t\t\t selectedchannelindex: 0\n\t\t\t\t\t\t\t\t\t\t\t});\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{selecttyyppi_items}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t    </div>\n\t\t\t\t\t\t</Formfield>\n*/\n","import { h, Component, createRef } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import 'preact-material-components/Button/style.css';\n\nimport Config from \"../../utils/Config\";\nimport style from \"./style\";\n// import Category from './Category';\n// import GridOrList from './GridOrList';\nimport Amppari from \"../../components/amppari/Amppari\";\n\n// import StaticFunctions from '../../utils/StaticFunctions';\n\nexport default class AmppariRoute extends Component {\n  control = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"AmppariRoute.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.state = {\n      errmsg: null,\n    };\n\n    this.control = createRef();\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"AmppariRoute componentDidMount 1\");\n    const loadTime =\n      window.performance.timing.domContentLoadedEventEnd -\n      window.performance.timing.navigationStart;\n    console.log(\"loadTime=\" + loadTime);\n\n    // this.fetchProgCategories();\n  }\n\n  removelisteners = () => {};\n\n  /*\n\t\t'Origin': 'localhost:8080',\n\t\t\t'User-Agent': 'curl/7.55.1',\n\t\t\t'Host': 'external.api.yle.fi',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'Access-Control-Allow-Credentials': true,\n\t\t\t'Cross-Origin-Resource-Policy': 'cross-origin',\n\t\t\t'Access-Control-Allow-Methods': 'GET,OPTIONS',\n\t\t\t'Access-Control-Allow-Headers': 'Content-Type'\n*/\n\n  // \t<div class={`${style.home} page`}>\n  // \t\t\t</div>\n\n  render(props, state) {\n    return (\n      <div class={`${style.home} page`}>\n        <Amppari store={props.store} themevalue={props.themevalue} />\n        <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n          {state.errmsg}\n        </div>\n      </div>\n    );\n  }\n}\n","    \n//import 'preact-material-components/Theme/style.css';\nimport AmppariShowProgram from './AmppariShowProgram';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nfunction AmppariChannel(props)\n{\n       // const cssDark = useContext(CssDark);\n        let displayitems = null;\n        /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.description = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n        */\n        if (props.data.channelprograms !== null)\n        {\n            let filteredchannels = props.data.channelprograms;\n            if (props.selectedtyyppi !== undefined && props.selectedtyyppi !== 'kaikki')\n            {\n                if (props.selectedtyyppi === 'elokuvat')\n                {\n                    let filteredchannels1 = filteredchannels.filter( (s, i) =>\n\t\t\t\t\t{ \n\t\t\t\t\t//\tconsole.log(\"i\");\n\t\t\t\t\t//\tconsole.log(i);\n\t\t\t\t\t\treturn s.movie == true \n\t\t\t\t\t} );\n                    filteredchannels = filteredchannels1;\n                }\n                else\n                if (props.selectedtyyppi === 'urheilu')\n                {\n                    let filteredchannels1 = filteredchannels.filter( (s, i) =>\n\t\t\t\t\t{ \n\t\t\t\t\t//\tconsole.log(\"i\");\n\t\t\t\t\t//\tconsole.log(i);\n\t\t\t\t\t\treturn s.sport === true \n\t\t\t\t\t} );\n                    filteredchannels = filteredchannels1;\n                }\n            }\n            \n            if (props.bshowdcurrentprograms && filteredchannels)\n            {\n                let i = 0, max = filteredchannels.length;\n                let program, nextprogram;\n                let filteredchannels1 = [];\n                for(i = 0; i < max; i++)\n                {\n                    program = filteredchannels[i];\n                    nextprogram = null;\n                    if ((i+1) < max)\n                        nextprogram = filteredchannels[i+1];\n                    if (!props.oldProgram(program, props.currenttime, nextprogram))\n                        filteredchannels1.push(program);\n                }\n                filteredchannels = filteredchannels1;\n            }\n\n            displayitems = filteredchannels.map((program, i) => {\n\t\t\t\treturn <AmppariShowProgram id={i} data={program}\n                    displayAllDescriptions={props.displayAllDescriptions}\n                    themevalue={props.themevalue}\n                    getPOfIndex={props.getPOfIndex}\n                    showSearch={props.showSearch == undefined ? false \n                        : props.showSearch}\n                    channel={props.data.title.toString()} />;\n\t\t\t});\n        }\n\n        return ( \n            <div>\n            <h3 tabIndex=\"0\" lang=\"fi\" aria-label={props.data.title}>\n                {props.showSearch && \n\t\t\t\t\tprops.data.titleindex != undefined\n\t\t\t\t\t? props.getPOfIndex(props.data.titleindex, \n                    props.data.title, props.themevalue) : props.data.title}</h3>\n            <div>{displayitems}</div>\n            </div>\n          );\n}\n\nexport default AmppariChannel;","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__nIvoY\",\"cardHeader\":\"cardHeader__sKTze\",\"cardBody\":\"cardBody__ktGWq\"};","import { h, Fragment, Component, createRef } from \"preact\";\nimport { useState, useRef } from \"preact/hooks\";\n//import Chips from 'preact-material-components/Chips';\n//import 'preact-material-components/Chips/style.css';\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\n//import 'preact-material-components/Theme/style.css';\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\n\n//import Dialog from '../dialog/FDialog'\n\nimport dayjs from \"dayjs\";\n\nimport Config from \"../../utils/Config\";\nimport ShowProgram from \"../telkku/ShowProgram\";\n\ndayjs.locale(\"fi\");\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component\nfunction AmppariShowProgram(props) {\n  let divDialogStyle =\n    props.themevalue !== undefined && props.themevalue !== \"\"\n      ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n      : \"color: #FFF; background-color: black; border-color: #FFF;\";\n\n  const [displaydescription, setDisplayDescription] = useState(false);\n  const scrollingDlgRef = useRef(null);\n\n  // dot = \" height: 25px; width: 25px; background-color: #bbb; border-radius: 50%; display: inline-block;\";\n  const dot =\n    \"border-radius: 50%; width: 10px; height: 10px; padding: 2px; background: #fff; \" +\n    \" border: 2px solid #000; color: #000; text-align: center; font: 10px Arial, sans-serif;\";\n\n  const onClickDisplay = (event) => {\n    event.preventDefault();\n    // console.log(\"onClickDisplay\");\n    if (props.displayAllDescriptions) return;\n    if (!displaydescription)\n      // scrollingDlgRef.current.MDComponent.show();\n      scrollingDlgRef.current.open();\n      changeDisplayDescriptionValue();\n  };\n\n  const changeDisplayDescriptionValue = () => changeDisplayDes(!displaydescription);\n\n  const changeDisplayDes = (bValue) => {\n    setDisplayDescription(bValue);\n  }\n\n\n  const onClickDisplayDialog = (event) => {\n    event.preventDefault();\n    // console.log(\"onClickDisplayDialog\");\n    if (displaydescription)\n      //scrollingDlgRef.current.MDComponent.close();\n      scrollingDlgRef.current.close();\n      changeDisplayDescriptionValue();\n  };\n\n  const getTime = (timemillisec) => {\n    let day = new Date(timemillisec * 1000);\n    let hours = day.getHours();\n    let minutes = day.getMinutes();\n    if (minutes < 10) minutes = \"0\" + minutes;\n    if (hours < 10) hours = \"0\" + hours;\n    return \"\" + hours + \":\" + minutes;\n  };\n\n  /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.description = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n\n          <Chips.Chip onClick={onClickDisplay} >\n                    <Chips.Text>{data.title}</Chips.Text></Chips.Chip> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip> }\n\n                     {(!displaydescription ? \n                <Button onClick={onClickDisplay} >\n                    {data.title}</Button> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip>) }\n\n                                 <p>Count: {count}</p>\n            <button onClick={increment}>Increment</button>\n            <button onClick={decrement}>Decrement</button>\n\n                <Chips.Text>{props.data.title}</Chips.Text></Chips.Chip> \n        */\n\n  const openHtmlPage = (event) => {\n    console.log(\"openHtmlPage\");\n    event.preventDefault();\n    let blankurl = event.target.href;\n    console.log(\"blankurl\");\n    console.log(blankurl);\n    // window.open(blankurl, '_blank', \"Ampparissa\", \"location=no\");\n    window.open(blankurl, \"_blank\", \"Ampparissa\");\n    return false;\n  };\n\n  const getPOfTitleIndex = (props) => {\n    console.log(\"getPOfTitleIndex\");\n\n    let index = props.data.titleindex;\n    console.log(\"titleindex\");\n    console.log(index);\n    let title = props.data.title;\n    if (title != null) title = title.toString();\n    console.log(\"title\");\n    console.log(title);\n    if (index == undefined || index < 0) return title;\n    let ret = props.getPOfIndex(index, title, props.themevalue);\n    console.log(\"ret after getPOfIndex\");\n    console.log(ret);\n    return ret;\n  };\n\n  const getProgramSymbol = (props) => {\n    let ret = null;\n    if (props.data.movie) ret = <span style={dot}>E</span>;\n    else if (props.data.sport) ret = <span style={dot}>U</span>;\n\n    return ret;\n  };\n\n  const enterKeyDown = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which;\n\n    if (Config.bDebug) console.log(\"pressed\");\n\n    let currentColInd = null;\n\n    // .item(0).innerHTML\n    switch (e.keyCode) {\n      case 13:\n        onClickDisplay(e);\n        break;\n    }\n  };\n\n  if (Config.bDebug) {\n    console.log(\"Amppari ShowProgram.js props\");\n    console.log(props);\n  }\n  // <p><a href={props.data.link} target=\"_blank\" >ohjelmalinkki</a></p>onClik={this.openHtmlPage} linkurl={props.data.link}\n\n  // +this.getPOfTitleIndex()\n  return (\n    <Fragment>\n      <div>\n        <div\n          tabIndex=\"0\"\n          lang=\"fi\"\n          onClick={onClickDisplay}\n          onKeyDown={enterKeyDown}\n        >\n          <p>\n            <b>\n              {props.showSearch && props.data.titleindex != undefined ? (\n                <div>\n                  {getProgramSymbol(props)} {getTime(props.data.timestamp)}\n                  <space> </space>\n                  {getPOfTitleIndex(props)}\n                </div>\n              ) : (\n                <div>\n                  {getProgramSymbol(props)} {getTime(props.data.timestamp)}\n                  <space> </space>\n                  {props.data.title.toString()}\n                </div>\n              )}\n            </b>\n          </p>\n          {props.displayAllDescriptions ? (\n            <Fragment>\n              <p>\n                {props.showSearch && props.data.descriptionindex != undefined\n                  ? props.getPOfIndex(\n                      props.data.descriptionindex,\n                      props.data.description.toString(),\n                      props.themevalue\n                    )\n                  : props.data.description.toString()}\n              </p>\n              {props.data.link != undefined || props.data.link != null ? (\n                <p>\n                  <a href={props.data.link} onClick={this.openHtmlPage}>\n                    ohjelmalinkki\n                  </a>\n                </p>\n              ) : null}\n            </Fragment>\n          ) : null}\n        </div>\n      </div>\n      <Dialog\n        role=\"dialog\"\n        id=\"showamppariprogram\"\n        aria-labelledby=\"amppari\"\n        aria-modal=\"false\"\n        lang=\"fi\"\n        ref={scrollingDlgRef}\n        title={props.channel}\n        okButtonPressed={onClickDisplayDialog}\n        themevalue={props.themevalue}\n        okText=\"Sulje\"\n        scrollable={true}\n      >\n        <div style={divDialogStyle}>\n          <div class=\"card-header\">\n            <h3\n              lang=\"fi\"\n              id=\"h1loading\"\n              default\n              tabIndex=\"0\"\n              class=\" mdc-typography--title\"\n            >\n              {getProgramSymbol(props)} {getTime(props.data.timestamp)}\n              <space> </space> {props.data.title.toString()}\n            </h3>\n            <h3 tabIndex=\"0\" class=\" mdc-typography--title\">\n              {props.data.description.toString()}\n            </h3>\n            <br />\n          </div>\n        </div>\n      </Dialog>\n    </Fragment>\n  );\n}\n\n/*\n                    <Dialog role=\"dialog\" id=\"dialogprogram\" aria-modal=\"true\"\n                               ref={scrollingDlgRef}>\n                                <Dialog.Header tabIndex=\"0\" lang=\"fi\">{props.channel}</Dialog.Header>\n                                <Dialog.Body scrollable={true}>\n                                  <div class=\"card-header\">\n                                     <h3 id=\"h1lprogram\" tabIndex=\"0\" class=\" mdc-typography--title\">\n                                     {getProgramSymbol(props)} {getTime(props.data.timestamp)} \n                                     <space> </space> {props.data.title.toString()}</h3>\n                                     <h3 tabIndex=\"0\" class=\" mdc-typography--title\">\n                                         {props.data.description.toString()}</h3><br/>\n                                     </div>\n                                </Dialog.Body>\n                                <Dialog.Footer>\n                                    <Dialog.FooterButton onCancel={onClickDisplayDialog} cancel={true} >Sulje</Dialog.FooterButton>\n                                </Dialog.Footer>\n                    </Dialog> \n*/\nexport default AmppariShowProgram;\n"],"sourceRoot":""}