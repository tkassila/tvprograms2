{"version":3,"sources":["webpack:///./components/dialog/Dialog.css","webpack:///./components/dialog/PreactDialog.js","webpack:///./components/button/Button.js","webpack:///./components/checkbox/CheckBox.js","webpack:///./components/telkku/ShowProgram.js","webpack:///./components/telkku/style.css","webpack:///./routes/telkku/style.css","webpack:///./components/telkku/RssTelkkuChannel.js","webpack:///./components/telkku/Telkku.js","webpack:///./routes/telkku/TelkkuRoute.js"],"names":["PreactDialog","Component","constructor","props","super","_defineProperty","event","preventDefault","this","dialogRef","MDComponent","show","current","Config","bDebug","console","log","closeButtonRef","focus","close","cancelButtonPressed","okButtonPressed","setTheme","Omiu","e","window","keyCode","state","dialogid","_uniqueId","createRef","componentDidMount","render","h","Fragment","Dialog","ref","role","id","style","css","Header","lang","tabIndex","title","Body","scrollable","Card","class","children","Media","className","Footer","onKeyDown","enterKeyDown","slot","undefined","type","onClick","cancelBttnPressed","cancelText","okBttnPressed","autofocus","okText","Button","buttonid","Date","now","disabled","text","SwitchCheckBox","errmsg","chechRef","inputw","onChange","propref","inputid","checked","for","labeltext","ShowProgram","displaydescription","setDisplayDescription","useState","scrollingDlgRef","useRef","onClickDisplay","displayAllDescriptions","open","changeDisplayDescriptionValue","changeDisplayDes","bValue","onClickDisplayDialog","showSearch","data","titleindex","getPOfIndex","descriptionindex","description","themevalue","link","href","blankurl","target","channel","replace","RssTelkkuChannel","displayitems","channelprograms","map","program","i","toString","Telkku","_this","section_width","async","init_pagenumber","init_max","_mounted","bAllChannelsLoaded","bUnderFetch","setState","channelnumber","max","fetcheddata","fetcheditems","channels","length","fetchRssTelkkuChannel","push","error","message","bLoadAllChannels","bLoad10Channels","channelurl","fetch_url_telkku","fetched","fetch","method","timeout","headers","Accept","mode","signal","abortSignal","then","handleErrors","response","indexOf","getJsonDataFromTelkkuRssXml","catch","TelkkuException","xmlDoc","DOMParser","parseFromString","channeltitle","getElementsByTagName","childNodes","nodeValue","json","xmlitems","querySelectorAll","forEach","item","getChannelProgramFromXml","NaN","item1","childNode1","nodeValue1","jsonitem","getChannelProgramXmlValue","pubdate","ok","status","Error","showChannelsAtSameTime","bCheckShowChannelsAtSameTime","bSearchButtonClicked","const_showChannelsAtSameTime","selectedchannelindex","value","bDisplayAllDescriptions","index","txt","textSearch","trim","first","substring","between","last","newvalue_first","foundedthtml","newvalue_between","newvalue_last","newvalue","ret","searchText","foundedChannels","foundedPrograms","founded","progfounded","uppersearchText","toUpperCase","chcoopy","search_channels","selectedTitle","filteredchannels","filter","s","Array","from","cha","_extends","pr","jsonchannel","bAllChannels","min","Math","floor","currentChannelSetIndex","newChannelSet","validNumber","parseInt","channelSets","calculateMaxChannelSetIndex","bAllChannelsHasLoaded","fetchRssTelkkuPrograms","showAllDescrRef","forceUpdate","aborted","abortController","abort","today","days","getDate","month","getMonth","getFullYear","bShowTableBorder","cols","currentColInd","path","str","search","includes","ind","strNum","ret2","which","altKey","row","tablCntl","rows","cells","currColInd","colIndex","lenCols","currentCol","closest","key","document","activeElement","innerHTML","speakScreenReader","composedPath","divInsideOfCol","getH3OfCurrentColumn","channelText","getCurrentColumnIndex","prevcol","getPrevColumn","nextcol","getNextColumn","getElementById","divh3","nextChannelSetClicked","prevChannelSetClicked","altPlusKeyUp","hideButton","x","display","hideButtonText","store","currentchannel","sectionwidth","screenreaderdiv","sectionStyle","section_width_css","tablesectionStyle","http_curlserver","bind","removelisteners","showOneChannelRef","selectChannelRef","showTableBordersRef","sectionRef","componentWillReceiveProps","nextProps","AbortController","offsetWidth","componentWillUnmount","name","getSectionWidthCss","divDialogStyle","buttoninputw","tableBorderStyle","table_border_color","selectchannels","tabletds","child","selected","tableheaders_and_rows","getTableHeadersAndTableRowsAfterChannels","onKeyUp","altPlusKeyUpProgramHeader","cardHeader","getFetchedDate","cardBody","color","ripple","raised","SwitchCheckbox","showAllDescriptions","showOneChannel","selectedIndex","preselected","outlined","textFieldChannelsAtSameTimeChanged","textFieldSearchChanged","searchTextFromChannelsClicked","loadMoreChannelClicked","loadAllChannelClicked","showTableBorders","abortFetchClicked","buttonHidePressed","default","tabindex","TelkkuRoute","control"],"mappings":"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","file":"9.chunk.cc1b4.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mask\":\"mask__Z7FtU\",\"mydialog\":\"mydialog__SaN+F\",\"o-dialog\":\"o-dialog__fiF7E\",\"odialog\":\"odialog__C8B3T\",\"is-fullscreen\":\"is-fullscreen__PcNIc\",\"o-dialog__wrapper\":\"o-dialog__wrapper__VWE+X\",\"o-dialog__header\":\"o-dialog__header__KXdCq\",\"o-dialog__headerbtn\":\"o-dialog__headerbtn__+9beg\",\"o-dialog__close\":\"o-dialog__close__VdD1T\",\"o-dialog__title\":\"o-dialog__title__B29+7\",\"o-dialog__body\":\"o-dialog__body__doxod\",\"o-dialog__footer\":\"o-dialog__footer__YMo1O\",\"o-dialog--center\":\"o-dialog--center__5BkiG\",\"dialog-zoom-enter-active\":\"dialog-zoom-enter-active__wt5cM\",\"dialog-zoom-in\":\"dialog-zoom-in__OAnXz\",\"dialog-zoom-leave-active\":\"dialog-zoom-leave-active__HjBjW\",\"dialog-zoom-out\":\"dialog-zoom-out__RusTg\",\"mask-enter-active\":\"mask-enter-active__BFcuN\",\"mask-in\":\"mask-in__fUWQb\",\"mask-leave-active\":\"mask-leave-active__+Bk7h\",\"mask-out\":\"mask-out__QcW6a\",\"content\":\"content__c48gI\"};","import { h, Component, Fragment, createRef } from \"preact\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport style from \"./Dialog.css\";\nimport css from \"./Dialog.css\";\nimport Config from \"../../utils/Config\";\n\nimport Dialog from \"preact-material-components/Dialog\";\n//import Button from \"preact-material-components/Button\";\n// import Button from \"../button/Button\";\n// import List from \"preact-material-components/List\";\nimport Card from \"preact-material-components/Card\";\n// import \"preact-material-components/List/style.css\";\n// import \"preact-material-components/Button/style.css\";\nimport \"preact-material-components/Dialog/style.css\";\n\n/**\n * This dialog class combines together preact dialog class with\n * @micro/button class, because preact material button class dies\n * not work with DialogFooter.Button alias preact Button!\n */\nclass PreactDialog extends Component {\n  dialogRef = null;\n  closeButtonRef = null;\n  channelHeader = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogid: _uniqueId(\"dialog-\"),\n    };\n\n    this.closeButtonRef = createRef();\n    this.dialogRef = createRef();\n    //   console.log(\"dialog constructor: dialogid=\" +this.state.dialogid)\n    // this.dialogRef = createRef();\n  }\n\n  componentDidMount() {\n    //TODO:  this.dialogRef = document.getElementById(\"dialog\" + this.state.dialogid);\n    //    this.dialogRef.open();\n  }\n\n  dialogBttnPressed = (event) => {\n    event.preventDefault();\n    //    console.log(\"dialog dialogBttnPressed: dialogRef=\" +this.dialogRef)\n    this.dialogRef.MDComponent.show();\n  };\n\n  open = () => {\n    this.dialogRef.current.MDComponent.show();\n    if (Config.bDebug) console.log(\"before closeButtonRef.current.focus\");\n    this.closeButtonRef.current.focus();\n    // this.dialogRef = document.getElementById(\"mydialog\");\n    if (Config.bDebug)\n      console.log(\"dialog componentDidMount: dialogRef=\" + this.dialogRef);\n  };\n\n  close = () => {\n    this.dialogRef.current.MDComponent.close();\n  };\n\n  cancelBttnPressed = (event) => {\n    event.preventDefault();\n    //   console.log(\"dialog cancelBttnPressed: dialogRef=\" +this.dialogRef)\n    this.dialogRef.current.MDComponent.close();\n    this.props.cancelButtonPressed(event);\n  };\n\n  okBttnPressed = (event) => {\n    event.preventDefault();\n    if (Config.bDebug)\n      console.log(\"dialog okBttnPressed: dialogRef=\" + this.dialogRef);\n    // console.log(\"this.dialogRef=\" +this.dialogRef.visible);\n    // this.dialogRef.visible = true;\n    this.dialogRef.current.MDComponent.close();\n    this.props.okButtonPressed(event);\n    // console.log(\"this.dialogRef=\" +this.dialogRef.visible);\n  };\n\n  changeThemeBttnPressed = (event) => {\n    event.preventDefault();\n    const setTheme = Omiu.setTheme;\n    setTheme(\"primary\", \"green\");\n  };\n\n  enterKeyDown = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which;\n\n    if (Config.bDebug) console.log(\"Dialog pressed\");\n\n    let currentColInd = null;\n\n    // .item(0).innerHTML\n    switch (e.keyCode) {\n      case 13:\n        this.dialogRef.current.MDComponent.close();\n        this.props.okButtonPressed(e);\n        break;\n    }\n  };\n\n  /*\n                   <o-button type=\"primary\" onClick={this.changeThemeBttnPressed} >Kissa2</o-button>\n                    <o-button round type=\"primary\" size=\"mini\"\n                    onClick={this.dialogBttnPressed} >Dialog</o-button>\n            \n\t\t\t\t\tid={\"dialog\"+this.state.dialogid}\n    */\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"->\");\n      console.log(props);\n      console.log(state);\n      console.log(\"<-\");\n    }\n\n    return (\n      <Fragment>\n        <Dialog\n          ref={this.dialogRef}\n          role=\"dialog\"\n          id=\"dialogtheme\"\n          aria-modal=\"true\"\n          style={css.odialog}\n        >\n          <Dialog.Header lang=\"fi\" tabIndex=\"0\">\n            {props.title}\n          </Dialog.Header>\n          <Dialog.Body scrollable={true}>\n            <Card>\n              <div class=\"card-header\">\n                {props.children ? props.children : null}\n              </div>\n              <Card.Media className=\"card-media\" />\n            </Card>\n          </Dialog.Body>\n          <Dialog.Footer>\n            <div onKeyDown={this.enterKeyDown}>\n              <span></span>\n              <span slot=\"footer\" class=\"dialog-footer\">\n                {props.cancelButtonPressed !== undefined ? (\n                  <button\n                    style={\n                      \" margin: 15px;  height: 30px; background: blue; color: white;\"\n                    }\n                    id=\"cancelBtn\"\n                    tabIndex=\"0\"\n                    type=\"primary\"\n                    onClick={this.cancelBttnPressed}\n                  >\n                    {props.cancelText !== undefined\n                      ? props.cancelText\n                      : \"Cancel\"}\n                  </button>\n                ) : null}\n                {props.okButtonPressed !== undefined ? (\n                  <button\n                    id=\"okBtn\"\n                    tabIndex=\"0\"\n                    style={\n                      \" margin: 15px;  height: 30px; background: blue; color: white;\"\n                    }\n                    onClick={this.okBttnPressed}\n                    type=\"primary\"\n                    autofocus={true}\n                    ref={this.closeButtonRef}\n                  >\n                    {props.okText !== undefined ? props.okText : \"Ok\"}\n                  </button>\n                ) : null}\n              </span>\n            </div>\n          </Dialog.Footer>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\n// {props.children ? props.children : null}\n\nexport default PreactDialog;\n","import { h, Component, Fragment } from 'preact';\n//import style from './style.css';\n// import { styled, setup } from \"goober\";\n// import style from './Button.css';\n// import  '@omiu/button';\n// import * as css from './Dialog.css';\n\n/*\nsetup(h);\n\nconst OButton = styled(\"button\")`\nposition: relative;\nbackground: black;\nborder-radius: 10px;\n-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\nbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n-webkit-box-sizing: border-box;\nbox-sizing: border-box;\nwidth: 50%;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n`;\n*/\n\nconst Button = (props) => {\n\n\tconst buttonid = Date.now();\n\n    /*\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t    buttonid:  Date.now()\n\t\t};\n     //   console.log(\"dialog constructor: dialogid=\" +this.state.dialogid)\n\t\t// this.dialogRef = createRef();\t\t\n\t}\n    */\n\n    /*\n\tcomponentDidMount()\n\t{\n\t//\tthis.dialogRef = document.getElementById(\"dialog\"+this.state.dialogid);\n//\tthis.dialogRef = document.getElementById(\"mydialog\");\t\n    //    console.log(\"dialog componentDidMount: dialogRef=\" +this.dialogRef)\n   //    this.dialogRef.open();\n\t}\n    */\n\n    /*\n                   <o-button type=\"primary\" onClick={this.changeThemeBttnPressed} >Kissa2</o-button>\n                    <o-button round type=\"primary\" size=\"mini\"\n                    onClick={this.dialogBttnPressed} >Dialog</o-button>\n            \n\t\t\t\t\tid={\"dialog\"+this.state.dialogid}\n    */\n\n//\trender(props, state) {\n\t\treturn(\t\n            <Fragment>\n                <button type=\"primary\" onClick={props.onClick} tabIndex=\"0\"\n                disabled={props.disabled} id={ props.id ? props.id : buttonid}\n\t\t\t\tstyle={props.style !== undefined ? props.style +\" height: 30px; background: blue; \" : \" height: 30px; background: blue; \"} \n\t\t\t\tclass={props.class !== undefined ? props.class : null} \n\t\t\t\t>{props.text}\n            </button>\t\n            </Fragment>\n\t\t);\n//\t}\n}\n\n/*\n             <o-button type=\"primary\" onClick={props.onClick} tabIndex=\"0\"\n                disabled={props.disabled}\n\t\t\t\tstyle={props.style !== undefined ? props.style : null} \n\t\t\t\tclass={props.class !== undefined ? props.class : null} \n\t\t\t\t>{props.text}\n            </o-button>\t\n   */\nexport default Button;\n","import {h, Fragment, Component, createRef, render } from 'preact';\n// import { useRef } from 'preact/hooks';\n// import { forwardRef } from 'preact/compat';\nimport Config from '../../utils/Config';\nimport './index.css';\n//import Switch from 'preact-material-components/Switch';\n//import 'preact-material-components/Switch/style.css';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nclass SwitchCheckBox extends Component \n// function SwitchCheckBox(props) /* = forwardRef((props, ref) => */\n{\n    constructor(props)\n\t{\n\t\tsuper(props);\n\t\tif(Config.bDebug) \n\t\t{\n\t\t\tconsole.log(\"SwitchCheckBox.js\");\n\t\t\tconsole.log(\"props\");\n\t\t\tconsole.log(props);\n\t\t}\n\n\t\tthis.state = {\n\t\t\terrmsg: null,\n\t\t}\n\t\t\n\t\tthis.chechRef = createRef();\n\t\n\t }\n\n    //const refcomp = useRef(null);\n    /*\n       <Fragment>\n\n        <Switch lang=\"fi\" tabIndex=\"0\" type=\"checkbox\" onChange={props.onChange} .\n                            ref={props.inputref === undefined ? undefined : props.inputref}                     \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked}\n\n                        <input lang=\"fi\" type=\"checkbox\" onChange={props.onChange} \n                            ref={props.inputref === undefined ? undefined : props.inputref}                     \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked} />\n                            <span class=\"checkmark\"></span>\n                            <label lang=\"fi\" class=\"container\" \n                        for={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                        id={props.inputid === undefined ? 'idcheckboxundef-label' : props.inputid+'-label'} >\n                            {props.labeltext}\n                    </label>\n                </Fragment>\n                */\n     render(props, state)\n     {\n        const inputw = \"float: none; display: inline-block; vertical-align: middle; \";\n\n        return (\n                <Fragment>\n                        <input lang=\"fi\" tabIndex=\"0\" type=\"checkbox\" onChange={props.onChange} \n                            className=\"form-check-input filled-in\" \n                            ref={props.propref} style={inputw}                    \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked}\n                             />\n                         \n                            <label lang=\"fi\" style={  'margin-left: 5px;'} class=\"container\" style={inputw} \n                        for={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                        id={props.inputid === undefined ? 'idcheckboxundef-label' : props.inputid+'-label'} >\n                            {props.labeltext}\n                    </label>\n                </Fragment>\n        );\n     }\n}\n\nexport default SwitchCheckBox;","import { h, Fragment, Component, createRef } from \"preact\";\nimport { useState, useRef } from \"preact/hooks\";\n//import Chips from 'preact-material-components/Chips';\n//import 'preact-material-components/Chips/style.css';\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Formfield from 'preact-material-components/FormField';\n//import 'preact-material-components/Checkbox/style.css';\n//import LayoutGrid from 'preact-material-components/LayoutGrid';\n//import 'preact-material-components/LayoutGrid/style.css';\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\nimport Config from \"../../utils/Config\";\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component\nfunction ShowProgram(props) {\n  const [displaydescription, setDisplayDescription] = useState(false);\n  //   const [displayAllDescriptions, setDisplayAllDescriptions] = useState(props.displayAllDescriptions);\n  const scrollingDlgRef = useRef(null);\n\n  let divDialogStyle =\n    props.themevalue !== undefined && props.themevalue !== \"\"\n      ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n      : \"color: #FFF; background-color: black; border-color: #FFF;\";\n  const inputw = \"float: none; display: inline-block; vertical-align: middle; \";\n\n  const onClickDisplay = (event) => {\n    event.preventDefault();\n    //   console.log(\"onClickDisplay\");\n    if (props.displayAllDescriptions) return;\n    if (!displaydescription)\n      //scrollingDlgRef.current.MDComponent.show();\n      scrollingDlgRef.current.open();\n      changeDisplayDescriptionValue();\n  };\n\n  const changeDisplayDescriptionValue = () => changeDisplayDes(!displaydescription);\n\n  const changeDisplayDes = (bValue) => {\n    setDisplayDescription(bValue);\n  }\n\n  const onClickDisplayDialog = (event) => {\n    event.preventDefault();\n    //    console.log(\"onClickDisplayDialog\");\n    // if (displaydescription)\n    //scrollingDlgRef.current.MDComponent.close();\n    scrollingDlgRef.current.close();\n    changeDisplayDescriptionValue();\n  };\n\n  /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.description = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n\n          <Chips.Chip onClick={onClickDisplay} >\n                    <Chips.Text>{data.title}</Chips.Text></Chips.Chip> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip> }\n\n                     {(!displaydescription ? \n                <Button onClick={onClickDisplay} >\n                    {data.title}</Button> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip>) }\n\n                                 <p>Count: {count}</p>\n            <button onClick={increment}>Increment</button>\n            <button onClick={decrement}>Decrement</button>\n\n                <Chips.Text>{props.data.title}</Chips.Text></Chips.Chip> \n        */\n\n  const openHtmlPage = (event) => {\n    console.log(\"openHtmlPage\");\n    event.preventDefault();\n    let blankurl = event.target.href;\n    console.log(\"blankurl\");\n    console.log(blankurl);\n    // window.open(blankurl, '_blank', \"Telkussa\", \"location=no\");\n    window.open(blankurl, \"_blank\", \"Telkussa\");\n    return false;\n  };\n\n  const enterKeyDown = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which;\n    console.log(\"pressed\");\n\n    let currentColInd = null;\n\n    // .item(0).innerHTML\n    switch (e.keyCode) {\n      case 13:\n        onClickDisplay(e);\n        break;\n    }\n  };\n\n  const onEnterDisplayDialog = (e) => {\n    if (e.keyCode === 13) onClickDisplayDialog(e);\n  };\n\n  return (\n    <div>\n      <div>\n        <div onClick={onClickDisplay} onKeyDown={enterKeyDown}>\n          <p lang=\"fi\" tabIndex=\"0\">\n            <b>\n              {props.showSearch && props.data.titleindex != undefined\n                ? props.getPOfIndex(props.data.titleindex, props.data.title)\n                : props.data.title}\n            </b>\n          </p>\n          {props.displayAllDescriptions ? (\n            <Fragment>\n              <p lang=\"fi\" tabIndex=\"0\">\n                {props.showSearch && props.data.descriptionindex != undefined\n                  ? props.getPOfIndex(\n                      props.data.descriptionindex,\n                      props.data.description,\n                      props.themevalue\n                    )\n                  : props.data.description}\n              </p>\n              {props.data.link != undefined || props.data.link != null ? (\n                <p>\n                  <a lang=\"fi\" href={props.data.link} onClick={openHtmlPage}>\n                    ohjelmalinkki\n                  </a>\n                </p>\n              ) : null}\n            </Fragment>\n          ) : null}\n        </div>\n        <Dialog\n          role=\"dialog\"\n          id=\"telkkudialogshowporg\"\n          aria-labelledby=\"h1loading\"\n          aria-modal=\"false\"\n          lang=\"fi\"\n          ref={scrollingDlgRef}\n          title={props.channel ? props.channel.replace(\"Telkussa: \", \"\") : \"\"}\n          okButtonPressed={onClickDisplayDialog}\n          okText=\"Sulje\"\n          scrollable={true}\n          themevalue={props.themevalue}\n        >\n          <div class=\"card-header\" style={divDialogStyle}>\n            <h3\n              lang=\"fi\"\n              id=\"h3program\"\n              tabIndex=\"0\"\n              class=\" mdc-typography--title\"\n            >\n              {props.data.title}\n            </h3>\n            <h3 lang=\"fi\" tabIndex=\"0\" class=\" mdc-typography--title\">\n              {props.data.description}\n            </h3>\n            <br />\n          </div>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\n/*\n                    <Dialog role=\"dialog\" id=\"dialogtheme\" aria-modal=\"true\"\n                               ref={scrollingDlgRef}>\n                                <Dialog.Header lang=\"fi\" tabIndex=\"0\">{props.channel ? \n                                props.channel.replace(\"Telkussa: \", \"\") : ''}</Dialog.Header>\n                                <Dialog.Body scrollable={true}>\n                                  <Card><div class=\"card-header\">\n                                     <h3 lang=\"fi\" id=\"h3program\" tabIndex=\"0\" class=\" mdc-typography--title\">\n                                         {props.data.title}</h3>\n                                     <h3 lang=\"fi\" tabIndex=\"0\" class=\" mdc-typography--title\">\n                                         {props.data.description}</h3><br/>\n                                     </div>\n                                     <Card.Media className=\"card-media\" />\n                                  </Card>\n                                </Dialog.Body>\n                                <Dialog.Footer>\n                                    <Dialog.FooterButton tabIndex=\"0\" \n                                    onKeyDown={onEnterDisplayDialog} \n                                    onCancel={onClickDisplayDialog} onAccept={onClickDisplayDialog}\n                                    cancel={true} >Sulje</Dialog.FooterButton>\n                                </Dialog.Footer>\n                    </Dialog> \n*/\n\nexport default ShowProgram;\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__wog+i\",\"cardHeader\":\"cardHeader__dyMRZ\",\"cardBody\":\"cardBody__M1xly\"};","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__PEN99\",\"cardHeader\":\"cardHeader__mqzim\",\"cardBody\":\"cardBody__Yn9DS\"};","    \nimport {h } from 'preact';\nimport Config from '../../utils/Config';\nimport ShowProgram from './ShowProgram';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nfunction RssTelkkuChannel(props)\n{\n       // const cssDark = useContext(CssDark);\n        let displayitems = null;\n        /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.descripprogs && tion = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n        */\n        if (props.data.channelprograms !== null)\n            displayitems = props.data.channelprograms.map((program, i) => {\n\t\t\t\treturn <ShowProgram id={'telkkuchannel' +i} data={program}\n                    displayAllDescriptions={props.displayAllDescriptions}\n                    getPOfIndex={props.getPOfIndex}\n                    themevalue={props.themevalue}\n                    showSearch={props.showSearch == undefined ? false : props.showSearch}\n                    channel={props.data.title} />;\n\t\t\t});\n\n        return (\n            <div>\n            <h3 tabIndex=\"0\" lang=\"fi\" aria-label={props.data.title}>\n                {props.showSearch && props.data.titleindex != undefined\n                        ? props.getPOfIndex(props.data.titleindex, props.data.title,\n                            this.props.themevalue) : props.data.title.toString().replace(\"Telkussa: \", \"\")}</h3>\n            <div>{displayitems}</div>\n            </div>\n          );\n}\n\nexport default RssTelkkuChannel;","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import LayoutGrid from 'preact-material-components/LayoutGrid';\n//import 'preact-material-components/LayoutGrid/style.css';\n//import 'preact-material-components/Button/style.css';\n//import Checkbox from 'preact-material-components/Checkbox';\n// import Formfield from 'preact-material-components/FormField';\n// import 'preact-material-components/Checkbox/style.css';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Select/style.css';\n//import TextField from 'preact-material-components/TextField';\n//import 'preact-material-components/TextField/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\nimport Button from \"../button/Button\";\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n\n// import HTMLComment from \"react-html-comment\";\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\nimport SwitchCheckbox from \"../checkbox/CheckBox\";\n\nimport AbortController from \"abort-controller\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// imporpotcat fetchJsonp from 'fetch-jsonp';\nimport RssTelkkuChannel from \"./RssTelkkuChannel\";\n\nexport default class Telkku extends Component {\n  store = null;\n  fetch_url_telkku = null;\n  showAllDescrRef = null;\n  showOneChannelRef = null;\n  selectChannelRef = null;\n  const_showChannelsAtSameTime = 10;\n  _mounted = false;\n  scrollingDlgRef = null;\n  tablCntl = null;\n  showTableBordersRef = null;\n  sectionStyle = null;\n  tablesectionStyle = null;\n  sectionRef = null;\n  section_width = null;\n  section_width_css = undefined;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"Telkku.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let now = Date.now();\n    this.state = {\n      errmsg: null,\n      channels: null,\n      currentchannel: null,\n      bUnderFetch: false,\n      today: new Date(now),\n      bDisplayAllDescriptions: false,\n      showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n      selectedchannelindex: -1,\n      bCheckShowChannelsAtSameTime: false,\n      currentChannelSetIndex: 0,\n      bUnderFetch: false,\n      bAllChannelsLoaded: false,\n      textSearch: null,\n      bSearchButtonClicked: false,\n      bShowTableBorder: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n      fetcheddata: null,\n      fetcheditems: [],\n      sectionwidth: 0,\n      screenreaderdiv: \"\",\n      hideButton: false,\n      hideButtonText: 'Piilota ohje',\n    };\n\n    let themevalue = props.themevalue;\n    this.sectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n          (this.section_width_css == undefined\n            ? \"\"\n            : this.section_width_css)\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n          (this.section_width_css == undefined ? \"\" : this.section_width_css);\n\n    this.tablesectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \"\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\";\n\n    // this.fetch_url_telkku = 'https://telkussa.fi/RSS/Channel/';\n    this.fetch_url_telkku = Config.http_curlserver + \"/telkku/\";\n    this.TelkkuException = this.TelkkuException.bind(this);\n    this.removelisteners = this.removelisteners.bind(this);\n    this.showAllDescrRef = createRef();\n    this.showOneChannelRef = createRef();\n    this.selectChannelRef = createRef();\n    this.scrollingDlgRef = createRef();\n    this.tablCntl = createRef();\n    this.showTableBordersRef = createRef();\n    this.sectionRef = createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"Telkku componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n\n    if (nextProps !== null && nextProps.themevalue != this.props.themevalue) {\n      this.setState({ themevalue: nextProps.themevalue });\n      this.sectionStyle =\n        nextProps.themevalue !== undefined && nextProps.themevalue !== \"\"\n          ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth)\n          : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth);\n    }\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    this.abortController = new AbortController(); // 1\n    this.abortSignal = this.abortController.signal; // 2\n    this._mounted = true;\n //   if (document.getElementById(\"programtable\"))\n   //   document.getElementById(\"programtable\").onkeydown = this.altPlusKeyUp;\n    this.section_width = this.sectionRef.current.offsetWidth;\n    //\tthis.fetchRssTelkkuPrograms();\n    if (Config.bDebug) console.log(\"kissa\");\n    /*\n    let aField = document.getElementById('focus_1_element'); \n    if (aField) aField.focus(); \n    */\n  }\n\n  getSectionWidthCss = () => {\n    return \"width: \" + this.section_width + \"px;\";\n  };\n\n  removelisteners() {\n    if (this.abortSignal && !this.abortSignal.aborted)\n      this.abortController.abort();\n  }\n\n  componentWillUnmount() {\n    this.removelisteners();\n    //\tthis.setState({});\n    // this.store.setStateNoneCallListeners({fetchitems: [], channeltypeitems: [],\n    //programtypeitems: [], categories: [], schedules: [],\n    //  });\n    this._mounted = false;\n  }\n\n  fetchRssTelkkuPrograms = async (init_pagenumber, init_max) => {\n    if (!this._mounted) return;\n\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuPrograms\");\n    }\n    if (this.state.bAllChannelsLoaded) return;\n    if (this.state.bUnderFetch) return;\n\n    this.setState({ bUnderFetch: true });\n\n    let channelnumber = 1;\n    let max = 10;\n    if (init_pagenumber !== undefined) channelnumber = init_pagenumber;\n    if (init_max !== undefined) max = init_max;\n\n    this.state.fetcheddata = null;\n    this.state.fetcheditems = [];\n    if (this.state.channels != null && this.state.channels.length > 0)\n      this.state.fetcheditems = this.state.channels;\n\n    //this.scrollingDlgRef.current.MDComponent.show();\n    this.scrollingDlgRef.current.open();\n\n    try {\n      while (1) {\n        this.fetcheddata = await this.fetchRssTelkkuChannel(channelnumber);\n        if (this.fetcheddata !== null) {\n          // Array.prototype.push.apply(fetcheditems, fetcheddata);\n          this.state.fetcheditems.push(this.fetcheddata);\n          if (channelnumber === max && max !== -1) break;\n          channelnumber = channelnumber + 1;\n          if (this.state.bAllChannelsLoaded) break;\n        } else break;\n      }\n    } catch (error) {\n      if (error.message !== \"Error: 500\") {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.message, bUnderFetch: false });\n        //this.scrollingDlgRef.current.MDComponent.close();\n        this.scrollingDlgRef.current.close();\n        return;\n      } else this.setState({ bAllChannelsLoaded: true });\n    }\n    if (Config.bDebug) {\n      console.log(\"fetcheditems\");\n      console.log(this.state.fetcheditems);\n    }\n\n    //this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n    this.setState({\n      channels: this.state.fetcheditems,\n      errmsg: null,\n      bUnderFetch: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n    });\n  };\n\n  TelkkuException(message) {\n    this.message = message;\n    this.name = \"TelkkuException\";\n  }\n\n  fetchRssTelkkuChannel = async (channelnumber) => {\n    let channelurl = this.fetch_url_telkku + channelnumber;\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuChannel 1\");\n      console.log(channelurl);\n    }\n\n    this.setState({ channels: null, errmsg: null });\n\n    let fetched = null;\n    // \tcrossDomain:true,\n    await fetch(channelurl, {\n      method: \"GET\",\n      timeout: 6000,\n      headers: {\n        \"Content-Type\": \"application/rss+xml; charset=UTF-8\",\n        Accept: \"*/*\", // application/rss+xml\n      },\n      mode: \"cors\",\n      signal: this.abortSignal,\n    })\n      .then(this.handleErrors)\n      .then((response) => {\n        return response.text();\n      })\n      //\t\t.then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        /*\n\t\t\t\t\t\tmode: 'same-origin',\n\n\t\t\tif(Config.bDebug) \n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"fetchRssTelkkuChannel 1.5\"); \n\t\t\t\t\tconsole.log(data); \n\t\t\t\t}\n\t\t\t\t*/\n        let indCheck = data.indexOf(\"<rss version=\");\n        if (indCheck == -1) {\n          fetched = null;\n          this.setState({ bAllChannelsLoaded: true });\n        } else fetched = this.getJsonDataFromTelkkuRssXml(data);\n      })\n      .catch((error) => {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.toString() });\n        throw new this.TelkkuException(error.toString());\n      });\n    return fetched;\n  };\n\n  getJsonDataFromTelkkuRssXml = (data) => {\n    let xmlDoc = new window.DOMParser().parseFromString(data, \"text/xml\");\n    let channeltitle =\n      xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n    if (Config.bDebug) {\n      console.log(\"channeltitle\");\n      console.log(channeltitle);\n    }\n    let json = {};\n    json.title = channeltitle;\n    const xmlitems = xmlDoc.querySelectorAll(\"item\");\n    if (Config.bDebug) {\n      console.log(\"xmlitems\");\n      console.log(xmlitems);\n    }\n    if (xmlitems == null || xmlitems == undefined) return null;\n    json.channelprograms = [];\n    xmlitems.forEach((item) => {\n      if (item === undefined) return;\n      json.channelprograms.push(this.getChannelProgramFromXml(item));\n    });\n\n    if (Config.bDebug) {\n      console.log(\"json\");\n      console.log(json);\n    }\n\n    return json;\n  };\n\n  getChannelProgramXmlValue = (item) => {\n    if (item === null || item === undefined || item === NaN) {\n      console.log(\"json\");\n      console.log(json);\n      return null;\n    }\n    let item1 = item[0];\n    if (item1 === null || item1 === undefined || item1 === NaN) {\n      console.log(\"item1\");\n      console.log(item1);\n      return null;\n    }\n    let childNode1 = item1.childNodes[0];\n    if (childNode1 === null || childNode1 === undefined || childNode1 === NaN) {\n      if (Config.bDebug) {\n        console.log(\"childNode1\");\n        console.log(childNode1);\n      }\n      return null;\n    }\n    let nodeValue1 = childNode1.nodeValue;\n    if (nodeValue1 === null || nodeValue1 === undefined || nodeValue1 === NaN) {\n      console.log(\"nodeValue1\");\n      console.log(nodeValue1);\n      return null;\n    }\n    return nodeValue1;\n  };\n\n  getChannelProgramFromXml = (item) => {\n    if (Config.bDebug) {\n      console.log(\"item\");\n      console.log(item);\n    }\n    let jsonitem = {};\n    jsonitem.title = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"title\")\n    );\n    jsonitem.description = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"description\")\n    );\n    jsonitem.pubdate = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"pubDate\")\n    );\n    jsonitem.link = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"link\")\n    );\n    // [0].childNodes[0].nodeValue;\n    return jsonitem;\n  };\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      // throw Error(response.statusText);\n      console.log(\"response\");\n      console.log(response);\n      console.log(response.status);\n      throw Error(response.status);\n    }\n    return response;\n  };\n\n  showOneChannel = (event) => {\n    event.preventDefault();\n    //\tconsole.log(\"showOneChannel\");\n    let value = event.target.checked;\n    let bValue = value; // this.showOneChannelRef.current.;\n\n    if (bValue)\n      this.setState({\n        showChannelsAtSameTime: 1,\n        bCheckShowChannelsAtSameTime: true,\n        bSearchButtonClicked: false,\n      });\n    else\n      this.setState({\n        showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n        selectedchannelindex: -1,\n        bCheckShowChannelsAtSameTime: false,\n        /* bSearchButtonClicked: false */\n      });\n  };\n\n  showAllDescriptions = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showAllDescriptions\");\n    let bValue = value; // this.state.bDisplayAllDescriptions;\n    if (Config.bDebug) console.log(\"bValue\");\n    if (Config.bDebug) console.log(bValue);\n    /*\n\t\tif (value === 'on')\n\t\t\tbValue = true;\n\t\tconsole.log(value);\n\t\t*/\n    this.setState({\n      bDisplayAllDescriptions: bValue,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  getPOfIndex = (index, txt, themevalue) => {\n    if (Config.bDebug) {\n      console.log(\"getPOfIndex\");\n    }\n    let textSearch = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"textSearch\");\n      console.log(textSearch);\n    }\n    if (txt == undefined || txt == null) return \"\";\n    if (Config.bDebug) {\n      console.log(\"txt\");\n      console.log(txt);\n      console.log(\"index\");\n      console.log(index);\n    }\n    let txtlen = txt.length;\n    if (index == undefined || index == null || index < 0 || txtlen <= index)\n      return txt;\n    if (\n      textSearch == undefined ||\n      textSearch == null ||\n      textSearch.toString().trim().length == 0\n    )\n      return txt;\n\n    let first = txt.substring(0, index);\n    let between = txt.substring(index, index + textSearch.length);\n    let last = txt.substring(index + textSearch.length);\n\n    if (Config.bDebug) {\n      console.log(\"first\");\n      console.log(first);\n      console.log(\"between\");\n      console.log(between);\n      console.log(\"last\");\n      console.log(last);\n    }\n\n    let newvalue_first =\n      first != undefined && first != null && first.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {first}\n        </span>\n      ) : (\n        \"\"\n      );\n    let foundedthtml =\n      \"background-color: green; color: white; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    if (themevalue === \"--dark\")\n      foundedthtml =\n        \"background-color: yellow; color: black; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    let newvalue_between = <span style={foundedthtml}>{between}</span>;\n    let newvalue_last =\n      last != undefined && last != null && last.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {last}\n        </span>\n      ) : (\n        \"\"\n      );\n    let newvalue = (\n      <div>\n        {newvalue_first}\n        {newvalue_between}\n        {newvalue_last}\n      </div>\n    );\n    if (Config.bDebug) {\n      console.log(\"newvalue_first\");\n      console.log(newvalue_first);\n      console.log(\"newvalue_between\");\n      console.log(newvalue_between);\n      console.log(\"newvalue_last\");\n      console.log(newvalue_last);\n    }\n    if (Config.bDebug) {\n      console.log(\"newvalue\");\n      console.log(newvalue);\n    }\n    return newvalue;\n  };\n\n  getTableHeadersAndTableRowsAfterChannels = () => {\n    let headers = null;\n    let channels = null;\n    if (Config.bDebug) {\n      console.log(\"getTableHeadersAndTableRowsAfterChannels\");\n      console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n      console.log(this.state.bCheckShowChannelsAtSameTime);\n      console.log(\"this.state.selectedchannelindex\");\n      console.log(this.state.selectedchannelindex);\n      console.log(this.state);\n    }\n\n    let bAllChannels = false;\n    if (this.state.bSearchButtonClicked) {\n      if (this.state.channels == null) {\n        headers = [];\n        channels = [];\n        let ret = {};\n        ret.headers = headers;\n        ret.channels = channels;\n        return ret;\n      }\n      const searchText = this.state.textSearch;\n      if (searchText != null && searchText.toString().trim().length > 0) {\n        let foundedChannelsTitle = null;\n        let index = -1;\n        let foundedChannels = [];\n        let foundedPrograms = [];\n        let founded = false;\n        let progfounded = false;\n        let uppersearchText = searchText.toUpperCase();\n        let chcoopy = {};\n\n        let search_channels = this.state.channels;\n        console.log(\"before filter search\");\n        console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n        console.log(this.state.bCheckShowChannelsAtSameTime);\n        console.log(\"this.state.selectedchannelindex\");\n        console.log(this.state.selectedchannelindex);\n\n        if (\n          this.state.bCheckShowChannelsAtSameTime &&\n          this.state.selectedchannelindex != -1\n        ) {\n          console.log(\"filter search bCheckShowChannelsAtSameTime\");\n          let selectedTitle =\n            search_channels[this.state.selectedchannelindex].title;\n          let filteredchannels = search_channels.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.title === selectedTitle;\n          });\n          search_channels = filteredchannels;\n        }\n\n        Array.from(search_channels).forEach((cha) => {\n          chcoopy = {};\n          index = -1;\n          founded = false;\n          if (cha === undefined) return;\n          // this.state.channels.forEach(cha, i => {\n          Object.assign(chcoopy, cha);\n          if (Config.bDebug) {\n            console.log(\"chcoopy\");\n            console.log(chcoopy);\n            console.log(\"chcoopy.channelprograms\");\n            console.log(chcoopy.channelprograms);\n          }\n\n          if (chcoopy.title)\n            chcoopy.title = chcoopy.title.toString().replace(\"Telkussa: \", \"\");\n          index = chcoopy.title\n            ? chcoopy.title.toUpperCase().indexOf(uppersearchText)\n            : -1;\n          if (index != -1) {\n            chcoopy.titleindex = index;\n            founded = true;\n          }\n          foundedPrograms = [];\n\n          Array.from(chcoopy.channelprograms).forEach((pr) => {\n            // cha.channelprograms.forEach(pr, i => {\n            progfounded = false;\n            if (pr === undefined) return;\n            index = pr.title\n              ? pr.title.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.titleindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            index = pr.description\n              ? pr.description.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.descriptionindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            if (progfounded) foundedPrograms.push(pr);\n          });\n\n          if (founded) {\n            if (foundedPrograms != null && foundedPrograms.length != 0)\n              chcoopy.channelprograms = foundedPrograms;\n            else chcoopy.channelprograms = cha.channelprograms;\n            foundedChannels.push(chcoopy);\n          }\n        });\n\n        if (foundedChannels == null && foundedChannels.length == 0) {\n          headers = [];\n          channels = [];\n        } else {\n          headers = foundedChannels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = foundedChannels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={\"telkkuchannel\" + i}\n                data={jsonchannel}\n                showSearch={true}\n                getPOfIndex={this.getPOfIndex}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      } else {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      }\n    } else if (\n      this.state.bCheckShowChannelsAtSameTime &&\n      this.state.selectedchannelindex != -1\n    ) {\n      console.log(\"filter\");\n      let selectedTitle =\n        this.state.channels[this.state.selectedchannelindex].title;\n      let filteredchannels = this.state.channels.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.title === selectedTitle;\n      });\n      //\t\t\t\tconsole.log(\"filteredchannels\");\n      //\t\t\t\tconsole.log(filteredchannels);\n      headers = filteredchannels.map((jsonchannel, i) => {\n        return jsonchannel.title.replace(\"Telkussa: \", \"\");\n      });\n      channels = filteredchannels.map((jsonchannel, i) => {\n        return (\n          <RssTelkkuChannel\n            id={i}\n            data={jsonchannel}\n            themevalue={this.props.themevalue}\n            displayAllDescriptions={this.state.bDisplayAllDescriptions}\n          />\n        );\n      });\n    } else {\n      if (\n        this.state.showChannelsAtSameTime == this.state.channels.length ||\n        this.state.showChannelsAtSameTime > this.state.channels.length\n      ) {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      } else {\n        let bAllChannels = false;\n        if (this.state.showChannelsAtSameTime < this.state.channels.length) {\n          let min = Math.floor(\n            this.state.currentChannelSetIndex *\n              this.state.showChannelsAtSameTime\n          );\n          let max =\n            this.state.currentChannelSetIndex == 0\n              ? this.state.showChannelsAtSameTime\n              : Math.floor(\n                  this.state.currentChannelSetIndex *\n                    this.state.showChannelsAtSameTime +\n                    this.state.showChannelsAtSameTime\n                );\n          if (Config.bDebug) {\n            console.log(\"min\");\n            console.log(min);\n            console.log(\"max\");\n            console.log(max);\n          }\n          if (min < 0) min = 0;\n          else if (min > this.state.channels.length) {\n            min = this.state.channels.length;\n            bAllChannels = true;\n          }\n\n          if (max > this.state.channels.length)\n            max = this.state.channels.length;\n\n          if (!bAllChannels) {\n            let i;\n            let newChannelSet = [];\n            for (i = min; i < max; i++) {\n              newChannelSet.push(this.state.channels[i]);\n            }\n\n            headers = newChannelSet.map((jsonchannel, i) => {\n              return jsonchannel.title.replace(\"Telkussa: \", \"\");\n            });\n            channels = newChannelSet.map((jsonchannel, i) => {\n              return (\n                <RssTelkkuChannel\n                  id={i}\n                  data={jsonchannel}\n                  themevalue={this.props.themevalue}\n                  displayAllDescriptions={this.state.bDisplayAllDescriptions}\n                />\n              );\n            });\n          }\n        } else {\n          bAllChannels = true;\n        }\n\n        /*\n\t\t\t\tlet divided = this.state.channels.size() % this.state.showChannelsAtSameTime:\t\t\t\t\t\t\n\t\t\t\tif (Config.bDebug)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"divided\");\n\t\t\t\t\tconsole.log(divided);\n\t\t\t\t}\n\t\t\t\t*/\n        if (bAllChannels) {\n          headers = this.state.channels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = this.state.channels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={i}\n                data={jsonchannel}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      }\n    }\n\n    let ret = {};\n    ret.headers = headers;\n    ret.channels = channels;\n    return ret;\n  };\n\n  textFieldChannelsAtSameTimeChanged = (event) => {\n    event.preventDefault();\n    let value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldChannelsAtSameTimeChanged\");\n      console.log(value);\n    }\n    let validNumber = parseInt(value);\n    if (Config.bDebug) {\n      console.log(\"validNumber\");\n      console.log(validNumber);\n    }\n    if (validNumber == NaN || validNumber == undefined) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    } else if (parseInt(validNumber) < 1) {\n      event.target.value = 1;\n      return;\n    } else if (parseInt(validNumber) > this.const_showChannelsAtSameTime) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    }\n    this.setState({\n      showChannelsAtSameTime: validNumber,\n      currentChannelSetIndex: 0,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  calculateMaxChannelSetIndex = () => {\n    if (Config.bDebug) {\n      console.log(\"calculateMaxChannelSetIndex\");\n      /*\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\t*/\n    }\n    if (this.state.channels == null) return 0;\n    const channelssize = this.state.channels.length;\n    if (channelssize === 0) return 0;\n    if (this.state.bCheckShowChannelsAtSameTime) return 0;\n    if (this.state.showChannelsAtSameTime >= this.state.channels.length)\n      return 0;\n    const channelSets =\n      this.state.channels.length / this.state.showChannelsAtSameTime;\n    if (Config.bDebug) {\n      console.log(\"channelSets\");\n      console.log(channelSets);\n    }\n    if (channelSets == 0) return 0;\n    return channelSets - 1;\n  };\n\n  nextChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (\n      this.state.currentChannelSetIndex > this.calculateMaxChannelSetIndex()\n    ) {\n      this.setState({\n        currentChannelSetIndex: this.calculateMaxChannelSetIndex(),\n        bSearchButtonClicked: false,\n      });\n      return;\n    } else if (\n      this.state.currentChannelSetIndex === this.calculateMaxChannelSetIndex()\n    ) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex + 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  prevChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (this.state.currentChannelSetIndex < 0) {\n      this.setState({\n        currentChannelSetIndex: 0,\n        /* bSearchButtonClicked: false */\n      });\n      return;\n    }\n    if (this.state.currentChannelSetIndex === 0) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex - 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  loadMoreChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null || this.state.channels.length == 0\n        ? 1\n        : this.state.channels.length + 1,\n      this.state.channels == null || this.state.channels.length == 0\n        ? 10\n        : this.state.channels.length + 10\n    );\n  };\n\n  loadAllChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null ? 1 : this.state.channels.length + 1,\n      -1\n    );\n  };\n\n  searchTextFromChannelsClicked = () => {\n    event.preventDefault();\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked\");\n    }\n    const searchText = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"searchText 2 \");\n      console.log(searchText);\n    }\n    if (\n      searchText == undefined ||\n      searchText == null ||\n      searchText.trim().length == 0\n    )\n      return;\n    // to start make indirect the search:\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked 2 \");\n    }\n    let value = this.showAllDescrRef.current.checked;\n    if (!value) this.showAllDescrRef.current.checked = true;\n    this.setState({\n      bSearchButtonClicked: true,\n      bDisplayAllDescriptions: true,\n    });\n    this.forceUpdate();\n  };\n\n  textFieldSearchChanged = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldSearchChanged\");\n      console.log(value);\n    }\n    this.setState({ textSearch: value, bSearchButtonClicked: false });\n  };\n\n  abortFetchClicked = (event) => {\n    event.preventDefault();\n    if (!this.state.bUnderFetch) return;\n    if (Config.bDebug) console.log(\"abortFetchClicked.abort()\");\n    if (!this.abortSignal.aborted) {\n      this.abortController.abort();\n      this.setState({ bUnderFetch: false });\n    }\n  };\n\n  getFetchedDate = () => {\n    const today = this.state.today;\n    if (today == null || today == undefined) return \"\";\n\n    let days = today.getDate();\n    let month = today.getMonth() + 1;\n    let year = today.getFullYear();\n    if (days < 10) days = \"0\" + days;\n    if (month < 10) month = \"0\" + month;\n    const ret = \"\" + days + \".\" + month + \".\" + year;\n    return ret;\n  };\n\n  showTableBorders = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showTableBorders\");\n    let bValue = value;\n    if (Config.bDebug) {\n      console.log(\"bValue\");\n      console.log(bValue);\n    }\n    this.setState({ bShowTableBorder: bValue });\n  };\n\n  onClickDisplayDialog = (event) => {\n    // this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n  };\n\n  getNextColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd !== undefined && currentColInd !== null) {\n      if (cols[currentColInd + 1]) ret = cols[currentColInd + 1];\n    }\n    return ret;\n  };\n\n  getPrevColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd) {\n      if (cols[currentColInd - 1]) ret = cols[currentColInd - 1];\n    }\n    return ret;\n  };\n\n  getCurrentColumnIndex = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        ret = parseInt(strNum);\n        break;\n      }\n    }\n    return ret;\n  };\n\n  getH3OfCurrentColumn = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        let ind2 = parseInt(strNum);\n        ret = value.childNodes[0];\n        if (ret) {\n          let ret2 = ret.childNodes[0];\n          if (ret2) ret = ret2;\n        }\n        break;\n      }\n    }\n    return ret;\n  };\n\n  speakScreenReader(text)\n  {\n    document.getElementById(\"screenreaderdiv\").innerHTML = text;\n    this.setState({screenreaderdiv: text })\n  }\n\n  altPlusKeyUp = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n    if (Config.bDebug) console.log(\"pressed\");\n    if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      let row = this.tablCntl.current.rows[1];\n      const cols = row.cells;\n      const currColInd = row.colIndex;\n      const lenCols = cols.length;\n      const currentCol = row.closest(\"td\");\n\n      if (Config.bDebug) {\n        console.log(\"--- row\");\n        console.log(row);\n        console.log(\"--- cols\");\n        console.log(cols);\n        console.log(\"--- lenCols\");\n        console.log(lenCols);\n        console.log(\"--- currColInd\");\n        console.log(currColInd);\n        console.log(\"--- currentCol\");\n        console.log(currentCol);\n\n        console.log(\"--- this.tablCntl.current\");\n        console.log(this.tablCntl.current);\n      }\n      let currentColInd = null;\n      let path = null;\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"r\":\n          case \"R\":\n            e.preventDefault();\n            path = document.activeElement;\n            if (path && path.innerHTML) {\n              this.speakScreenReader(path.innerHTML.toString());\n            }\n            break;\n\n        case \"c\":\n        case \"C\":\n          e.preventDefault();\n            path = e.composedPath();\n          //... handle alt+o\n          divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            const channelTextHtml = divInsideOfCol.innerHTML;\n            const channelText = channelTextHtml.toString();\n            if (channelText)\n              this.speakScreenReader(channelText);\n          }\n          break;\n        \n        case \"o\":\n        case \"O\":\n          e.preventDefault();\n          //... handle alt+o\n          path = e.composedPath();\n          let divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            divInsideOfCol.focus();\n          }\n          break;\n\n        case \"k\":\n        case \"K\":\n          e.preventDefault();\n          //... handle alt+k\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd > 0) {\n            const prevcol = this.getPrevColumn(cols, currentColInd);\n            if (prevcol) {\n              prevcol.focus();\n            }\n          }\n          break;\n\n        case \"a\":\n        case \"A\":\n          //... handle alt+s\n          e.preventDefault();\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd < lenCols - 1) {\n            const nextcol = this.getNextColumn(cols, currentColInd);\n            // document.getElementById(\"tablecol\" +(currentColInd+1)).focus();\n            if (nextcol) {\n              if (Config.bDebug) {\n                console.log(\"nextcol\");\n                console.log(nextcol);\n              }\n              nextcol.focus();\n              // document.getElementById(\"tablecol\" +currentColInd).focus();\n            }\n          }\n          break;\n      }\n    }\n  };\n\n  altPlusKeyUpProgramHeader = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n\n    console.log(\"pressed\");\n  if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"m\":\n        case \"M\":\n            //... handle alt+t\n          if (document.getElementById(\"idprogramtableh3\")) {\n            let divh3 = document.getElementById(\"idprogramtableh3\");\n            if (divh3) divh3.focus();\n          }\n          break;\n          case \"n\":\n            case \"N\":  \n                //... handle alt+t\n                if (document.getElementById(\"divControl\")) {\n                  let divh3 = document.getElementById(\"divControl\");\n                  if (divh3) divh3.focus();\n                }\n                break;\n          case \"j\":\n            case \"J\":\n                 this.nextChannelSetClicked(e);            \n         //         if (document.getElementById(\"button_next_channel_page\")) {\n    //              let buttonNext = document.getElementById(\"button_next_channel_page\");\n    //              if (buttonNext) buttonNext.click();\n        //        }\n              break;\n            case \"g\":\n            case \"G\":\n                  this.prevChannelSetClicked(e);\n             //  if (document.getElementById(\"button_prev_channel_page\")) {\n    //              let buttonPrev = document.getElementById(\"button_prev_channel_page\");\n    //              if (buttonPrev) buttonPrev.click();\n           //    }\n               break;\n          default:\n            return this.altPlusKeyUp(e); \n            break;  \n      }\n    }\n  };\n\n  buttonHidePressed = (e) => {\n    let bValue = !this.state.hideButton;\n    var x = document.getElementById(\"hideDiv\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n    this.setState({ hideButton: bValue, hideButtonText: bValue ? \"Näytä ohje\" : \"Piilota ohje\" });\n  }\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    let sectionwidth = \"\";\n    if (state.fetcheditems != null && state.fetcheditems.length > 0) {\n      sectionwidth = this.getSectionWidthCss();\n      this.section_width_css = sectionwidth;\n    }\n\n    let divDialogStyle =\n      props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n        : \"\";\n    const inputw =\n      \"float: none; display: inline-block; vertical-align: middle; \";\n    const buttoninputw =\n      \"float: none; display: inline-block; vertical-align: middle; \" +\n      (props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"\"\n        : \" color: white; \");\n\n    if (Config.bDebug) {\n      console.log(\"divDialogStyle\");\n      console.log(divDialogStyle);\n    }\n\n    let tableBorderStyle = \"\";\n    let table_border_color = \"black\";\n    if (state.bShowTableBorder) {\n      if (props.themevalue === \"--dark\") table_border_color = \"white\";\n      tableBorderStyle = \" border: 1px solid \" + table_border_color + \";\";\n    }\n\n    let channels = null;\n    let tableheaders = null;\n    let selectchannels = null;\n    let tabletds = null;\n    let headers = null;\n    if (state.channels !== null) {\n      // selected={child.title.fi===state.selectedcategory.title.fi}\n      /*\n\t\t\t\t\t\t\treturn <Select.Item id={i} \t\t\t\t\n\t\t\t\t>{child.title}</Select.Item>\n\t\t\t\t});\n\t\t\t\t*/\n      selectchannels = state.channels.map((child, i) => {\n        return (\n          <option\n            value={child.title}\n            id={i}\n            selected={i === this.state.selectedchannelindex}\n          >\n            {child.title}\n          </option>\n        );\n      });\n      let tableheaders_and_rows =\n        this.getTableHeadersAndTableRowsAfterChannels();\n      headers = tableheaders_and_rows.headers;\n      /*\n\t\t\tif (headers != null)\n\t\t\t\ttableheaders = headers.map((child, i) => {\n\t\t\t\t\treturn <th lang=\"fi\" tabIndex=\"0\" style={'vertical-align: top; padding-left: 5px; padding-right: 5px;' +tableBorderStyle}>{child}</th> \t\t\t\t\n\t\t\t\t});\n\t\t\t\t*/\n      channels = tableheaders_and_rows.channels;\n      tabletds = channels;\n      if (channels != null)\n        tabletds = channels.map((child, i) => {\n          return (\n            <td\n              id={\"telkkutablecol\" + i}\n              lang=\"fi\"\n              tabIndex=\"0\"\n              style={\n                \"vertical-align: top; padding-left: 5px; padding-right: 5px; \" +\n                tableBorderStyle\n              }\n            >\n              {child}\n            </td>\n          );\n        });\n    }\n\n    return (\n      <Fragment>\n        <div id=\"telkku_main_div\" style={divDialogStyle}\n        onKeyUp={this.altPlusKeyUpProgramHeader}>\n          <div\n            class={style.cardHeader}            \n          >\n            <h1 tabIndex=\"0\" lang=\"fi\" id=\"focus_1_element\">\n              Telkku {this.getFetchedDate()}\n            </h1>\n\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              <div class={style.cardBody}>\n                <div\n                  lang=\"fi\"\n                  tabIndex=\"0\"\n                  aria-labelled=\"Miten ohjelmatiedot näytetään\"\n                >\n                  <div style={{ \"background-color\": \"red\", color: \"yellow\" }} tabIndex=\"0\">\n                    {state.errmsg}\n                  </div>\n                  <div class=\" mdc-typography--caption\" tabIndex=\"0\" id=\"divControl\">\n                    Miten ohjelmatiedot näytetään:\n                  </div>\n                </div>\n                <div class={style.cardBody}>\n                  <div>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.prevChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Aikaisemmat kanavat\"\n                        text=\"&lt;\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <space> </space>\n\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.nextChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Seuraavat kanavat\"\n                        text=\"&gt;\"\n                      ></Button>\n                    </span>\n\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showAllDescriptions}\n                        propref={this.showAllDescrRef}\n                        inputid=\"checkshowdescribtions\"\n                        style={inputw}\n                        labeltext=\"Näytä selitykset\"\n                        checked={state.bDisplayAllDescriptions}\n                      />\n                    </span>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showOneChannel}\n                        propref={this.showOneChannelRef}\n                        inputid=\"checkshowonechannel\"\n                        style={inputw}\n                        labeltext=\"Näytä yksi kanava:\"\n                        checked={state.bCheckShowChannelsAtSameTime}\n                      />\n\n                      <select\n                        tabIndex=\"0\"\n                        selectedIndex={this.state.selectedchannelindex}\n                        disabled={state.showChannelsAtSameTime !== 1}\n                        preselected\n                        outlined\n                        style={inputw}\n                        ref={this.selectChannelRef}\n                        onChange={(e) => {\n                          this.setState({\n                            selectedchannelindex: e.target.selectedIndex,\n                            bSearchButtonClicked: false,\n                          });\n                        }}\n                      >\n                        {selectchannels}\n                      </select>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <label for=\"input_number_columss\" style={inputw}>\n                        Näytettävien kanavien lkm:{\" \"}\n                      </label>\n                      <input\n                        id=\"input_number_columss\"\n                        name=\"input_number_columns\"\n                        style={inputw}\n                        disabled={this.state.bCheckShowChannelsAtSameTime}\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={\n                          this.state.showChannelsAtSameTime === -1\n                            ? \"\"\n                            : this.state.showChannelsAtSameTime\n                        }\n                        onKeyUp={this.textFieldChannelsAtSameTimeChanged}\n                      />\n                    </span>\n                    <span>\n                      <label for=\"idsearchvalue\">\n                        Etsi tekstiä ohjelmista:\n                      </label>\n                      <input\n                        id=\"idsearchvalue\"\n                        type=\"text\"\n                        tabIndex=\"0\"\n                        outlined\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onKeyUp={this.textFieldSearchChanged}\n                        style={\" width: 30%;\"}\n                      />\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        style={inputw}\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onClick={this.searchTextFromChannelsClicked}\n                        style={buttoninputw}\n                        aria-label=\"Hae\"\n                        text=\"Hae\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadMoreChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa +10 kanavaa\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadAllChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa kaikki kanavat\"\n                      ></Button>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showTableBorders}\n                        style={inputw}\n                        propref={this.showTableBordersRef}\n                        inputid=\"checkTableBorders\"\n                        labeltext=\"Näytä taulun raamit\"\n                        checked={state.bShowTableBorder}\n                      />\n                    </span>\n                    <space> </space>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={!state.bUnderFetch}\n                        style={buttoninputw}\n                        onClick={this.abortFetchClicked}\n                        text=\"Keskeytä lataus\"\n                      ></Button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <br />\n            <br />\n            <section\n              style={this.state.themevalue === \"\" ? \"\" : this.tablesectionStyle}\n            >\n              <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n                {state.errmsg}\n              </div>\n              <div class=\" mdc-typography--caption\">\n                <h3 id=\"idprogramtableh3\" tabIndex=\"0\">\n                Ohjelmataulukko&emsp;\n                    <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    style={buttoninputw}\n                    text={state.hideButtonText}\n                    id=\"buttonHide\"\n                    onClick={this.buttonHidePressed}\n                    aria-label=\"Näytä/Piilota teksi\"\n                  ></Button>\n\n                </h3>\n                <div class={style.cardHeader} id=\"hideDiv\">\n                  <h3 lang=\"fi\" tabIndex=\"0\">\n                    -- Ohjelmataulukko, liikutaan hiirellä tai taulukon sisällä\n                    seuraavilla näppäimillä: alt+a = seuraava kanava, alt+k =\n                    edellinen kanava sekä alt+o = liikutaan kanavan otsakkeeseen.\n                    Myös ensimmäisen kerran/sama kanava on mahdollista\n                    painaa alt+c:ää, jolloin ruudunlukuohjelma sanoo kanavan nimen, mutta \n                    selauskohta ei muutu. Samoin atl+r:lla toistetaan \n                    kerran/ohjelmatieto sen teksti. Ohjelman kuvailun saa näkymään tab \n                    näppäimellä ja enterillä tai hiirenklikkauksella. \n                    Taulukon sisällä toimivat myös tab sekä shift-tab \n                    näppäimet. Taulukon yläpuolelle tekstin \"Ohjelmataulukko\" \n                    kohdalle pääsee komennolla alt+a. Myös seuraavat \n                      näppäimet toimivat, kun kanavia enemmän kuin taulukossa näytetään: \n                      edelliset kanavat: alt+g ja seuraavat kanavat: alt+j. Alt+n vie suoraan\n                      miten taulukon ohjelmatiedot näytetään yläpuolelle.\n                  </h3>\n                </div>\n                {state.bSearchButtonClicked && state.textSearch != null\n                  ? \" (haun tulokset)\"\n                  : \"\"}\n              </div>\n              <table id=\"programtable\" style=\"width:100%\" ref={this.tablCntl}>\n                <tbody>\n                  <tr>{tableheaders}</tr>\n                  <tr>{tabletds}</tr>\n                </tbody>\n              </table>\n            </section>\n          </div>\n          <Dialog\n            role=\"dialog\"\n            id=\"dialogloading\"\n            aria-labelledby=\"h1loading\"\n            aria-modal=\"false\"\n            lang=\"fi\"\n            ref={this.scrollingDlgRef}\n            title=\"Odota!\"\n            themevalue={props.themevalue}\n            okButtonPressed={this.onClickDisplayDialog}\n            okText=\"Sulje\"\n            scrollable={true}\n          >\n            <div style={divDialogStyle}>\n              <div class=\"card-header\">\n                <h3\n                  lang=\"fi\"\n                  id=\"h1loading\"\n                  default\n                  tabIndex=\"0\"\n                  class=\" mdc-typography--title\"\n                >\n                  Hetkinen tietoja haetaan par'aikaa...\n                </h3>\n              </div>\n            </div>\n          </Dialog>\n          <div id=\"screenreaderdiv\" tabindex=\"0\" aria-live=\"priority || polite\"\n               class=\"visually-hidden\" aria-label={this.state.screenreaderdiv} />\n       \n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/*\n\n\t\t\t\t<Dialog role=\"dialog\" id=\"dialogloading\" aria-labelledby=\"h1loading\"\n     \t\t\t aria-modal=\"false\"\n\t\t\t\tref={this.scrollingDlgRef}>\n\t\t\t\t <Dialog.Header lang=\"fi\" tabIndex=\"0\" >Odota!</Dialog.Header>\n\t\t\t\t <Dialog.Body scrollable={false}>\n\t\t\t\t   <div class=\"card-header\">\n\t\t\t\t\t  <h3 lang=\"fi\" id=\"h1loading\" default tabIndex=\"0\" class=\" mdc-typography--title\">\n\t\t\t\t\t  Hetkinen tietoja haetaan par'aikaa...\n\t\t\t\t\t  </h3>\n\t\t\t\t\t  </div>\n\t\t\t\t </Dialog.Body>\n\t\t\t\t <Dialog.Footer>\n\t\t\t\t\t <Dialog.FooterButton lang=\"fi\" tabIndex=\"0\" role=\"button\" \n\t\t\t\t\t onCancel={this.onClickDisplayDialog} cancel={true} >Sulje</Dialog.FooterButton>\n\t\t\t\t </Dialog.Footer>\n\t\t\t </Dialog>\n\n\n\t\t\t\t\t<Chips>\n\t\t\t\t\t\t<Chips.Chip style={(state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length \n\t\t\t\t\t\t    ? 'display: none' :'' }>\n\t\t\t\t\t\t\t<Chips.Text>&lt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t\t<Chips.Chip disabled={state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length }>\n\t\t\t\t\t\t\t<Chips.Text>&gt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t</Chips>\n\n<LayoutGrid>\n\t\t\t\t\t\t\t<LayoutGrid.Inner>\n\t\t\t\t\t\t\t\t{channels}\n\t\t\t\t\t\t\t</LayoutGrid.Inner>\n        \t\t\t\t</LayoutGrid>\n\t\t\t\t\t\t*/\n","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import 'preact-material-components/Button/style.css';\n\nimport Config from \"../../utils/Config\";\nimport style from \"./style\";\n// import Category from './Category';\n// import GridOrList from './GridOrList';\nimport Telkku from \"../../components/telkku/Telkku\";\n\n// import StaticFunctions from '../../utils/StaticFunctions';\n\nexport default class TelkkuRoute extends Component {\n  control = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"YleRoute.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.state = {\n      errmsg: null,\n    };\n    this.control = createRef();\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    // this.fetchProgCategories();\n  }\n\n  removelisteners = () => {\n    this.control.removelisteners();\n  };\n\n  /*\n\t\t'Origin': 'localhost:8080',\n\t\t\t'User-Agent': 'curl/7.55.1',\n\t\t\t'Host': 'external.api.yle.fi',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'Access-Control-Allow-Credentials': true,\n\t\t\t'Cross-Origin-Resource-Policy': 'cross-origin',\n\t\t\t'Access-Control-Allow-Methods': 'GET,OPTIONS',\n\t\t\t'Access-Control-Allow-Headers': 'Content-Type'\n*/\n\n  render(props, state) {\n    return (\n      <div class={`${style.home} page`}>\n        <Telkku\n          store={props.store}\n          ref={this.control}\n          themevalue={props.themevalue}\n        />\n        <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n          {state.errmsg}\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n\t\t\t\t\t\t<FormField>\n\t\t\t\t\t\t\t<Radio id=\"radio_yle\" name='optsource' \n\t\t\t\t\t\t\t    checked={state.progsource == 'radio_yle'}\n\t\t\t\t\t\t\t\tonChange={this.radioProgSourceChanged} ></Radio>\n\t\t\t\t\t\t\t<label for=\"radio_yle\">Yle</label>\n\t\t\t\t\t\t</FormField>\n*/\n"],"sourceRoot":""}