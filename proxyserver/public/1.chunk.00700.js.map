{"version":3,"sources":["webpack:///./components/dialog/Dialog.css","webpack:///./components/dialog/PreactDialog.js","webpack:///./components/button/Button.js","webpack:///./components/checkbox/CheckBox.js","webpack:///./components/telkku/ShowProgram.js"],"names":["PreactDialog","props","event","preventDefault","dialogRef","MDComponent","show","current","Config","bDebug","console","log","closeButtonRef","focus","close","cancelButtonPressed","okButtonPressed","setTheme","Omiu","e","window","keyCode","state","dialogid","_uniqueId","createRef","ref","this","role","id","style","css","Header","lang","tabIndex","title","Body","scrollable","class","children","Media","className","Footer","onKeyDown","enterKeyDown","slot","undefined","type","onClick","cancelBttnPressed","cancelText","okBttnPressed","autofocus","okText","Component","Button","buttonid","Date","now","disabled","text","SwitchCheckBox","errmsg","chechRef","inputw","onChange","propref","inputid","checked","labeltext","ShowProgram","useState","displaydescription","setDisplayDescription","scrollingDlgRef","useRef","onClickDisplay","displayAllDescriptions","open","changeDisplayDescriptionValue","changeDisplayDes","bValue","onClickDisplayDialog","showSearch","data","titleindex","getPOfIndex","descriptionindex","description","themevalue","link","href","blankurl","target","channel","replace"],"mappings":"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","file":"1.chunk.00700.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mask\":\"mask__Z7FtU\",\"mydialog\":\"mydialog__SaN+F\",\"o-dialog\":\"o-dialog__fiF7E\",\"odialog\":\"odialog__C8B3T\",\"is-fullscreen\":\"is-fullscreen__PcNIc\",\"o-dialog__wrapper\":\"o-dialog__wrapper__VWE+X\",\"o-dialog__header\":\"o-dialog__header__KXdCq\",\"o-dialog__headerbtn\":\"o-dialog__headerbtn__+9beg\",\"o-dialog__close\":\"o-dialog__close__VdD1T\",\"o-dialog__title\":\"o-dialog__title__B29+7\",\"o-dialog__body\":\"o-dialog__body__doxod\",\"o-dialog__footer\":\"o-dialog__footer__YMo1O\",\"o-dialog--center\":\"o-dialog--center__5BkiG\",\"dialog-zoom-enter-active\":\"dialog-zoom-enter-active__wt5cM\",\"dialog-zoom-in\":\"dialog-zoom-in__OAnXz\",\"dialog-zoom-leave-active\":\"dialog-zoom-leave-active__HjBjW\",\"dialog-zoom-out\":\"dialog-zoom-out__RusTg\",\"mask-enter-active\":\"mask-enter-active__BFcuN\",\"mask-in\":\"mask-in__fUWQb\",\"mask-leave-active\":\"mask-leave-active__+Bk7h\",\"mask-out\":\"mask-out__QcW6a\",\"content\":\"content__c48gI\"};","import { h, Component, Fragment, createRef } from \"preact\";\nimport _uniqueId from \"lodash/uniqueId\";\nimport style from \"./Dialog.css\";\nimport css from \"./Dialog.css\";\nimport Config from \"../../utils/Config\";\n\nimport Dialog from \"preact-material-components/Dialog\";\n//import Button from \"preact-material-components/Button\";\n// import Button from \"../button/Button\";\n// import List from \"preact-material-components/List\";\nimport Card from \"preact-material-components/Card\";\n// import \"preact-material-components/List/style.css\";\n// import \"preact-material-components/Button/style.css\";\nimport \"preact-material-components/Dialog/style.css\";\n\n/**\n * This dialog class combines together preact dialog class with\n * @micro/button class, because preact material button class dies\n * not work with DialogFooter.Button alias preact Button!\n */\nclass PreactDialog extends Component {\n  dialogRef = null;\n  closeButtonRef = null;\n  channelHeader = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialogid: _uniqueId(\"dialog-\"),\n    };\n\n    this.closeButtonRef = createRef();\n    this.dialogRef = createRef();\n    //   console.log(\"dialog constructor: dialogid=\" +this.state.dialogid)\n    // this.dialogRef = createRef();\n  }\n\n  componentDidMount() {\n    //TODO:  this.dialogRef = document.getElementById(\"dialog\" + this.state.dialogid);\n    //    this.dialogRef.open();\n  }\n\n  dialogBttnPressed = (event) => {\n    event.preventDefault();\n    //    console.log(\"dialog dialogBttnPressed: dialogRef=\" +this.dialogRef)\n    this.dialogRef.MDComponent.show();\n  };\n\n  open = () => {\n    this.dialogRef.current.MDComponent.show();\n    if (Config.bDebug) console.log(\"before closeButtonRef.current.focus\");\n    this.closeButtonRef.current.focus();\n    // this.dialogRef = document.getElementById(\"mydialog\");\n    if (Config.bDebug)\n      console.log(\"dialog componentDidMount: dialogRef=\" + this.dialogRef);\n  };\n\n  close = () => {\n    this.dialogRef.current.MDComponent.close();\n  };\n\n  cancelBttnPressed = (event) => {\n    event.preventDefault();\n    //   console.log(\"dialog cancelBttnPressed: dialogRef=\" +this.dialogRef)\n    this.dialogRef.current.MDComponent.close();\n    this.props.cancelButtonPressed(event);\n  };\n\n  okBttnPressed = (event) => {\n    event.preventDefault();\n    if (Config.bDebug)\n      console.log(\"dialog okBttnPressed: dialogRef=\" + this.dialogRef);\n    // console.log(\"this.dialogRef=\" +this.dialogRef.visible);\n    // this.dialogRef.visible = true;\n    this.dialogRef.current.MDComponent.close();\n    this.props.okButtonPressed(event);\n    // console.log(\"this.dialogRef=\" +this.dialogRef.visible);\n  };\n\n  changeThemeBttnPressed = (event) => {\n    event.preventDefault();\n    const setTheme = Omiu.setTheme;\n    setTheme(\"primary\", \"green\");\n  };\n\n  enterKeyDown = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which;\n\n    if (Config.bDebug) console.log(\"Dialog pressed\");\n\n    let currentColInd = null;\n\n    // .item(0).innerHTML\n    switch (e.keyCode) {\n      case 13:\n        this.dialogRef.current.MDComponent.close();\n        this.props.okButtonPressed(e);\n        break;\n    }\n  };\n\n  /*\n                   <o-button type=\"primary\" onClick={this.changeThemeBttnPressed} >Kissa2</o-button>\n                    <o-button round type=\"primary\" size=\"mini\"\n                    onClick={this.dialogBttnPressed} >Dialog</o-button>\n            \n\t\t\t\t\tid={\"dialog\"+this.state.dialogid}\n    */\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"->\");\n      console.log(props);\n      console.log(state);\n      console.log(\"<-\");\n    }\n\n    return (\n      <Fragment>\n        <Dialog\n          ref={this.dialogRef}\n          role=\"dialog\"\n          id=\"dialogtheme\"\n          aria-modal=\"true\"\n          style={css.odialog}\n        >\n          <Dialog.Header lang=\"fi\" tabIndex=\"0\">\n            {props.title}\n          </Dialog.Header>\n          <Dialog.Body scrollable={true}>\n            <Card>\n              <div class=\"card-header\">\n                {props.children ? props.children : null}\n              </div>\n              <Card.Media className=\"card-media\" />\n            </Card>\n          </Dialog.Body>\n          <Dialog.Footer>\n            <div onKeyDown={this.enterKeyDown}>\n              <span></span>\n              <span slot=\"footer\" class=\"dialog-footer\">\n                {props.cancelButtonPressed !== undefined ? (\n                  <button\n                    style={\n                      \" margin: 15px;  height: 30px; background: blue; color: white;\"\n                    }\n                    id=\"cancelBtn\"\n                    tabIndex=\"0\"\n                    type=\"primary\"\n                    onClick={this.cancelBttnPressed}\n                  >\n                    {props.cancelText !== undefined\n                      ? props.cancelText\n                      : \"Cancel\"}\n                  </button>\n                ) : null}\n                {props.okButtonPressed !== undefined ? (\n                  <button\n                    id=\"okBtn\"\n                    tabIndex=\"0\"\n                    style={\n                      \" margin: 15px;  height: 30px; background: blue; color: white;\"\n                    }\n                    onClick={this.okBttnPressed}\n                    type=\"primary\"\n                    autofocus={true}\n                    ref={this.closeButtonRef}\n                  >\n                    {props.okText !== undefined ? props.okText : \"Ok\"}\n                  </button>\n                ) : null}\n              </span>\n            </div>\n          </Dialog.Footer>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\n// {props.children ? props.children : null}\n\nexport default PreactDialog;\n","import { h, Component, Fragment } from 'preact';\n//import style from './style.css';\n// import { styled, setup } from \"goober\";\n// import style from './Button.css';\n// import  '@omiu/button';\n// import * as css from './Dialog.css';\n\n/*\nsetup(h);\n\nconst OButton = styled(\"button\")`\nposition: relative;\nbackground: black;\nborder-radius: 10px;\n-webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\nbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n-webkit-box-sizing: border-box;\nbox-sizing: border-box;\nwidth: 50%;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n`;\n*/\n\nconst Button = (props) => {\n\n\tconst buttonid = Date.now();\n\n    /*\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t    buttonid:  Date.now()\n\t\t};\n     //   console.log(\"dialog constructor: dialogid=\" +this.state.dialogid)\n\t\t// this.dialogRef = createRef();\t\t\n\t}\n    */\n\n    /*\n\tcomponentDidMount()\n\t{\n\t//\tthis.dialogRef = document.getElementById(\"dialog\"+this.state.dialogid);\n//\tthis.dialogRef = document.getElementById(\"mydialog\");\t\n    //    console.log(\"dialog componentDidMount: dialogRef=\" +this.dialogRef)\n   //    this.dialogRef.open();\n\t}\n    */\n\n    /*\n                   <o-button type=\"primary\" onClick={this.changeThemeBttnPressed} >Kissa2</o-button>\n                    <o-button round type=\"primary\" size=\"mini\"\n                    onClick={this.dialogBttnPressed} >Dialog</o-button>\n            \n\t\t\t\t\tid={\"dialog\"+this.state.dialogid}\n    */\n\n//\trender(props, state) {\n\t\treturn(\t\n            <Fragment>\n                <button type=\"primary\" onClick={props.onClick} tabIndex=\"0\"\n                disabled={props.disabled} id={ props.id ? props.id : buttonid}\n\t\t\t\tstyle={props.style !== undefined ? props.style +\" height: 30px; background: blue; \" : \" height: 30px; background: blue; \"} \n\t\t\t\tclass={props.class !== undefined ? props.class : null} \n\t\t\t\t>{props.text}\n            </button>\t\n            </Fragment>\n\t\t);\n//\t}\n}\n\n/*\n             <o-button type=\"primary\" onClick={props.onClick} tabIndex=\"0\"\n                disabled={props.disabled}\n\t\t\t\tstyle={props.style !== undefined ? props.style : null} \n\t\t\t\tclass={props.class !== undefined ? props.class : null} \n\t\t\t\t>{props.text}\n            </o-button>\t\n   */\nexport default Button;\n","import {h, Fragment, Component, createRef, render } from 'preact';\n// import { useRef } from 'preact/hooks';\n// import { forwardRef } from 'preact/compat';\nimport Config from '../../utils/Config';\nimport './index.css';\n//import Switch from 'preact-material-components/Switch';\n//import 'preact-material-components/Switch/style.css';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nclass SwitchCheckBox extends Component \n// function SwitchCheckBox(props) /* = forwardRef((props, ref) => */\n{\n    constructor(props)\n\t{\n\t\tsuper(props);\n\t\tif(Config.bDebug) \n\t\t{\n\t\t\tconsole.log(\"SwitchCheckBox.js\");\n\t\t\tconsole.log(\"props\");\n\t\t\tconsole.log(props);\n\t\t}\n\n\t\tthis.state = {\n\t\t\terrmsg: null,\n\t\t}\n\t\t\n\t\tthis.chechRef = createRef();\n\t\n\t }\n\n    //const refcomp = useRef(null);\n    /*\n       <Fragment>\n\n        <Switch lang=\"fi\" tabIndex=\"0\" type=\"checkbox\" onChange={props.onChange} .\n                            ref={props.inputref === undefined ? undefined : props.inputref}                     \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked}\n\n                        <input lang=\"fi\" type=\"checkbox\" onChange={props.onChange} \n                            ref={props.inputref === undefined ? undefined : props.inputref}                     \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked} />\n                            <span class=\"checkmark\"></span>\n                            <label lang=\"fi\" class=\"container\" \n                        for={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                        id={props.inputid === undefined ? 'idcheckboxundef-label' : props.inputid+'-label'} >\n                            {props.labeltext}\n                    </label>\n                </Fragment>\n                */\n     render(props, state)\n     {\n        const inputw = \"float: none; display: inline-block; vertical-align: middle; \";\n\n        return (\n                <Fragment>\n                        <input lang=\"fi\" tabIndex=\"0\" type=\"checkbox\" onChange={props.onChange} \n                            className=\"form-check-input filled-in\" \n                            ref={props.propref} style={inputw}                    \n                            id={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                            checked={props.checked === undefined ? false : props.checked}\n                             />\n                         \n                            <label lang=\"fi\" style={  'margin-left: 5px;'} class=\"container\" style={inputw} \n                        for={props.inputid === undefined ? 'idcheckboxundef' : props.inputid}\n                        id={props.inputid === undefined ? 'idcheckboxundef-label' : props.inputid+'-label'} >\n                            {props.labeltext}\n                    </label>\n                </Fragment>\n        );\n     }\n}\n\nexport default SwitchCheckBox;","import { h, Fragment, Component, createRef } from \"preact\";\nimport { useState, useRef } from \"preact/hooks\";\n//import Chips from 'preact-material-components/Chips';\n//import 'preact-material-components/Chips/style.css';\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Formfield from 'preact-material-components/FormField';\n//import 'preact-material-components/Checkbox/style.css';\n//import LayoutGrid from 'preact-material-components/LayoutGrid';\n//import 'preact-material-components/LayoutGrid/style.css';\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\nimport Config from \"../../utils/Config\";\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component\nfunction ShowProgram(props) {\n  const [displaydescription, setDisplayDescription] = useState(false);\n  //   const [displayAllDescriptions, setDisplayAllDescriptions] = useState(props.displayAllDescriptions);\n  const scrollingDlgRef = useRef(null);\n\n  let divDialogStyle =\n    props.themevalue !== undefined && props.themevalue !== \"\"\n      ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n      : \"color: #FFF; background-color: black; border-color: #FFF;\";\n  const inputw = \"float: none; display: inline-block; vertical-align: middle; \";\n\n  const onClickDisplay = (event) => {\n    event.preventDefault();\n    //   console.log(\"onClickDisplay\");\n    if (props.displayAllDescriptions) return;\n    if (!displaydescription)\n      //scrollingDlgRef.current.MDComponent.show();\n      scrollingDlgRef.current.open();\n      changeDisplayDescriptionValue();\n  };\n\n  const changeDisplayDescriptionValue = () => changeDisplayDes(!displaydescription);\n\n  const changeDisplayDes = (bValue) => {\n    setDisplayDescription(bValue);\n  }\n\n  const onClickDisplayDialog = (event) => {\n    event.preventDefault();\n    //    console.log(\"onClickDisplayDialog\");\n    // if (displaydescription)\n    //scrollingDlgRef.current.MDComponent.close();\n    scrollingDlgRef.current.close();\n    changeDisplayDescriptionValue();\n  };\n\n  /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.description = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n\n          <Chips.Chip onClick={onClickDisplay} >\n                    <Chips.Text>{data.title}</Chips.Text></Chips.Chip> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip> }\n\n                     {(!displaydescription ? \n                <Button onClick={onClickDisplay} >\n                    {data.title}</Button> : <Chips.Chip onClick={onClickDisplay}>\n                    <Chips.Text>Kissa</Chips.Text></Chips.Chip>) }\n\n                                 <p>Count: {count}</p>\n            <button onClick={increment}>Increment</button>\n            <button onClick={decrement}>Decrement</button>\n\n                <Chips.Text>{props.data.title}</Chips.Text></Chips.Chip> \n        */\n\n  const openHtmlPage = (event) => {\n    console.log(\"openHtmlPage\");\n    event.preventDefault();\n    let blankurl = event.target.href;\n    console.log(\"blankurl\");\n    console.log(blankurl);\n    // window.open(blankurl, '_blank', \"Telkussa\", \"location=no\");\n    window.open(blankurl, \"_blank\", \"Telkussa\");\n    return false;\n  };\n\n  const enterKeyDown = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which;\n    console.log(\"pressed\");\n\n    let currentColInd = null;\n\n    // .item(0).innerHTML\n    switch (e.keyCode) {\n      case 13:\n        onClickDisplay(e);\n        break;\n    }\n  };\n\n  const onEnterDisplayDialog = (e) => {\n    if (e.keyCode === 13) onClickDisplayDialog(e);\n  };\n\n  return (\n    <div>\n      <div>\n        <div onClick={onClickDisplay} onKeyDown={enterKeyDown}>\n          <p lang=\"fi\" tabIndex=\"0\">\n            <b>\n              {props.showSearch && props.data.titleindex != undefined\n                ? props.getPOfIndex(props.data.titleindex, props.data.title)\n                : props.data.title}\n            </b>\n          </p>\n          {props.displayAllDescriptions ? (\n            <Fragment>\n              <p lang=\"fi\" tabIndex=\"0\">\n                {props.showSearch && props.data.descriptionindex != undefined\n                  ? props.getPOfIndex(\n                      props.data.descriptionindex,\n                      props.data.description,\n                      props.themevalue\n                    )\n                  : props.data.description}\n              </p>\n              {props.data.link != undefined || props.data.link != null ? (\n                <p>\n                  <a lang=\"fi\" href={props.data.link} onClick={openHtmlPage}>\n                    ohjelmalinkki\n                  </a>\n                </p>\n              ) : null}\n            </Fragment>\n          ) : null}\n        </div>\n        <Dialog\n          role=\"dialog\"\n          id=\"telkkudialogshowporg\"\n          aria-labelledby=\"h1loading\"\n          aria-modal=\"false\"\n          lang=\"fi\"\n          ref={scrollingDlgRef}\n          title={props.channel ? props.channel.replace(\"Telkussa: \", \"\") : \"\"}\n          okButtonPressed={onClickDisplayDialog}\n          okText=\"Sulje\"\n          scrollable={true}\n          themevalue={props.themevalue}\n        >\n          <div class=\"card-header\" style={divDialogStyle}>\n            <h3\n              lang=\"fi\"\n              id=\"h3program\"\n              tabIndex=\"0\"\n              class=\" mdc-typography--title\"\n            >\n              {props.data.title}\n            </h3>\n            <h3 lang=\"fi\" tabIndex=\"0\" class=\" mdc-typography--title\">\n              {props.data.description}\n            </h3>\n            <br />\n          </div>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\n/*\n                    <Dialog role=\"dialog\" id=\"dialogtheme\" aria-modal=\"true\"\n                               ref={scrollingDlgRef}>\n                                <Dialog.Header lang=\"fi\" tabIndex=\"0\">{props.channel ? \n                                props.channel.replace(\"Telkussa: \", \"\") : ''}</Dialog.Header>\n                                <Dialog.Body scrollable={true}>\n                                  <Card><div class=\"card-header\">\n                                     <h3 lang=\"fi\" id=\"h3program\" tabIndex=\"0\" class=\" mdc-typography--title\">\n                                         {props.data.title}</h3>\n                                     <h3 lang=\"fi\" tabIndex=\"0\" class=\" mdc-typography--title\">\n                                         {props.data.description}</h3><br/>\n                                     </div>\n                                     <Card.Media className=\"card-media\" />\n                                  </Card>\n                                </Dialog.Body>\n                                <Dialog.Footer>\n                                    <Dialog.FooterButton tabIndex=\"0\" \n                                    onKeyDown={onEnterDisplayDialog} \n                                    onCancel={onClickDisplayDialog} onAccept={onClickDisplayDialog}\n                                    cancel={true} >Sulje</Dialog.FooterButton>\n                                </Dialog.Footer>\n                    </Dialog> \n*/\n\nexport default ShowProgram;\n"],"sourceRoot":""}