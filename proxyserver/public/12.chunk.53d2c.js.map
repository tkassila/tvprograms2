{"version":3,"sources":["webpack:///./routes/telkku/style.css","webpack:///./components/telkku/RssTelkkuChannel.js","webpack:///./components/telkku/Telkku.js","webpack:///./routes/telkku/TelkkuRoute.js","webpack:///./components/telkku/style.css"],"names":["RssTelkkuChannel","props","displayitems","data","channelprograms","map","program","i","h","ShowProgram","id","displayAllDescriptions","getPOfIndex","themevalue","showSearch","undefined","channel","title","tabIndex","lang","titleindex","this","toString","replace","Telkku","_Component","_this$state","_this","_defineProperty","_callSuper","section_width","_ref","_asyncToGenerator","init_pagenumber","init_max","_mounted","Config","bDebug","console","log","state","bAllChannelsLoaded","bUnderFetch","setState","channelnumber","max","fetcheddata","fetcheditems","channels","length","scrollingDlgRef","current","open","fetchRssTelkkuChannel","push","error","message","errmsg","close","bLoadAllChannels","bLoad10Channels","_x","_x2","apply","arguments","_ref2","channelurl","fetch_url_telkku","fetched","fetch","method","timeout","headers","Accept","mode","signal","abortSignal","then","handleErrors","response","text","indexOf","getJsonDataFromTelkkuRssXml","catch","TelkkuException","_x3","xmlDoc","window","DOMParser","parseFromString","channeltitle","getElementsByTagName","childNodes","nodeValue","json","xmlitems","querySelectorAll","forEach","item","getChannelProgramFromXml","NaN","item1","childNode1","nodeValue1","jsonitem","getChannelProgramXmlValue","description","pubdate","link","ok","status","Error","event","preventDefault","target","checked","showChannelsAtSameTime","bCheckShowChannelsAtSameTime","bSearchButtonClicked","const_showChannelsAtSameTime","selectedchannelindex","value","bValue","bDisplayAllDescriptions","index","txt","textSearch","trim","first","substring","between","last","newvalue_first","style","foundedthtml","newvalue_between","newvalue_last","newvalue","ret","searchText","foundedChannels","foundedPrograms","founded","progfounded","uppersearchText","toUpperCase","chcoopy","search_channels","selectedTitle","filteredchannels","filter","s","Array","from","cha","_extends","pr","descriptionindex","jsonchannel","bAllChannels","min","Math","floor","currentChannelSetIndex","newChannelSet","validNumber","parseInt","channelSets","calculateMaxChannelSetIndex","bAllChannelsHasLoaded","fetchRssTelkkuPrograms","showAllDescrRef","forceUpdate","aborted","abortController","abort","today","days","getDate","month","getMonth","getFullYear","bShowTableBorder","cols","currentColInd","path","str","search","includes","ind","strNum","ret2","e","keyCode","which","altKey","row","tablCntl","rows","cells","currColInd","colIndex","lenCols","currentCol","closest","key","document","activeElement","innerHTML","speakScreenReader","composedPath","divInsideOfCol","getH3OfCurrentColumn","channelText","focus","getCurrentColumnIndex","prevcol","getPrevColumn","nextcol","getNextColumn","getElementById","divh3","nextChannelSetClicked","prevChannelSetClicked","altPlusKeyUp","hideButton","x","display","hideButtonText","store","now","Date","currentchannel","sectionStyle","section_width_css","tablesectionStyle","http_curlserver","bind","removelisteners","createRef","showOneChannelRef","selectChannelRef","showTableBordersRef","sectionRef","_inherits","nextProps","sectionwidth","AbortController","offsetWidth","name","screenreaderdiv","_this2","getSectionWidthCss","divDialogStyle","inputw","buttoninputw","tableBorderStyle","table_border_color","selectchannels","tabletds","child","selected","tableheaders_and_rows","getTableHeadersAndTableRowsAfterChannels","Fragment","onKeyUp","altPlusKeyUpProgramHeader","class","cardHeader","getFetchedDate","ref","cardBody","color","Button","ripple","raised","disabled","onClick","SwitchCheckbox","onChange","showAllDescriptions","propref","inputid","labeltext","showOneChannel","selectedIndex","preselected","outlined","for","type","textFieldChannelsAtSameTimeChanged","textFieldSearchChanged","searchTextFromChannelsClicked","loadMoreChannelClicked","loadAllChannelClicked","showTableBorders","abortFetchClicked","buttonHidePressed","Dialog","role","okButtonPressed","onClickDisplayDialog","okText","scrollable","default","tabindex","Component","TelkkuRoute","_classCallCheck","control","concat"],"mappings":"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","file":"12.chunk.53d2c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__PEN99\",\"cardHeader\":\"cardHeader__mqzim\",\"cardBody\":\"cardBody__Yn9DS\"};","    \nimport {h } from 'preact';\nimport Config from '../../utils/Config';\nimport ShowProgram from './ShowProgram';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nfunction RssTelkkuChannel(props)\n{\n       // const cssDark = useContext(CssDark);\n        let displayitems = null;\n        /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.descripprogs && tion = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n        */\n        if (props.data.channelprograms !== null)\n            displayitems = props.data.channelprograms.map((program, i) => {\n\t\t\t\treturn <ShowProgram id={'telkkuchannel' +i} data={program}\n                    displayAllDescriptions={props.displayAllDescriptions}\n                    getPOfIndex={props.getPOfIndex}\n                    themevalue={props.themevalue}\n                    showSearch={props.showSearch == undefined ? false : props.showSearch}\n                    channel={props.data.title} />;\n\t\t\t});\n\n        return (\n            <div>\n            <h3 tabIndex=\"0\" lang=\"fi\" aria-label={props.data.title}>\n                {props.showSearch && props.data.titleindex != undefined\n                        ? props.getPOfIndex(props.data.titleindex, props.data.title,\n                            this.props.themevalue) : props.data.title.toString().replace(\"Telkussa: \", \"\")}</h3>\n            <div>{displayitems}</div>\n            </div>\n          );\n}\n\nexport default RssTelkkuChannel;","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import LayoutGrid from 'preact-material-components/LayoutGrid';\n//import 'preact-material-components/LayoutGrid/style.css';\n//import 'preact-material-components/Button/style.css';\n//import Checkbox from 'preact-material-components/Checkbox';\n// import Formfield from 'preact-material-components/FormField';\n// import 'preact-material-components/Checkbox/style.css';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Select/style.css';\n//import TextField from 'preact-material-components/TextField';\n//import 'preact-material-components/TextField/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\nimport Button from \"../button/Button\";\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n\n// import HTMLComment from \"react-html-comment\";\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\nimport SwitchCheckbox from \"../checkbox/CheckBox\";\n\nimport AbortController from \"abort-controller\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// imporpotcat fetchJsonp from 'fetch-jsonp';\nimport RssTelkkuChannel from \"./RssTelkkuChannel\";\n\nexport default class Telkku extends Component {\n  store = null;\n  fetch_url_telkku = null;\n  showAllDescrRef = null;\n  showOneChannelRef = null;\n  selectChannelRef = null;\n  const_showChannelsAtSameTime = 10;\n  _mounted = false;\n  scrollingDlgRef = null;\n  tablCntl = null;\n  showTableBordersRef = null;\n  sectionStyle = null;\n  tablesectionStyle = null;\n  sectionRef = null;\n  section_width = null;\n  section_width_css = undefined;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"Telkku.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let now = Date.now();\n    this.state = {\n      errmsg: null,\n      channels: null,\n      currentchannel: null,\n      bUnderFetch: false,\n      today: new Date(now),\n      bDisplayAllDescriptions: false,\n      showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n      selectedchannelindex: -1,\n      bCheckShowChannelsAtSameTime: false,\n      currentChannelSetIndex: 0,\n      bUnderFetch: false,\n      bAllChannelsLoaded: false,\n      textSearch: null,\n      bSearchButtonClicked: false,\n      bShowTableBorder: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n      fetcheddata: null,\n      fetcheditems: [],\n      sectionwidth: 0,\n      screenreaderdiv: \"\",\n      hideButton: false,\n      hideButtonText: 'Piilota ohje',\n    };\n\n    let themevalue = props.themevalue;\n    this.sectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n          (this.section_width_css == undefined\n            ? \"\"\n            : this.section_width_css)\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n          (this.section_width_css == undefined ? \"\" : this.section_width_css);\n\n    this.tablesectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \"\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\";\n\n    // this.fetch_url_telkku = 'https://telkussa.fi/RSS/Channel/';\n    this.fetch_url_telkku = Config.http_curlserver + \"/telkku/\";\n    this.TelkkuException = this.TelkkuException.bind(this);\n    this.removelisteners = this.removelisteners.bind(this);\n    this.showAllDescrRef = createRef();\n    this.showOneChannelRef = createRef();\n    this.selectChannelRef = createRef();\n    this.scrollingDlgRef = createRef();\n    this.tablCntl = createRef();\n    this.showTableBordersRef = createRef();\n    this.sectionRef = createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"Telkku componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n\n    if (nextProps !== null && nextProps.themevalue != this.props.themevalue) {\n      this.setState({ themevalue: nextProps.themevalue });\n      this.sectionStyle =\n        nextProps.themevalue !== undefined && nextProps.themevalue !== \"\"\n          ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth)\n          : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth);\n    }\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    this.abortController = new AbortController(); // 1\n    this.abortSignal = this.abortController.signal; // 2\n    this._mounted = true;\n //   if (document.getElementById(\"programtable\"))\n   //   document.getElementById(\"programtable\").onkeydown = this.altPlusKeyUp;\n    this.section_width = this.sectionRef.current.offsetWidth;\n    //\tthis.fetchRssTelkkuPrograms();\n    if (Config.bDebug) console.log(\"kissa\");\n    /*\n    let aField = document.getElementById('focus_1_element'); \n    if (aField) aField.focus(); \n    */\n  }\n\n  getSectionWidthCss = () => {\n    return \"width: \" + this.section_width + \"px;\";\n  };\n\n  removelisteners() {\n    if (this.abortSignal && !this.abortSignal.aborted)\n      this.abortController.abort();\n  }\n\n  componentWillUnmount() {\n    this.removelisteners();\n    //\tthis.setState({});\n    // this.store.setStateNoneCallListeners({fetchitems: [], channeltypeitems: [],\n    //programtypeitems: [], categories: [], schedules: [],\n    //  });\n    this._mounted = false;\n  }\n\n  fetchRssTelkkuPrograms = async (init_pagenumber, init_max) => {\n    if (!this._mounted) return;\n\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuPrograms\");\n    }\n    if (this.state.bAllChannelsLoaded) return;\n    if (this.state.bUnderFetch) return;\n\n    this.setState({ bUnderFetch: true });\n\n    let channelnumber = 1;\n    let max = 10;\n    if (init_pagenumber !== undefined) channelnumber = init_pagenumber;\n    if (init_max !== undefined) max = init_max;\n\n    this.state.fetcheddata = null;\n    this.state.fetcheditems = [];\n    if (this.state.channels != null && this.state.channels.length > 0)\n      this.state.fetcheditems = this.state.channels;\n\n    //this.scrollingDlgRef.current.MDComponent.show();\n    this.scrollingDlgRef.current.open();\n\n    try {\n      while (1) {\n        this.fetcheddata = await this.fetchRssTelkkuChannel(channelnumber);\n        if (this.fetcheddata !== null) {\n          // Array.prototype.push.apply(fetcheditems, fetcheddata);\n          this.state.fetcheditems.push(this.fetcheddata);\n          if (channelnumber === max && max !== -1) break;\n          channelnumber = channelnumber + 1;\n          if (this.state.bAllChannelsLoaded) break;\n        } else break;\n      }\n    } catch (error) {\n      if (error.message !== \"Error: 500\") {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.message, bUnderFetch: false });\n        //this.scrollingDlgRef.current.MDComponent.close();\n        this.scrollingDlgRef.current.close();\n        return;\n      } else this.setState({ bAllChannelsLoaded: true });\n    }\n    if (Config.bDebug) {\n      console.log(\"fetcheditems\");\n      console.log(this.state.fetcheditems);\n    }\n\n    //this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n    this.setState({\n      channels: this.state.fetcheditems,\n      errmsg: null,\n      bUnderFetch: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n    });\n  };\n\n  TelkkuException(message) {\n    this.message = message;\n    this.name = \"TelkkuException\";\n  }\n\n  fetchRssTelkkuChannel = async (channelnumber) => {\n     let channelurl = this.fetch_url_telkku + channelnumber; // +this.getFetchDateValue();\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuChannel 1\");\n      console.log(channelurl);\n    }\n\n    this.setState({ channels: null, errmsg: null });\n\n    let fetched = null;\n    // \tcrossDomain:true,\n    await fetch(channelurl, {\n      method: \"GET\",\n      timeout: 6000,\n      headers: {\n        \"Content-Type\": \"application/rss+xml; charset=UTF-8\",\n        Accept: \"*/*\", // application/rss+xml\n      },\n      mode: \"cors\",\n      signal: this.abortSignal,\n    })\n      .then(this.handleErrors)\n      .then((response) => {\n        return response.text();\n      })\n      //\t\t.then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        /*\n\t\t\t\t\t\tmode: 'same-origin',\n\n\t\t\tif(Config.bDebug) \n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"fetchRssTelkkuChannel 1.5\"); \n\t\t\t\t\tconsole.log(data); \n\t\t\t\t}\n\t\t\t\t*/\n        let indCheck = data.indexOf(\"<rss version=\");\n        if (indCheck == -1) {\n          fetched = null;\n          this.setState({ bAllChannelsLoaded: true });\n        } else fetched = this.getJsonDataFromTelkkuRssXml(data);\n      })\n      .catch((error) => {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.toString() });\n        throw new this.TelkkuException(error.toString());\n      });\n    return fetched;\n  };\n\n  getJsonDataFromTelkkuRssXml = (data) => {\n    let xmlDoc = new window.DOMParser().parseFromString(data, \"text/xml\");\n    let channeltitle =\n      xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n    if (Config.bDebug) {\n      console.log(\"channeltitle\");\n      console.log(channeltitle);\n    }\n    let json = {};\n    json.title = channeltitle;\n    const xmlitems = xmlDoc.querySelectorAll(\"item\");\n    if (Config.bDebug) {\n      console.log(\"xmlitems\");\n      console.log(xmlitems);\n    }\n    if (xmlitems == null || xmlitems == undefined) return null;\n    json.channelprograms = [];\n    xmlitems.forEach((item) => {\n      if (item === undefined) return;\n      json.channelprograms.push(this.getChannelProgramFromXml(item));\n    });\n\n    if (Config.bDebug) {\n      console.log(\"json\");\n      console.log(json);\n    }\n\n    return json;\n  };\n\n  getChannelProgramXmlValue = (item) => {\n    if (item === null || item === undefined || item === NaN) {\n      console.log(\"json\");\n      console.log(json);\n      return null;\n    }\n    let item1 = item[0];\n    if (item1 === null || item1 === undefined || item1 === NaN) {\n      console.log(\"item1\");\n      console.log(item1);\n      return null;\n    }\n    let childNode1 = item1.childNodes[0];\n    if (childNode1 === null || childNode1 === undefined || childNode1 === NaN) {\n      if (Config.bDebug) {\n        console.log(\"childNode1\");\n        console.log(childNode1);\n      }\n      return null;\n    }\n    let nodeValue1 = childNode1.nodeValue;\n    if (nodeValue1 === null || nodeValue1 === undefined || nodeValue1 === NaN) {\n      console.log(\"nodeValue1\");\n      console.log(nodeValue1);\n      return null;\n    }\n    return nodeValue1;\n  };\n\n  getChannelProgramFromXml = (item) => {\n    if (Config.bDebug) {\n      console.log(\"item\");\n      console.log(item);\n    }\n    let jsonitem = {};\n    jsonitem.title = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"title\")\n    );\n    jsonitem.description = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"description\")\n    );\n    jsonitem.pubdate = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"pubDate\")\n    );\n    jsonitem.link = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"link\")\n    );\n    // [0].childNodes[0].nodeValue;\n    return jsonitem;\n  };\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      // throw Error(response.statusText);\n      console.log(\"response\");\n      console.log(response);\n      console.log(response.status);\n      throw Error(response.status);\n    }\n    return response;\n  };\n\n  showOneChannel = (event) => {\n    event.preventDefault();\n    //\tconsole.log(\"showOneChannel\");\n    let value = event.target.checked;\n    let bValue = value; // this.showOneChannelRef.current.;\n\n    if (bValue)\n      this.setState({\n        showChannelsAtSameTime: 1,\n        bCheckShowChannelsAtSameTime: true,\n        bSearchButtonClicked: false,\n      });\n    else\n      this.setState({\n        showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n        selectedchannelindex: -1,\n        bCheckShowChannelsAtSameTime: false,\n        /* bSearchButtonClicked: false */\n      });\n  };\n\n  showAllDescriptions = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showAllDescriptions\");\n    let bValue = value; // this.state.bDisplayAllDescriptions;\n    if (Config.bDebug) console.log(\"bValue\");\n    if (Config.bDebug) console.log(bValue);\n    /*\n\t\tif (value === 'on')\n\t\t\tbValue = true;\n\t\tconsole.log(value);\n\t\t*/\n    this.setState({\n      bDisplayAllDescriptions: bValue,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  getPOfIndex = (index, txt, themevalue) => {\n    if (Config.bDebug) {\n      console.log(\"getPOfIndex\");\n    }\n    let textSearch = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"textSearch\");\n      console.log(textSearch);\n    }\n    if (txt == undefined || txt == null) return \"\";\n    if (Config.bDebug) {\n      console.log(\"txt\");\n      console.log(txt);\n      console.log(\"index\");\n      console.log(index);\n    }\n    let txtlen = txt.length;\n    if (index == undefined || index == null || index < 0 || txtlen <= index)\n      return txt;\n    if (\n      textSearch == undefined ||\n      textSearch == null ||\n      textSearch.toString().trim().length == 0\n    )\n      return txt;\n\n    let first = txt.substring(0, index);\n    let between = txt.substring(index, index + textSearch.length);\n    let last = txt.substring(index + textSearch.length);\n\n    if (Config.bDebug) {\n      console.log(\"first\");\n      console.log(first);\n      console.log(\"between\");\n      console.log(between);\n      console.log(\"last\");\n      console.log(last);\n    }\n\n    let newvalue_first =\n      first != undefined && first != null && first.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {first}\n        </span>\n      ) : (\n        \"\"\n      );\n    let foundedthtml =\n      \"background-color: green; color: white; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    if (themevalue === \"--dark\")\n      foundedthtml =\n        \"background-color: yellow; color: black; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    let newvalue_between = <span style={foundedthtml}>{between}</span>;\n    let newvalue_last =\n      last != undefined && last != null && last.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {last}\n        </span>\n      ) : (\n        \"\"\n      );\n    let newvalue = (\n      <div>\n        {newvalue_first}\n        {newvalue_between}\n        {newvalue_last}\n      </div>\n    );\n    if (Config.bDebug) {\n      console.log(\"newvalue_first\");\n      console.log(newvalue_first);\n      console.log(\"newvalue_between\");\n      console.log(newvalue_between);\n      console.log(\"newvalue_last\");\n      console.log(newvalue_last);\n    }\n    if (Config.bDebug) {\n      console.log(\"newvalue\");\n      console.log(newvalue);\n    }\n    return newvalue;\n  };\n\n  getTableHeadersAndTableRowsAfterChannels = () => {\n    let headers = null;\n    let channels = null;\n    if (Config.bDebug) {\n      console.log(\"getTableHeadersAndTableRowsAfterChannels\");\n      console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n      console.log(this.state.bCheckShowChannelsAtSameTime);\n      console.log(\"this.state.selectedchannelindex\");\n      console.log(this.state.selectedchannelindex);\n      console.log(this.state);\n    }\n\n    let bAllChannels = false;\n    if (this.state.bSearchButtonClicked) {\n      if (this.state.channels == null) {\n        headers = [];\n        channels = [];\n        let ret = {};\n        ret.headers = headers;\n        ret.channels = channels;\n        return ret;\n      }\n      const searchText = this.state.textSearch;\n      if (searchText != null && searchText.toString().trim().length > 0) {\n        let foundedChannelsTitle = null;\n        let index = -1;\n        let foundedChannels = [];\n        let foundedPrograms = [];\n        let founded = false;\n        let progfounded = false;\n        let uppersearchText = searchText.toUpperCase();\n        let chcoopy = {};\n\n        let search_channels = this.state.channels;\n        console.log(\"before filter search\");\n        console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n        console.log(this.state.bCheckShowChannelsAtSameTime);\n        console.log(\"this.state.selectedchannelindex\");\n        console.log(this.state.selectedchannelindex);\n\n        if (\n          this.state.bCheckShowChannelsAtSameTime &&\n          this.state.selectedchannelindex != -1\n        ) {\n          console.log(\"filter search bCheckShowChannelsAtSameTime\");\n          let selectedTitle =\n            search_channels[this.state.selectedchannelindex].title;\n          let filteredchannels = search_channels.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.title === selectedTitle;\n          });\n          search_channels = filteredchannels;\n        }\n\n        Array.from(search_channels).forEach((cha) => {\n          chcoopy = {};\n          index = -1;\n          founded = false;\n          if (cha === undefined) return;\n          // this.state.channels.forEach(cha, i => {\n          Object.assign(chcoopy, cha);\n          if (Config.bDebug) {\n            console.log(\"chcoopy\");\n            console.log(chcoopy);\n            console.log(\"chcoopy.channelprograms\");\n            console.log(chcoopy.channelprograms);\n          }\n\n          if (chcoopy.title)\n            chcoopy.title = chcoopy.title.toString().replace(\"Telkussa: \", \"\");\n          index = chcoopy.title\n            ? chcoopy.title.toUpperCase().indexOf(uppersearchText)\n            : -1;\n          if (index != -1) {\n            chcoopy.titleindex = index;\n            founded = true;\n          }\n          foundedPrograms = [];\n\n          Array.from(chcoopy.channelprograms).forEach((pr) => {\n            // cha.channelprograms.forEach(pr, i => {\n            progfounded = false;\n            if (pr === undefined) return;\n            index = pr.title\n              ? pr.title.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.titleindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            index = pr.description\n              ? pr.description.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.descriptionindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            if (progfounded) foundedPrograms.push(pr);\n          });\n\n          if (founded) {\n            if (foundedPrograms != null && foundedPrograms.length != 0)\n              chcoopy.channelprograms = foundedPrograms;\n            else chcoopy.channelprograms = cha.channelprograms;\n            foundedChannels.push(chcoopy);\n          }\n        });\n\n        if (foundedChannels == null && foundedChannels.length == 0) {\n          headers = [];\n          channels = [];\n        } else {\n          headers = foundedChannels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = foundedChannels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={\"telkkuchannel\" + i}\n                data={jsonchannel}\n                showSearch={true}\n                getPOfIndex={this.getPOfIndex}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      } else {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      }\n    } else if (\n      this.state.bCheckShowChannelsAtSameTime &&\n      this.state.selectedchannelindex != -1\n    ) {\n      console.log(\"filter\");\n      let selectedTitle =\n        this.state.channels[this.state.selectedchannelindex].title;\n      let filteredchannels = this.state.channels.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.title === selectedTitle;\n      });\n      //\t\t\t\tconsole.log(\"filteredchannels\");\n      //\t\t\t\tconsole.log(filteredchannels);\n      headers = filteredchannels.map((jsonchannel, i) => {\n        return jsonchannel.title.replace(\"Telkussa: \", \"\");\n      });\n      channels = filteredchannels.map((jsonchannel, i) => {\n        return (\n          <RssTelkkuChannel\n            id={i}\n            data={jsonchannel}\n            themevalue={this.props.themevalue}\n            displayAllDescriptions={this.state.bDisplayAllDescriptions}\n          />\n        );\n      });\n    } else {\n      if (\n        this.state.showChannelsAtSameTime == this.state.channels.length ||\n        this.state.showChannelsAtSameTime > this.state.channels.length\n      ) {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      } else {\n        let bAllChannels = false;\n        if (this.state.showChannelsAtSameTime < this.state.channels.length) {\n          let min = Math.floor(\n            this.state.currentChannelSetIndex *\n              this.state.showChannelsAtSameTime\n          );\n          let max =\n            this.state.currentChannelSetIndex == 0\n              ? this.state.showChannelsAtSameTime\n              : Math.floor(\n                  this.state.currentChannelSetIndex *\n                    this.state.showChannelsAtSameTime +\n                    this.state.showChannelsAtSameTime\n                );\n          if (Config.bDebug) {\n            console.log(\"min\");\n            console.log(min);\n            console.log(\"max\");\n            console.log(max);\n          }\n          if (min < 0) min = 0;\n          else if (min > this.state.channels.length) {\n            min = this.state.channels.length;\n            bAllChannels = true;\n          }\n\n          if (max > this.state.channels.length)\n            max = this.state.channels.length;\n\n          if (!bAllChannels) {\n            let i;\n            let newChannelSet = [];\n            for (i = min; i < max; i++) {\n              newChannelSet.push(this.state.channels[i]);\n            }\n\n            headers = newChannelSet.map((jsonchannel, i) => {\n              return jsonchannel.title.replace(\"Telkussa: \", \"\");\n            });\n            channels = newChannelSet.map((jsonchannel, i) => {\n              return (\n                <RssTelkkuChannel\n                  id={i}\n                  data={jsonchannel}\n                  themevalue={this.props.themevalue}\n                  displayAllDescriptions={this.state.bDisplayAllDescriptions}\n                />\n              );\n            });\n          }\n        } else {\n          bAllChannels = true;\n        }\n\n        /*\n\t\t\t\tlet divided = this.state.channels.size() % this.state.showChannelsAtSameTime:\t\t\t\t\t\t\n\t\t\t\tif (Config.bDebug)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"divided\");\n\t\t\t\t\tconsole.log(divided);\n\t\t\t\t}\n\t\t\t\t*/\n        if (bAllChannels) {\n          headers = this.state.channels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = this.state.channels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={i}\n                data={jsonchannel}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      }\n    }\n\n    let ret = {};\n    ret.headers = headers;\n    ret.channels = channels;\n    return ret;\n  };\n\n  textFieldChannelsAtSameTimeChanged = (event) => {\n    event.preventDefault();\n    let value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldChannelsAtSameTimeChanged\");\n      console.log(value);\n    }\n    let validNumber = parseInt(value);\n    if (Config.bDebug) {\n      console.log(\"validNumber\");\n      console.log(validNumber);\n    }\n    if (validNumber == NaN || validNumber == undefined) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    } else if (parseInt(validNumber) < 1) {\n      event.target.value = 1;\n      return;\n    } else if (parseInt(validNumber) > this.const_showChannelsAtSameTime) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    }\n    this.setState({\n      showChannelsAtSameTime: validNumber,\n      currentChannelSetIndex: 0,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  calculateMaxChannelSetIndex = () => {\n    if (Config.bDebug) {\n      console.log(\"calculateMaxChannelSetIndex\");\n      /*\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\t*/\n    }\n    if (this.state.channels == null) return 0;\n    const channelssize = this.state.channels.length;\n    if (channelssize === 0) return 0;\n    if (this.state.bCheckShowChannelsAtSameTime) return 0;\n    if (this.state.showChannelsAtSameTime >= this.state.channels.length)\n      return 0;\n    const channelSets =\n      this.state.channels.length / this.state.showChannelsAtSameTime;\n    if (Config.bDebug) {\n      console.log(\"channelSets\");\n      console.log(channelSets);\n    }\n    if (channelSets == 0) return 0;\n    return channelSets - 1;\n  };\n\n  nextChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (\n      this.state.currentChannelSetIndex > this.calculateMaxChannelSetIndex()\n    ) {\n      this.setState({\n        currentChannelSetIndex: this.calculateMaxChannelSetIndex(),\n        bSearchButtonClicked: false,\n      });\n      return;\n    } else if (\n      this.state.currentChannelSetIndex === this.calculateMaxChannelSetIndex()\n    ) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex + 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  prevChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (this.state.currentChannelSetIndex < 0) {\n      this.setState({\n        currentChannelSetIndex: 0,\n        /* bSearchButtonClicked: false */\n      });\n      return;\n    }\n    if (this.state.currentChannelSetIndex === 0) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex - 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  loadMoreChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null || this.state.channels.length == 0\n        ? 1\n        : this.state.channels.length + 1,\n      this.state.channels == null || this.state.channels.length == 0\n        ? 10\n        : this.state.channels.length + 10\n    );\n  };\n\n  loadAllChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null ? 1 : this.state.channels.length + 1,\n      -1\n    );\n  };\n\n  searchTextFromChannelsClicked = () => {\n    event.preventDefault();\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked\");\n    }\n    const searchText = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"searchText 2 \");\n      console.log(searchText);\n    }\n    if (\n      searchText == undefined ||\n      searchText == null ||\n      searchText.trim().length == 0\n    )\n      return;\n    // to start make indirect the search:\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked 2 \");\n    }\n    let value = this.showAllDescrRef.current.checked;\n    if (!value) this.showAllDescrRef.current.checked = true;\n    this.setState({\n      bSearchButtonClicked: true,\n      bDisplayAllDescriptions: true,\n    });\n    this.forceUpdate();\n  };\n\n  textFieldSearchChanged = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldSearchChanged\");\n      console.log(value);\n    }\n    this.setState({ textSearch: value, bSearchButtonClicked: false });\n  };\n\n  abortFetchClicked = (event) => {\n    event.preventDefault();\n    if (!this.state.bUnderFetch) return;\n    if (Config.bDebug) console.log(\"abortFetchClicked.abort()\");\n    if (!this.abortSignal.aborted) {\n      this.abortController.abort();\n      this.setState({ bUnderFetch: false });\n    }\n  };\n\n  getFetchedDate = () => {\n    const today = this.state.today;\n    if (today == null || today == undefined) return \"\";\n\n    let days = today.getDate();\n    let month = today.getMonth() + 1;\n    let year = today.getFullYear();\n    if (days < 10) days = \"0\" + days;\n    if (month < 10) month = \"0\" + month;\n    const ret = \"\" + days + \".\" + month + \".\" + year;\n    return ret;\n  };\n\n  getFetchDateValue = () => {\n    const today = this.state.today;\n    if (today == null || today == undefined) return \"\";\n\n    let days = today.getDate();\n    let month = today.getMonth() + 1;\n    let year = today.getFullYear();\n    if (days < 10) days = \"0\" + days;\n    if (month < 10) month = \"0\" + month;\n    const ret = \"/\" +year +month + days;\n    return ret;\n  };\n\n  showTableBorders = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showTableBorders\");\n    let bValue = value;\n    if (Config.bDebug) {\n      console.log(\"bValue\");\n      console.log(bValue);\n    }\n    this.setState({ bShowTableBorder: bValue });\n  };\n\n  onClickDisplayDialog = (event) => {\n    // this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n  };\n\n  getNextColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd !== undefined && currentColInd !== null) {\n      if (cols[currentColInd + 1]) ret = cols[currentColInd + 1];\n    }\n    return ret;\n  };\n\n  getPrevColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd) {\n      if (cols[currentColInd - 1]) ret = cols[currentColInd - 1];\n    }\n    return ret;\n  };\n\n  getCurrentColumnIndex = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        ret = parseInt(strNum);\n        break;\n      }\n    }\n    return ret;\n  };\n\n  getH3OfCurrentColumn = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        let ind2 = parseInt(strNum);\n        ret = value.childNodes[0];\n        if (ret) {\n          let ret2 = ret.childNodes[0];\n          if (ret2) ret = ret2;\n        }\n        break;\n      }\n    }\n    return ret;\n  };\n\n  speakScreenReader(text)\n  {\n    document.getElementById(\"screenreaderdiv\").innerHTML = text;\n    this.setState({screenreaderdiv: text })\n  }\n\n  altPlusKeyUp = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n    if (Config.bDebug) console.log(\"pressed\");\n    if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      let row = this.tablCntl.current.rows[1];\n      const cols = row.cells;\n      const currColInd = row.colIndex;\n      const lenCols = cols.length;\n      const currentCol = row.closest(\"td\");\n\n      if (Config.bDebug) {\n        console.log(\"--- row\");\n        console.log(row);\n        console.log(\"--- cols\");\n        console.log(cols);\n        console.log(\"--- lenCols\");\n        console.log(lenCols);\n        console.log(\"--- currColInd\");\n        console.log(currColInd);\n        console.log(\"--- currentCol\");\n        console.log(currentCol);\n\n        console.log(\"--- this.tablCntl.current\");\n        console.log(this.tablCntl.current);\n      }\n      let currentColInd = null;\n      let path = null;\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"r\":\n          case \"R\":\n            e.preventDefault();\n            path = document.activeElement;\n            if (path && path.innerHTML) {\n              this.speakScreenReader(path.innerHTML.toString());\n            }\n            break;\n\n        case \"c\":\n        case \"C\":\n          e.preventDefault();\n            path = e.composedPath();\n          //... handle alt+o\n          divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            const channelTextHtml = divInsideOfCol.innerHTML;\n            const channelText = channelTextHtml.toString();\n            if (channelText)\n              this.speakScreenReader(channelText);\n          }\n          break;\n        \n        case \"o\":\n        case \"O\":\n          e.preventDefault();\n          //... handle alt+o\n          path = e.composedPath();\n          let divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            divInsideOfCol.focus();\n          }\n          break;\n\n        case \"k\":\n        case \"K\":\n          e.preventDefault();\n          //... handle alt+k\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd > 0) {\n            const prevcol = this.getPrevColumn(cols, currentColInd);\n            if (prevcol) {\n              prevcol.focus();\n            }\n          }\n          break;\n\n        case \"a\":\n        case \"A\":\n          //... handle alt+s\n          e.preventDefault();\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd < lenCols - 1) {\n            const nextcol = this.getNextColumn(cols, currentColInd);\n            // document.getElementById(\"tablecol\" +(currentColInd+1)).focus();\n            if (nextcol) {\n              if (Config.bDebug) {\n                console.log(\"nextcol\");\n                console.log(nextcol);\n              }\n              nextcol.focus();\n              // document.getElementById(\"tablecol\" +currentColInd).focus();\n            }\n          }\n          break;\n      }\n    }\n  };\n\n  altPlusKeyUpProgramHeader = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n\n    console.log(\"pressed\");\n  if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"m\":\n        case \"M\":\n            //... handle alt+t\n          if (document.getElementById(\"idprogramtableh3\")) {\n            let divh3 = document.getElementById(\"idprogramtableh3\");\n            if (divh3) divh3.focus();\n          }\n          break;\n          case \"n\":\n            case \"N\":  \n                //... handle alt+t\n                if (document.getElementById(\"divControl\")) {\n                  let divh3 = document.getElementById(\"divControl\");\n                  if (divh3) divh3.focus();\n                }\n                break;\n          case \"j\":\n            case \"J\":\n                 this.nextChannelSetClicked(e);            \n         //         if (document.getElementById(\"button_next_channel_page\")) {\n    //              let buttonNext = document.getElementById(\"button_next_channel_page\");\n    //              if (buttonNext) buttonNext.click();\n        //        }\n              break;\n            case \"g\":\n            case \"G\":\n                  this.prevChannelSetClicked(e);\n             //  if (document.getElementById(\"button_prev_channel_page\")) {\n    //              let buttonPrev = document.getElementById(\"button_prev_channel_page\");\n    //              if (buttonPrev) buttonPrev.click();\n           //    }\n               break;\n          default:\n            return this.altPlusKeyUp(e); \n            break;  \n      }\n    }\n  };\n\n  buttonHidePressed = (e) => {\n    let bValue = !this.state.hideButton;\n    var x = document.getElementById(\"hideDiv\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n    this.setState({ hideButton: bValue, hideButtonText: bValue ? \"Näytä ohje\" : \"Piilota ohje\" });\n  }\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    let sectionwidth = \"\";\n    if (state.fetcheditems != null && state.fetcheditems.length > 0) {\n      sectionwidth = this.getSectionWidthCss();\n      this.section_width_css = sectionwidth;\n    }\n\n    let divDialogStyle =\n      props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n        : \"\";\n    const inputw =\n      \"float: none; display: inline-block; vertical-align: middle; \";\n    const buttoninputw =\n      \"float: none; display: inline-block; vertical-align: middle; \" +\n      (props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"\"\n        : \" color: white; \");\n\n    if (Config.bDebug) {\n      console.log(\"divDialogStyle\");\n      console.log(divDialogStyle);\n    }\n\n    let tableBorderStyle = \"\";\n    let table_border_color = \"black\";\n    if (state.bShowTableBorder) {\n      if (props.themevalue === \"--dark\") table_border_color = \"white\";\n      tableBorderStyle = \" border: 1px solid \" + table_border_color + \";\";\n    }\n\n    let channels = null;\n    let tableheaders = null;\n    let selectchannels = null;\n    let tabletds = null;\n    let headers = null;\n    if (state.channels !== null) {\n      // selected={child.title.fi===state.selectedcategory.title.fi}\n      /*\n\t\t\t\t\t\t\treturn <Select.Item id={i} \t\t\t\t\n\t\t\t\t>{child.title}</Select.Item>\n\t\t\t\t});\n\t\t\t\t*/\n      selectchannels = state.channels.map((child, i) => {\n        return (\n          <option\n            value={child.title}\n            id={i}\n            selected={i === this.state.selectedchannelindex}\n          >\n            {child.title}\n          </option>\n        );\n      });\n      let tableheaders_and_rows =\n        this.getTableHeadersAndTableRowsAfterChannels();\n      headers = tableheaders_and_rows.headers;\n      /*\n\t\t\tif (headers != null)\n\t\t\t\ttableheaders = headers.map((child, i) => {\n\t\t\t\t\treturn <th lang=\"fi\" tabIndex=\"0\" style={'vertical-align: top; padding-left: 5px; padding-right: 5px;' +tableBorderStyle}>{child}</th> \t\t\t\t\n\t\t\t\t});\n\t\t\t\t*/\n      channels = tableheaders_and_rows.channels;\n      tabletds = channels;\n      if (channels != null)\n        tabletds = channels.map((child, i) => {\n          return (\n            <td\n              id={\"telkkutablecol\" + i}\n              lang=\"fi\"\n              tabIndex=\"0\"\n              style={\n                \"vertical-align: top; padding-left: 5px; padding-right: 5px; \" +\n                tableBorderStyle\n              }\n            >\n              {child}\n            </td>\n          );\n        });\n    }\n\n    return (\n      <Fragment>\n        <div id=\"telkku_main_div\" style={divDialogStyle}\n        onKeyUp={this.altPlusKeyUpProgramHeader}>\n          <div\n            class={style.cardHeader}            \n          >\n            <h1 tabIndex=\"0\" lang=\"fi\" id=\"focus_1_element\">\n              Telkku {this.getFetchedDate()}\n            </h1>\n\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              <div class={style.cardBody}>\n                <div\n                  lang=\"fi\"\n                  tabIndex=\"0\"\n                  aria-labelled=\"Miten ohjelmatiedot näytetään\"\n                >\n                  <div style={{ \"background-color\": \"red\", color: \"yellow\" }} tabIndex=\"0\">\n                    {state.errmsg}\n                  </div>\n                  <div class=\" mdc-typography--caption\" tabIndex=\"0\" id=\"divControl\">\n                    Miten ohjelmatiedot näytetään:\n                  </div>\n                </div>\n                <div class={style.cardBody}>\n                  <div>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.prevChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Aikaisemmat kanavat\"\n                        text=\"&lt;\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <space> </space>\n\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.nextChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Seuraavat kanavat\"\n                        text=\"&gt;\"\n                      ></Button>\n                    </span>\n\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showAllDescriptions}\n                        propref={this.showAllDescrRef}\n                        inputid=\"checkshowdescribtions\"\n                        style={inputw}\n                        labeltext=\"Näytä selitykset\"\n                        checked={state.bDisplayAllDescriptions}\n                      />\n                    </span>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showOneChannel}\n                        propref={this.showOneChannelRef}\n                        inputid=\"checkshowonechannel\"\n                        style={inputw}\n                        labeltext=\"Näytä yksi kanava:\"\n                        checked={state.bCheckShowChannelsAtSameTime}\n                      />\n\n                      <select\n                        tabIndex=\"0\"\n                        selectedIndex={this.state.selectedchannelindex}\n                        disabled={state.showChannelsAtSameTime !== 1}\n                        preselected\n                        outlined\n                        style={inputw}\n                        ref={this.selectChannelRef}\n                        onChange={(e) => {\n                          this.setState({\n                            selectedchannelindex: e.target.selectedIndex,\n                            bSearchButtonClicked: false,\n                          });\n                        }}\n                      >\n                        {selectchannels}\n                      </select>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <label for=\"input_number_columss\" style={inputw}>\n                        Näytettävien kanavien lkm:{\" \"}\n                      </label>\n                      <input\n                        id=\"input_number_columss\"\n                        name=\"input_number_columns\"\n                        style={inputw}\n                        disabled={this.state.bCheckShowChannelsAtSameTime}\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={\n                          this.state.showChannelsAtSameTime === -1\n                            ? \"\"\n                            : this.state.showChannelsAtSameTime\n                        }\n                        onKeyUp={this.textFieldChannelsAtSameTimeChanged}\n                      />\n                    </span>\n                    <span>\n                      <label for=\"idsearchvalue\">\n                        Etsi tekstiä ohjelmista:\n                      </label>\n                      <input\n                        id=\"idsearchvalue\"\n                        type=\"text\"\n                        tabIndex=\"0\"\n                        outlined\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onKeyUp={this.textFieldSearchChanged}\n                        style={\" width: 30%;\"}\n                      />\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        style={inputw}\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onClick={this.searchTextFromChannelsClicked}\n                        style={buttoninputw}\n                        aria-label=\"Hae\"\n                        text=\"Hae\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadMoreChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa +10 kanavaa\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadAllChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa kaikki kanavat\"\n                      ></Button>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showTableBorders}\n                        style={inputw}\n                        propref={this.showTableBordersRef}\n                        inputid=\"checkTableBorders\"\n                        labeltext=\"Näytä taulun raamit\"\n                        checked={state.bShowTableBorder}\n                      />\n                    </span>\n                    <space> </space>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={!state.bUnderFetch}\n                        style={buttoninputw}\n                        onClick={this.abortFetchClicked}\n                        text=\"Keskeytä lataus\"\n                      ></Button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <br />\n            <br />\n            <section\n              style={this.state.themevalue === \"\" ? \"\" : this.tablesectionStyle}\n            >\n              <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n                {state.errmsg}\n              </div>\n              <div class=\" mdc-typography--caption\">\n                <h3 id=\"idprogramtableh3\" tabIndex=\"0\">\n                Ohjelmataulukko&emsp;\n                    <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    style={buttoninputw}\n                    text={state.hideButtonText}\n                    id=\"buttonHide\"\n                    onClick={this.buttonHidePressed}\n                    aria-label=\"Näytä/Piilota teksi\"\n                  ></Button>\n\n                </h3>\n                <div class={style.cardHeader} id=\"hideDiv\">\n                  <h3 lang=\"fi\" tabIndex=\"0\">\n                    -- Ohjelmataulukko, liikutaan hiirellä tai taulukon sisällä\n                    seuraavilla näppäimillä: alt+a = seuraava kanava, alt+k =\n                    edellinen kanava sekä alt+o = liikutaan kanavan otsakkeeseen.\n                    Myös ensimmäisen kerran/sama kanava on mahdollista\n                    painaa alt+c:ää, jolloin ruudunlukuohjelma sanoo kanavan nimen, mutta \n                    selauskohta ei muutu. Samoin atl+r:lla toistetaan \n                    kerran/ohjelmatieto sen teksti. Ohjelman kuvailun saa näkymään tab \n                    näppäimellä ja enterillä tai hiirenklikkauksella. \n                    Taulukon sisällä toimivat myös tab sekä shift-tab \n                    näppäimet. Taulukon yläpuolelle tekstin \"Ohjelmataulukko\" \n                    kohdalle pääsee komennolla alt+a. Myös seuraavat \n                      näppäimet toimivat, kun kanavia enemmän kuin taulukossa näytetään: \n                      edelliset kanavat: alt+g ja seuraavat kanavat: alt+j. Alt+n vie suoraan\n                      miten taulukon ohjelmatiedot näytetään yläpuolelle.\n                  </h3>\n                </div>\n                {state.bSearchButtonClicked && state.textSearch != null\n                  ? \" (haun tulokset)\"\n                  : \"\"}\n              </div>\n              <table id=\"programtable\" style=\"width:100%\" ref={this.tablCntl}>\n                <tbody>\n                  <tr>{tableheaders}</tr>\n                  <tr>{tabletds}</tr>\n                </tbody>\n              </table>\n            </section>\n          </div>\n          <Dialog\n            role=\"dialog\"\n            id=\"dialogloading\"\n            aria-labelledby=\"h1loading\"\n            aria-modal=\"false\"\n            lang=\"fi\"\n            ref={this.scrollingDlgRef}\n            title=\"Odota!\"\n            themevalue={props.themevalue}\n            okButtonPressed={this.onClickDisplayDialog}\n            okText=\"Sulje\"\n            scrollable={true}\n          >\n            <div style={divDialogStyle}>\n              <div class=\"card-header\">\n                <h3\n                  lang=\"fi\"\n                  id=\"h1loading\"\n                  default\n                  tabIndex=\"0\"\n                  class=\" mdc-typography--title\"\n                >\n                  Hetkinen tietoja haetaan par'aikaa...\n                </h3>\n              </div>\n            </div>\n          </Dialog>\n          <div id=\"screenreaderdiv\" tabindex=\"0\" aria-live=\"priority || polite\"\n               class=\"visually-hidden\" aria-label={this.state.screenreaderdiv} />\n       \n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/*\n\n\t\t\t\t<Dialog role=\"dialog\" id=\"dialogloading\" aria-labelledby=\"h1loading\"\n     \t\t\t aria-modal=\"false\"\n\t\t\t\tref={this.scrollingDlgRef}>\n\t\t\t\t <Dialog.Header lang=\"fi\" tabIndex=\"0\" >Odota!</Dialog.Header>\n\t\t\t\t <Dialog.Body scrollable={false}>\n\t\t\t\t   <div class=\"card-header\">\n\t\t\t\t\t  <h3 lang=\"fi\" id=\"h1loading\" default tabIndex=\"0\" class=\" mdc-typography--title\">\n\t\t\t\t\t  Hetkinen tietoja haetaan par'aikaa...\n\t\t\t\t\t  </h3>\n\t\t\t\t\t  </div>\n\t\t\t\t </Dialog.Body>\n\t\t\t\t <Dialog.Footer>\n\t\t\t\t\t <Dialog.FooterButton lang=\"fi\" tabIndex=\"0\" role=\"button\" \n\t\t\t\t\t onCancel={this.onClickDisplayDialog} cancel={true} >Sulje</Dialog.FooterButton>\n\t\t\t\t </Dialog.Footer>\n\t\t\t </Dialog>\n\n\n\t\t\t\t\t<Chips>\n\t\t\t\t\t\t<Chips.Chip style={(state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length \n\t\t\t\t\t\t    ? 'display: none' :'' }>\n\t\t\t\t\t\t\t<Chips.Text>&lt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t\t<Chips.Chip disabled={state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length }>\n\t\t\t\t\t\t\t<Chips.Text>&gt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t</Chips>\n\n<LayoutGrid>\n\t\t\t\t\t\t\t<LayoutGrid.Inner>\n\t\t\t\t\t\t\t\t{channels}\n\t\t\t\t\t\t\t</LayoutGrid.Inner>\n        \t\t\t\t</LayoutGrid>\n\t\t\t\t\t\t*/\n","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import 'preact-material-components/Button/style.css';\n\nimport Config from \"../../utils/Config\";\nimport style from \"./style\";\n// import Category from './Category';\n// import GridOrList from './GridOrList';\nimport Telkku from \"../../components/telkku/Telkku\";\n\n// import StaticFunctions from '../../utils/StaticFunctions';\n\nexport default class TelkkuRoute extends Component {\n  control = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"YleRoute.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.state = {\n      errmsg: null,\n    };\n    this.control = createRef();\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    // this.fetchProgCategories();\n  }\n\n  removelisteners = () => {\n    this.control.removelisteners();\n  };\n\n  /*\n\t\t'Origin': 'localhost:8080',\n\t\t\t'User-Agent': 'curl/7.55.1',\n\t\t\t'Host': 'external.api.yle.fi',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'Access-Control-Allow-Credentials': true,\n\t\t\t'Cross-Origin-Resource-Policy': 'cross-origin',\n\t\t\t'Access-Control-Allow-Methods': 'GET,OPTIONS',\n\t\t\t'Access-Control-Allow-Headers': 'Content-Type'\n*/\n\n  render(props, state) {\n    return (\n      <div class={`${style.home} page`}>\n        <Telkku\n          store={props.store}\n          ref={this.control}\n          themevalue={props.themevalue}\n        />\n        <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n          {state.errmsg}\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n\t\t\t\t\t\t<FormField>\n\t\t\t\t\t\t\t<Radio id=\"radio_yle\" name='optsource' \n\t\t\t\t\t\t\t    checked={state.progsource == 'radio_yle'}\n\t\t\t\t\t\t\t\tonChange={this.radioProgSourceChanged} ></Radio>\n\t\t\t\t\t\t\t<label for=\"radio_yle\">Yle</label>\n\t\t\t\t\t\t</FormField>\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__wog+i\",\"cardHeader\":\"cardHeader__dyMRZ\",\"cardBody\":\"cardBody__M1xly\"};"],"sourceRoot":""}