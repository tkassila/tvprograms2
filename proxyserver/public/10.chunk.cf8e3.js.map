{"version":3,"sources":["webpack:///./components/telkku/style.css","webpack:///./routes/telkku/style.css","webpack:///./components/telkku/RssTelkkuChannel.js","webpack:///./components/telkku/Telkku.js","webpack:///./routes/telkku/TelkkuRoute.js"],"names":["RssTelkkuChannel","props","displayitems","data","channelprograms","map","program","i","ShowProgram","id","displayAllDescriptions","getPOfIndex","themevalue","showSearch","undefined","channel","title","tabIndex","lang","titleindex","this","toString","replace","Telkku","section_width","init_pagenumber","init_max","_mounted","Config","bDebug","console","log","state","bAllChannelsLoaded","bUnderFetch","setState","channelnumber","max","fetcheddata","fetcheditems","channels","length","scrollingDlgRef","current","open","fetchRssTelkkuChannel","push","error","message","errmsg","close","bLoadAllChannels","bLoad10Channels","channelurl","fetch_url_telkku","fetched","fetch","method","timeout","headers","Accept","mode","signal","abortSignal","then","handleErrors","response","text","indexOf","getJsonDataFromTelkkuRssXml","catch","TelkkuException","xmlDoc","window","DOMParser","parseFromString","channeltitle","getElementsByTagName","childNodes","nodeValue","json","xmlitems","querySelectorAll","forEach","item","getChannelProgramFromXml","NaN","item1","childNode1","nodeValue1","jsonitem","getChannelProgramXmlValue","description","pubdate","link","ok","status","Error","event","preventDefault","target","checked","showChannelsAtSameTime","bCheckShowChannelsAtSameTime","bSearchButtonClicked","const_showChannelsAtSameTime","selectedchannelindex","value","bValue","bDisplayAllDescriptions","index","txt","textSearch","trim","first","substring","between","last","newvalue_first","style","foundedthtml","newvalue_between","newvalue_last","newvalue","ret","searchText","foundedChannels","foundedPrograms","founded","progfounded","uppersearchText","toUpperCase","chcoopy","search_channels","selectedTitle","filteredchannels","filter","s","Array","from","cha","pr","descriptionindex","jsonchannel","bAllChannels","min","Math","floor","currentChannelSetIndex","newChannelSet","validNumber","parseInt","channelSets","calculateMaxChannelSetIndex","bAllChannelsHasLoaded","fetchRssTelkkuPrograms","showAllDescrRef","forceUpdate","aborted","abortController","abort","today","days","getDate","month","getMonth","getFullYear","bShowTableBorder","cols","currentColInd","path","str","search","includes","ind","strNum","ret2","e","keyCode","which","altKey","row","tablCntl","rows","cells","currColInd","colIndex","lenCols","currentCol","closest","key","document","activeElement","innerHTML","speakScreenReader","composedPath","divInsideOfCol","getH3OfCurrentColumn","channelText","focus","getCurrentColumnIndex","prevcol","getPrevColumn","nextcol","getNextColumn","getElementById","divh3","nextChannelSetClicked","prevChannelSetClicked","altPlusKeyUp","hideButton","x","display","hideButtonText","store","now","Date","currentchannel","sectionStyle","section_width_css","tablesectionStyle","http_curlserver","bind","removelisteners","createRef","showOneChannelRef","selectChannelRef","showTableBordersRef","sectionRef","nextProps","sectionwidth","AbortController","offsetWidth","name","screenreaderdiv","getSectionWidthCss","divDialogStyle","inputw","buttoninputw","tableBorderStyle","table_border_color","selectchannels","tabletds","child","selected","tableheaders_and_rows","getTableHeadersAndTableRowsAfterChannels","onKeyUp","altPlusKeyUpProgramHeader","class","cardHeader","getFetchedDate","ref","cardBody","color","Button","ripple","raised","disabled","onClick","onChange","showAllDescriptions","propref","inputid","labeltext","showOneChannel","selectedIndex","preselected","outlined","for","type","textFieldChannelsAtSameTimeChanged","textFieldSearchChanged","searchTextFromChannelsClicked","loadMoreChannelClicked","loadAllChannelClicked","showTableBorders","abortFetchClicked","buttonHidePressed","role","okButtonPressed","onClickDisplayDialog","okText","scrollable","default","tabindex","Component","TelkkuRoute","control"],"mappings":"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","file":"10.chunk.cf8e3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__wog+i\",\"cardHeader\":\"cardHeader__dyMRZ\",\"cardBody\":\"cardBody__M1xly\"};","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__PEN99\",\"cardHeader\":\"cardHeader__mqzim\",\"cardBody\":\"cardBody__Yn9DS\"};","    \nimport {h } from 'preact';\nimport Config from '../../utils/Config';\nimport ShowProgram from './ShowProgram';\n\n/**\n * This Address function is showing a programgrid or -list.\n */\n// class Address extends Component \nfunction RssTelkkuChannel(props)\n{\n       // const cssDark = useContext(CssDark);\n        let displayitems = null;\n        /*\n        \tjsonitem.title = item.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.description = item.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.pubdate = item.getElementsByTagName(\"pubDate\")[0].childNodes[0].nodeValue;\n\t\tjsonitem.link =\n        */\n        if (props.data.channelprograms !== null)\n            displayitems = props.data.channelprograms.map((program, i) => {\n\t\t\t\treturn <ShowProgram id={'telkkuchannel' +i} data={program}\n                    displayAllDescriptions={props.displayAllDescriptions}\n                    getPOfIndex={props.getPOfIndex}\n                    themevalue={props.themevalue}\n                    showSearch={props.showSearch == undefined ? false : props.showSearch}\n                    channel={props.data.title} />;\n\t\t\t});\n\n        return (\n            <div>\n            <h3 tabIndex=\"0\" lang=\"fi\" aria-label={props.data.title}>\n                {props.showSearch && props.data.titleindex != undefined\n                        ? props.getPOfIndex(props.data.titleindex, props.data.title,\n                            this.props.themevalue) : props.data.title.toString().replace(\"Telkussa: \", \"\")}</h3>\n            <div>{displayitems}</div>\n            </div>\n          );\n}\n\nexport default RssTelkkuChannel;","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import LayoutGrid from 'preact-material-components/LayoutGrid';\n//import 'preact-material-components/LayoutGrid/style.css';\n//import 'preact-material-components/Button/style.css';\n//import Checkbox from 'preact-material-components/Checkbox';\n// import Formfield from 'preact-material-components/FormField';\n// import 'preact-material-components/Checkbox/style.css';\n//import Select from 'preact-material-components/Select';\n//import 'preact-material-components/List/style.css';\n//import 'preact-material-components/Menu/style.css';\n//import 'preact-material-components/Select/style.css';\n//import TextField from 'preact-material-components/TextField';\n//import 'preact-material-components/TextField/style.css';\n//import 'preact-material-components/Theme/style.css';\n//import Button from 'preact-material-components/Button';\n//import 'preact-material-components/Button/style.css';\nimport Button from \"../button/Button\";\n//import Dialog from 'preact-material-components/Dialog';\n//import 'preact-material-components/Dialog/style.css';\n//import 'preact-material-components/Theme/style.css';\n\n// import HTMLComment from \"react-html-comment\";\n\n//import Dialog from \"../dialog/Dialog\";\nimport Dialog from \"../dialog/PreactDialog\";\nimport SwitchCheckbox from \"../checkbox/CheckBox\";\n\nimport AbortController from \"abort-controller\";\nimport style from \"./style\";\nimport Config from \"../../utils/Config\";\n// imporpotcat fetchJsonp from 'fetch-jsonp';\nimport RssTelkkuChannel from \"./RssTelkkuChannel\";\n\nexport default class Telkku extends Component {\n  store = null;\n  fetch_url_telkku = null;\n  showAllDescrRef = null;\n  showOneChannelRef = null;\n  selectChannelRef = null;\n  const_showChannelsAtSameTime = 10;\n  _mounted = false;\n  scrollingDlgRef = null;\n  tablCntl = null;\n  showTableBordersRef = null;\n  sectionStyle = null;\n  tablesectionStyle = null;\n  sectionRef = null;\n  section_width = null;\n  section_width_css = undefined;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"Telkku.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.store = props.store;\n    let now = Date.now();\n    this.state = {\n      errmsg: null,\n      channels: null,\n      currentchannel: null,\n      bUnderFetch: false,\n      today: new Date(now),\n      bDisplayAllDescriptions: false,\n      showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n      selectedchannelindex: -1,\n      bCheckShowChannelsAtSameTime: false,\n      currentChannelSetIndex: 0,\n      bUnderFetch: false,\n      bAllChannelsLoaded: false,\n      textSearch: null,\n      bSearchButtonClicked: false,\n      bShowTableBorder: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n      fetcheddata: null,\n      fetcheditems: [],\n      sectionwidth: 0,\n      screenreaderdiv: \"\",\n      hideButton: false,\n      hideButtonText: 'Piilota ohje',\n    };\n\n    let themevalue = props.themevalue;\n    this.sectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n          (this.section_width_css == undefined\n            ? \"\"\n            : this.section_width_css)\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n          (this.section_width_css == undefined ? \"\" : this.section_width_css);\n\n    this.tablesectionStyle =\n      themevalue !== undefined && themevalue !== \"\"\n        ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \"\n        : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\";\n\n    // this.fetch_url_telkku = 'https://telkussa.fi/RSS/Channel/';\n    this.fetch_url_telkku = Config.http_curlserver + \"/telkku/\";\n    this.TelkkuException = this.TelkkuException.bind(this);\n    this.removelisteners = this.removelisteners.bind(this);\n    this.showAllDescrRef = createRef();\n    this.showOneChannelRef = createRef();\n    this.selectChannelRef = createRef();\n    this.scrollingDlgRef = createRef();\n    this.tablCntl = createRef();\n    this.showTableBordersRef = createRef();\n    this.sectionRef = createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (Config.bDebug) {\n      console.log(\"Telkku componentWillReceiveProps nextProps\");\n      console.log(nextProps);\n    }\n\n    if (nextProps !== null && nextProps.themevalue != this.props.themevalue) {\n      this.setState({ themevalue: nextProps.themevalue });\n      this.sectionStyle =\n        nextProps.themevalue !== undefined && nextProps.themevalue !== \"\"\n          ? \" border:1px solid pink; padding:15px;  margin:10px; background: black; color: white; \" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth)\n          : \" border:1px solid black; padding:15px;  margin:10px; background: white; color: black;\" +\n            (this.state.sectionwidth == undefined\n              ? \"\"\n              : this.state.sectionwidth);\n    }\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    this.abortController = new AbortController(); // 1\n    this.abortSignal = this.abortController.signal; // 2\n    this._mounted = true;\n //   if (document.getElementById(\"programtable\"))\n   //   document.getElementById(\"programtable\").onkeydown = this.altPlusKeyUp;\n    this.section_width = this.sectionRef.current.offsetWidth;\n    //\tthis.fetchRssTelkkuPrograms();\n    if (Config.bDebug) console.log(\"kissa\");\n    /*\n    let aField = document.getElementById('focus_1_element'); \n    if (aField) aField.focus(); \n    */\n  }\n\n  getSectionWidthCss = () => {\n    return \"width: \" + this.section_width + \"px;\";\n  };\n\n  removelisteners() {\n    if (this.abortSignal && !this.abortSignal.aborted)\n      this.abortController.abort();\n  }\n\n  componentWillUnmount() {\n    this.removelisteners();\n    //\tthis.setState({});\n    // this.store.setStateNoneCallListeners({fetchitems: [], channeltypeitems: [],\n    //programtypeitems: [], categories: [], schedules: [],\n    //  });\n    this._mounted = false;\n  }\n\n  fetchRssTelkkuPrograms = async (init_pagenumber, init_max) => {\n    if (!this._mounted) return;\n\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuPrograms\");\n    }\n    if (this.state.bAllChannelsLoaded) return;\n    if (this.state.bUnderFetch) return;\n\n    this.setState({ bUnderFetch: true });\n\n    let channelnumber = 1;\n    let max = 10;\n    if (init_pagenumber !== undefined) channelnumber = init_pagenumber;\n    if (init_max !== undefined) max = init_max;\n\n    this.state.fetcheddata = null;\n    this.state.fetcheditems = [];\n    if (this.state.channels != null && this.state.channels.length > 0)\n      this.state.fetcheditems = this.state.channels;\n\n    //this.scrollingDlgRef.current.MDComponent.show();\n    this.scrollingDlgRef.current.open();\n\n    try {\n      while (1) {\n        this.fetcheddata = await this.fetchRssTelkkuChannel(channelnumber);\n        if (this.fetcheddata !== null) {\n          // Array.prototype.push.apply(fetcheditems, fetcheddata);\n          this.state.fetcheditems.push(this.fetcheddata);\n          if (channelnumber === max && max !== -1) break;\n          channelnumber = channelnumber + 1;\n          if (this.state.bAllChannelsLoaded) break;\n        } else break;\n      }\n    } catch (error) {\n      if (error.message !== \"Error: 500\") {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.message, bUnderFetch: false });\n        //this.scrollingDlgRef.current.MDComponent.close();\n        this.scrollingDlgRef.current.close();\n        return;\n      } else this.setState({ bAllChannelsLoaded: true });\n    }\n    if (Config.bDebug) {\n      console.log(\"fetcheditems\");\n      console.log(this.state.fetcheditems);\n    }\n\n    //this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n    this.setState({\n      channels: this.state.fetcheditems,\n      errmsg: null,\n      bUnderFetch: false,\n      bLoadAllChannels: false,\n      bLoad10Channels: false,\n    });\n  };\n\n  TelkkuException(message) {\n    this.message = message;\n    this.name = \"TelkkuException\";\n  }\n\n  fetchRssTelkkuChannel = async (channelnumber) => {\n    let channelurl = this.fetch_url_telkku + channelnumber;\n    if (Config.bDebug) {\n      console.log(\"fetchRssTelkkuChannel 1\");\n      console.log(channelurl);\n    }\n\n    this.setState({ channels: null, errmsg: null });\n\n    let fetched = null;\n    // \tcrossDomain:true,\n    await fetch(channelurl, {\n      method: \"GET\",\n      timeout: 6000,\n      headers: {\n        \"Content-Type\": \"application/rss+xml; charset=UTF-8\",\n        Accept: \"*/*\", // application/rss+xml\n      },\n      mode: \"cors\",\n      signal: this.abortSignal,\n    })\n      .then(this.handleErrors)\n      .then((response) => {\n        return response.text();\n      })\n      //\t\t.then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then((data) => {\n        /*\n\t\t\t\t\t\tmode: 'same-origin',\n\n\t\t\tif(Config.bDebug) \n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"fetchRssTelkkuChannel 1.5\"); \n\t\t\t\t\tconsole.log(data); \n\t\t\t\t}\n\t\t\t\t*/\n        let indCheck = data.indexOf(\"<rss version=\");\n        if (indCheck == -1) {\n          fetched = null;\n          this.setState({ bAllChannelsLoaded: true });\n        } else fetched = this.getJsonDataFromTelkkuRssXml(data);\n      })\n      .catch((error) => {\n        console.error(\"error\");\n        console.error(error);\n        this.setState({ errmsg: error.toString() });\n        throw new this.TelkkuException(error.toString());\n      });\n    return fetched;\n  };\n\n  getJsonDataFromTelkkuRssXml = (data) => {\n    let xmlDoc = new window.DOMParser().parseFromString(data, \"text/xml\");\n    let channeltitle =\n      xmlDoc.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue;\n    if (Config.bDebug) {\n      console.log(\"channeltitle\");\n      console.log(channeltitle);\n    }\n    let json = {};\n    json.title = channeltitle;\n    const xmlitems = xmlDoc.querySelectorAll(\"item\");\n    if (Config.bDebug) {\n      console.log(\"xmlitems\");\n      console.log(xmlitems);\n    }\n    if (xmlitems == null || xmlitems == undefined) return null;\n    json.channelprograms = [];\n    xmlitems.forEach((item) => {\n      if (item === undefined) return;\n      json.channelprograms.push(this.getChannelProgramFromXml(item));\n    });\n\n    if (Config.bDebug) {\n      console.log(\"json\");\n      console.log(json);\n    }\n\n    return json;\n  };\n\n  getChannelProgramXmlValue = (item) => {\n    if (item === null || item === undefined || item === NaN) {\n      console.log(\"json\");\n      console.log(json);\n      return null;\n    }\n    let item1 = item[0];\n    if (item1 === null || item1 === undefined || item1 === NaN) {\n      console.log(\"item1\");\n      console.log(item1);\n      return null;\n    }\n    let childNode1 = item1.childNodes[0];\n    if (childNode1 === null || childNode1 === undefined || childNode1 === NaN) {\n      if (Config.bDebug) {\n        console.log(\"childNode1\");\n        console.log(childNode1);\n      }\n      return null;\n    }\n    let nodeValue1 = childNode1.nodeValue;\n    if (nodeValue1 === null || nodeValue1 === undefined || nodeValue1 === NaN) {\n      console.log(\"nodeValue1\");\n      console.log(nodeValue1);\n      return null;\n    }\n    return nodeValue1;\n  };\n\n  getChannelProgramFromXml = (item) => {\n    if (Config.bDebug) {\n      console.log(\"item\");\n      console.log(item);\n    }\n    let jsonitem = {};\n    jsonitem.title = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"title\")\n    );\n    jsonitem.description = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"description\")\n    );\n    jsonitem.pubdate = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"pubDate\")\n    );\n    jsonitem.link = this.getChannelProgramXmlValue(\n      item.getElementsByTagName(\"link\")\n    );\n    // [0].childNodes[0].nodeValue;\n    return jsonitem;\n  };\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      // throw Error(response.statusText);\n      console.log(\"response\");\n      console.log(response);\n      console.log(response.status);\n      throw Error(response.status);\n    }\n    return response;\n  };\n\n  showOneChannel = (event) => {\n    event.preventDefault();\n    //\tconsole.log(\"showOneChannel\");\n    let value = event.target.checked;\n    let bValue = value; // this.showOneChannelRef.current.;\n\n    if (bValue)\n      this.setState({\n        showChannelsAtSameTime: 1,\n        bCheckShowChannelsAtSameTime: true,\n        bSearchButtonClicked: false,\n      });\n    else\n      this.setState({\n        showChannelsAtSameTime: this.const_showChannelsAtSameTime,\n        selectedchannelindex: -1,\n        bCheckShowChannelsAtSameTime: false,\n        /* bSearchButtonClicked: false */\n      });\n  };\n\n  showAllDescriptions = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showAllDescriptions\");\n    let bValue = value; // this.state.bDisplayAllDescriptions;\n    if (Config.bDebug) console.log(\"bValue\");\n    if (Config.bDebug) console.log(bValue);\n    /*\n\t\tif (value === 'on')\n\t\t\tbValue = true;\n\t\tconsole.log(value);\n\t\t*/\n    this.setState({\n      bDisplayAllDescriptions: bValue,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  getPOfIndex = (index, txt, themevalue) => {\n    if (Config.bDebug) {\n      console.log(\"getPOfIndex\");\n    }\n    let textSearch = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"textSearch\");\n      console.log(textSearch);\n    }\n    if (txt == undefined || txt == null) return \"\";\n    if (Config.bDebug) {\n      console.log(\"txt\");\n      console.log(txt);\n      console.log(\"index\");\n      console.log(index);\n    }\n    let txtlen = txt.length;\n    if (index == undefined || index == null || index < 0 || txtlen <= index)\n      return txt;\n    if (\n      textSearch == undefined ||\n      textSearch == null ||\n      textSearch.toString().trim().length == 0\n    )\n      return txt;\n\n    let first = txt.substring(0, index);\n    let between = txt.substring(index, index + textSearch.length);\n    let last = txt.substring(index + textSearch.length);\n\n    if (Config.bDebug) {\n      console.log(\"first\");\n      console.log(first);\n      console.log(\"between\");\n      console.log(between);\n      console.log(\"last\");\n      console.log(last);\n    }\n\n    let newvalue_first =\n      first != undefined && first != null && first.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {first}\n        </span>\n      ) : (\n        \"\"\n      );\n    let foundedthtml =\n      \"background-color: green; color: white; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    if (themevalue === \"--dark\")\n      foundedthtml =\n        \"background-color: yellow; color: black; margin-right: 0px; margin-left: 0px; padding: 0px;\";\n    let newvalue_between = <span style={foundedthtml}>{between}</span>;\n    let newvalue_last =\n      last != undefined && last != null && last.trim().length != 0 ? (\n        <span style={\"margin-right: 0px; margin-left: 0px; padding: 0px;\"}>\n          {last}\n        </span>\n      ) : (\n        \"\"\n      );\n    let newvalue = (\n      <div>\n        {newvalue_first}\n        {newvalue_between}\n        {newvalue_last}\n      </div>\n    );\n    if (Config.bDebug) {\n      console.log(\"newvalue_first\");\n      console.log(newvalue_first);\n      console.log(\"newvalue_between\");\n      console.log(newvalue_between);\n      console.log(\"newvalue_last\");\n      console.log(newvalue_last);\n    }\n    if (Config.bDebug) {\n      console.log(\"newvalue\");\n      console.log(newvalue);\n    }\n    return newvalue;\n  };\n\n  getTableHeadersAndTableRowsAfterChannels = () => {\n    let headers = null;\n    let channels = null;\n    if (Config.bDebug) {\n      console.log(\"getTableHeadersAndTableRowsAfterChannels\");\n      console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n      console.log(this.state.bCheckShowChannelsAtSameTime);\n      console.log(\"this.state.selectedchannelindex\");\n      console.log(this.state.selectedchannelindex);\n      console.log(this.state);\n    }\n\n    let bAllChannels = false;\n    if (this.state.bSearchButtonClicked) {\n      if (this.state.channels == null) {\n        headers = [];\n        channels = [];\n        let ret = {};\n        ret.headers = headers;\n        ret.channels = channels;\n        return ret;\n      }\n      const searchText = this.state.textSearch;\n      if (searchText != null && searchText.toString().trim().length > 0) {\n        let foundedChannelsTitle = null;\n        let index = -1;\n        let foundedChannels = [];\n        let foundedPrograms = [];\n        let founded = false;\n        let progfounded = false;\n        let uppersearchText = searchText.toUpperCase();\n        let chcoopy = {};\n\n        let search_channels = this.state.channels;\n        console.log(\"before filter search\");\n        console.log(\"this.state.bCheckShowChannelsAtSameTime\");\n        console.log(this.state.bCheckShowChannelsAtSameTime);\n        console.log(\"this.state.selectedchannelindex\");\n        console.log(this.state.selectedchannelindex);\n\n        if (\n          this.state.bCheckShowChannelsAtSameTime &&\n          this.state.selectedchannelindex != -1\n        ) {\n          console.log(\"filter search bCheckShowChannelsAtSameTime\");\n          let selectedTitle =\n            search_channels[this.state.selectedchannelindex].title;\n          let filteredchannels = search_channels.filter((s, i) => {\n            //\tconsole.log(\"i\");\n            //\tconsole.log(i);\n            return s.title === selectedTitle;\n          });\n          search_channels = filteredchannels;\n        }\n\n        Array.from(search_channels).forEach((cha) => {\n          chcoopy = {};\n          index = -1;\n          founded = false;\n          if (cha === undefined) return;\n          // this.state.channels.forEach(cha, i => {\n          Object.assign(chcoopy, cha);\n          if (Config.bDebug) {\n            console.log(\"chcoopy\");\n            console.log(chcoopy);\n            console.log(\"chcoopy.channelprograms\");\n            console.log(chcoopy.channelprograms);\n          }\n\n          if (chcoopy.title)\n            chcoopy.title = chcoopy.title.toString().replace(\"Telkussa: \", \"\");\n          index = chcoopy.title\n            ? chcoopy.title.toUpperCase().indexOf(uppersearchText)\n            : -1;\n          if (index != -1) {\n            chcoopy.titleindex = index;\n            founded = true;\n          }\n          foundedPrograms = [];\n\n          Array.from(chcoopy.channelprograms).forEach((pr) => {\n            // cha.channelprograms.forEach(pr, i => {\n            progfounded = false;\n            if (pr === undefined) return;\n            index = pr.title\n              ? pr.title.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.titleindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            index = pr.description\n              ? pr.description.toUpperCase().indexOf(uppersearchText)\n              : -1;\n            if (index != -1) {\n              pr.descriptionindex = index;\n              founded = true;\n              progfounded = true;\n            }\n            if (progfounded) foundedPrograms.push(pr);\n          });\n\n          if (founded) {\n            if (foundedPrograms != null && foundedPrograms.length != 0)\n              chcoopy.channelprograms = foundedPrograms;\n            else chcoopy.channelprograms = cha.channelprograms;\n            foundedChannels.push(chcoopy);\n          }\n        });\n\n        if (foundedChannels == null && foundedChannels.length == 0) {\n          headers = [];\n          channels = [];\n        } else {\n          headers = foundedChannels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = foundedChannels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={\"telkkuchannel\" + i}\n                data={jsonchannel}\n                showSearch={true}\n                getPOfIndex={this.getPOfIndex}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      } else {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      }\n    } else if (\n      this.state.bCheckShowChannelsAtSameTime &&\n      this.state.selectedchannelindex != -1\n    ) {\n      console.log(\"filter\");\n      let selectedTitle =\n        this.state.channels[this.state.selectedchannelindex].title;\n      let filteredchannels = this.state.channels.filter((s, i) => {\n        //\tconsole.log(\"i\");\n        //\tconsole.log(i);\n        return s.title === selectedTitle;\n      });\n      //\t\t\t\tconsole.log(\"filteredchannels\");\n      //\t\t\t\tconsole.log(filteredchannels);\n      headers = filteredchannels.map((jsonchannel, i) => {\n        return jsonchannel.title.replace(\"Telkussa: \", \"\");\n      });\n      channels = filteredchannels.map((jsonchannel, i) => {\n        return (\n          <RssTelkkuChannel\n            id={i}\n            data={jsonchannel}\n            themevalue={this.props.themevalue}\n            displayAllDescriptions={this.state.bDisplayAllDescriptions}\n          />\n        );\n      });\n    } else {\n      if (\n        this.state.showChannelsAtSameTime == this.state.channels.length ||\n        this.state.showChannelsAtSameTime > this.state.channels.length\n      ) {\n        headers = this.state.channels.map((jsonchannel, i) => {\n          return jsonchannel.title.replace(\"Telkussa: \", \"\");\n        });\n        channels = this.state.channels.map((jsonchannel, i) => {\n          return (\n            <RssTelkkuChannel\n              id={i}\n              data={jsonchannel}\n              themevalue={this.props.themevalue}\n              displayAllDescriptions={this.state.bDisplayAllDescriptions}\n            />\n          );\n        });\n      } else {\n        let bAllChannels = false;\n        if (this.state.showChannelsAtSameTime < this.state.channels.length) {\n          let min = Math.floor(\n            this.state.currentChannelSetIndex *\n              this.state.showChannelsAtSameTime\n          );\n          let max =\n            this.state.currentChannelSetIndex == 0\n              ? this.state.showChannelsAtSameTime\n              : Math.floor(\n                  this.state.currentChannelSetIndex *\n                    this.state.showChannelsAtSameTime +\n                    this.state.showChannelsAtSameTime\n                );\n          if (Config.bDebug) {\n            console.log(\"min\");\n            console.log(min);\n            console.log(\"max\");\n            console.log(max);\n          }\n          if (min < 0) min = 0;\n          else if (min > this.state.channels.length) {\n            min = this.state.channels.length;\n            bAllChannels = true;\n          }\n\n          if (max > this.state.channels.length)\n            max = this.state.channels.length;\n\n          if (!bAllChannels) {\n            let i;\n            let newChannelSet = [];\n            for (i = min; i < max; i++) {\n              newChannelSet.push(this.state.channels[i]);\n            }\n\n            headers = newChannelSet.map((jsonchannel, i) => {\n              return jsonchannel.title.replace(\"Telkussa: \", \"\");\n            });\n            channels = newChannelSet.map((jsonchannel, i) => {\n              return (\n                <RssTelkkuChannel\n                  id={i}\n                  data={jsonchannel}\n                  themevalue={this.props.themevalue}\n                  displayAllDescriptions={this.state.bDisplayAllDescriptions}\n                />\n              );\n            });\n          }\n        } else {\n          bAllChannels = true;\n        }\n\n        /*\n\t\t\t\tlet divided = this.state.channels.size() % this.state.showChannelsAtSameTime:\t\t\t\t\t\t\n\t\t\t\tif (Config.bDebug)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(\"divided\");\n\t\t\t\t\tconsole.log(divided);\n\t\t\t\t}\n\t\t\t\t*/\n        if (bAllChannels) {\n          headers = this.state.channels.map((jsonchannel, i) => {\n            return jsonchannel.title.replace(\"Telkussa: \", \"\");\n          });\n          channels = this.state.channels.map((jsonchannel, i) => {\n            return (\n              <RssTelkkuChannel\n                id={i}\n                data={jsonchannel}\n                themevalue={this.props.themevalue}\n                displayAllDescriptions={this.state.bDisplayAllDescriptions}\n              />\n            );\n          });\n        }\n      }\n    }\n\n    let ret = {};\n    ret.headers = headers;\n    ret.channels = channels;\n    return ret;\n  };\n\n  textFieldChannelsAtSameTimeChanged = (event) => {\n    event.preventDefault();\n    let value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldChannelsAtSameTimeChanged\");\n      console.log(value);\n    }\n    let validNumber = parseInt(value);\n    if (Config.bDebug) {\n      console.log(\"validNumber\");\n      console.log(validNumber);\n    }\n    if (validNumber == NaN || validNumber == undefined) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    } else if (parseInt(validNumber) < 1) {\n      event.target.value = 1;\n      return;\n    } else if (parseInt(validNumber) > this.const_showChannelsAtSameTime) {\n      event.target.value = this.const_showChannelsAtSameTime;\n      return;\n    }\n    this.setState({\n      showChannelsAtSameTime: validNumber,\n      currentChannelSetIndex: 0,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  calculateMaxChannelSetIndex = () => {\n    if (Config.bDebug) {\n      console.log(\"calculateMaxChannelSetIndex\");\n      /*\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\tconsole.log(\"calculateMaxChannelSetIndex\");\n\t\t\tconsole.log(channelSets);\n\t\t\t*/\n    }\n    if (this.state.channels == null) return 0;\n    const channelssize = this.state.channels.length;\n    if (channelssize === 0) return 0;\n    if (this.state.bCheckShowChannelsAtSameTime) return 0;\n    if (this.state.showChannelsAtSameTime >= this.state.channels.length)\n      return 0;\n    const channelSets =\n      this.state.channels.length / this.state.showChannelsAtSameTime;\n    if (Config.bDebug) {\n      console.log(\"channelSets\");\n      console.log(channelSets);\n    }\n    if (channelSets == 0) return 0;\n    return channelSets - 1;\n  };\n\n  nextChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (\n      this.state.currentChannelSetIndex > this.calculateMaxChannelSetIndex()\n    ) {\n      this.setState({\n        currentChannelSetIndex: this.calculateMaxChannelSetIndex(),\n        bSearchButtonClicked: false,\n      });\n      return;\n    } else if (\n      this.state.currentChannelSetIndex === this.calculateMaxChannelSetIndex()\n    ) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex + 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  prevChannelSetClicked = (event) => {\n    event.preventDefault();\n    if (this.state.channels == null || this.state.channels.length == 0) return;\n    if (this.state.currentChannelSetIndex < 0) {\n      this.setState({\n        currentChannelSetIndex: 0,\n        /* bSearchButtonClicked: false */\n      });\n      return;\n    }\n    if (this.state.currentChannelSetIndex === 0) {\n      return;\n    }\n    this.setState({\n      currentChannelSetIndex: this.state.currentChannelSetIndex - 1,\n      /* bSearchButtonClicked: false */\n    });\n  };\n\n  loadMoreChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null || this.state.channels.length == 0\n        ? 1\n        : this.state.channels.length + 1,\n      this.state.channels == null || this.state.channels.length == 0\n        ? 10\n        : this.state.channels.length + 10\n    );\n  };\n\n  loadAllChannelClicked = () => {\n    if (this.state.bAllChannelsHasLoaded) return;\n    this.fetchRssTelkkuPrograms(\n      this.state.channels == null ? 1 : this.state.channels.length + 1,\n      -1\n    );\n  };\n\n  searchTextFromChannelsClicked = () => {\n    event.preventDefault();\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked\");\n    }\n    const searchText = this.state.textSearch;\n    if (Config.bDebug) {\n      console.log(\"searchText 2 \");\n      console.log(searchText);\n    }\n    if (\n      searchText == undefined ||\n      searchText == null ||\n      searchText.trim().length == 0\n    )\n      return;\n    // to start make indirect the search:\n    if (Config.bDebug) {\n      console.log(\"searchTextFromChannelsClicked 2 \");\n    }\n    let value = this.showAllDescrRef.current.checked;\n    if (!value) this.showAllDescrRef.current.checked = true;\n    this.setState({\n      bSearchButtonClicked: true,\n      bDisplayAllDescriptions: true,\n    });\n    this.forceUpdate();\n  };\n\n  textFieldSearchChanged = (event) => {\n    event.preventDefault();\n    const value = event.target.value;\n    if (Config.bDebug) {\n      console.log(\"textFieldSearchChanged\");\n      console.log(value);\n    }\n    this.setState({ textSearch: value, bSearchButtonClicked: false });\n  };\n\n  abortFetchClicked = (event) => {\n    event.preventDefault();\n    if (!this.state.bUnderFetch) return;\n    if (Config.bDebug) console.log(\"abortFetchClicked.abort()\");\n    if (!this.abortSignal.aborted) {\n      this.abortController.abort();\n      this.setState({ bUnderFetch: false });\n    }\n  };\n\n  getFetchedDate = () => {\n    const today = this.state.today;\n    if (today == null || today == undefined) return \"\";\n\n    let days = today.getDate();\n    let month = today.getMonth() + 1;\n    let year = today.getFullYear();\n    if (days < 10) days = \"0\" + days;\n    if (month < 10) month = \"0\" + month;\n    const ret = \"\" + days + \".\" + month + \".\" + year;\n    return ret;\n  };\n\n  showTableBorders = (event) => {\n    event.preventDefault();\n    let value = event.target.checked;\n    if (Config.bDebug) console.log(\"showTableBorders\");\n    let bValue = value;\n    if (Config.bDebug) {\n      console.log(\"bValue\");\n      console.log(bValue);\n    }\n    this.setState({ bShowTableBorder: bValue });\n  };\n\n  onClickDisplayDialog = (event) => {\n    // this.scrollingDlgRef.current.MDComponent.close();\n    this.scrollingDlgRef.current.close();\n  };\n\n  getNextColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd !== undefined && currentColInd !== null) {\n      if (cols[currentColInd + 1]) ret = cols[currentColInd + 1];\n    }\n    return ret;\n  };\n\n  getPrevColumn = (cols, currentColInd) => {\n    let ret = null;\n    if (cols && currentColInd) {\n      if (cols[currentColInd - 1]) ret = cols[currentColInd - 1];\n    }\n    return ret;\n  };\n\n  getCurrentColumnIndex = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        ret = parseInt(strNum);\n        break;\n      }\n    }\n    return ret;\n  };\n\n  getH3OfCurrentColumn = (path) => {\n    if (path === undefined || path === null || path.length === 0) return null;\n\n    if (Config.bDebug) {\n      console.log(\"path\");\n      console.log(path);\n    }\n\n    let ret = -1;\n    let i = 0,\n      max = path.length;\n    let value, str;\n    const search = \"tablecol\";\n    for (i = 0; i < max; i++) {\n      // value = path[i].localName;\n      value = path[i];\n      str = value.id.toString();\n      if (str && str.includes(search)) {\n        let ind = str.indexOf(search);\n        let strNum = str.substring(ind + search.length);\n        let ind2 = parseInt(strNum);\n        ret = value.childNodes[0];\n        if (ret) {\n          let ret2 = ret.childNodes[0];\n          if (ret2) ret = ret2;\n        }\n        break;\n      }\n    }\n    return ret;\n  };\n\n  speakScreenReader(text)\n  {\n    document.getElementById(\"screenreaderdiv\").innerHTML = text;\n    this.setState({screenreaderdiv: text })\n  }\n\n  altPlusKeyUp = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n    if (Config.bDebug) console.log(\"pressed\");\n    if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      let row = this.tablCntl.current.rows[1];\n      const cols = row.cells;\n      const currColInd = row.colIndex;\n      const lenCols = cols.length;\n      const currentCol = row.closest(\"td\");\n\n      if (Config.bDebug) {\n        console.log(\"--- row\");\n        console.log(row);\n        console.log(\"--- cols\");\n        console.log(cols);\n        console.log(\"--- lenCols\");\n        console.log(lenCols);\n        console.log(\"--- currColInd\");\n        console.log(currColInd);\n        console.log(\"--- currentCol\");\n        console.log(currentCol);\n\n        console.log(\"--- this.tablCntl.current\");\n        console.log(this.tablCntl.current);\n      }\n      let currentColInd = null;\n      let path = null;\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"r\":\n          case \"R\":\n            e.preventDefault();\n            path = document.activeElement;\n            if (path && path.innerHTML) {\n              this.speakScreenReader(path.innerHTML.toString());\n            }\n            break;\n\n        case \"c\":\n        case \"C\":\n          e.preventDefault();\n            path = e.composedPath();\n          //... handle alt+o\n          divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            const channelTextHtml = divInsideOfCol.innerHTML;\n            const channelText = channelTextHtml.toString();\n            if (channelText)\n              this.speakScreenReader(channelText);\n          }\n          break;\n        \n        case \"o\":\n        case \"O\":\n          e.preventDefault();\n          //... handle alt+o\n          path = e.composedPath();\n          let divInsideOfCol = this.getH3OfCurrentColumn(path);\n          if (divInsideOfCol) {\n            divInsideOfCol.focus();\n          }\n          break;\n\n        case \"k\":\n        case \"K\":\n          e.preventDefault();\n          //... handle alt+k\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd > 0) {\n            const prevcol = this.getPrevColumn(cols, currentColInd);\n            if (prevcol) {\n              prevcol.focus();\n            }\n          }\n          break;\n\n        case \"a\":\n        case \"A\":\n          //... handle alt+s\n          e.preventDefault();\n          path = e.composedPath();\n          currentColInd = this.getCurrentColumnIndex(path);\n          if (currentColInd !== -1 && currentColInd < lenCols - 1) {\n            const nextcol = this.getNextColumn(cols, currentColInd);\n            // document.getElementById(\"tablecol\" +(currentColInd+1)).focus();\n            if (nextcol) {\n              if (Config.bDebug) {\n                console.log(\"nextcol\");\n                console.log(nextcol);\n              }\n              nextcol.focus();\n              // document.getElementById(\"tablecol\" +currentColInd).focus();\n            }\n          }\n          break;\n      }\n    }\n  };\n\n  altPlusKeyUpProgramHeader = (e) => {\n    e = e || window.event;\n    let keyCode = e.keyCode || e.which,\n      arrow = { left: 37, up: 38, right: 39, down: 40 };\n\n    console.log(\"pressed\");\n  if (e.altKey) {\n      if (Config.bDebug) {\n        console.log(\"control key\");\n        console.log(\"e.altKey\");\n        console.log(e.altKey);\n        console.log(\"keyCode\");\n        console.log(keyCode);\n        console.log(\"e.keyCode\");\n        console.log(e.keyCode);\n        console.log(\"e\");\n        console.log(e);\n      }\n\n      // .item(0).innerHTML\n      switch (e.key) {\n        case \"m\":\n        case \"M\":\n            //... handle alt+t\n          if (document.getElementById(\"idprogramtableh3\")) {\n            let divh3 = document.getElementById(\"idprogramtableh3\");\n            if (divh3) divh3.focus();\n          }\n          break;\n          case \"n\":\n            case \"N\":  \n                //... handle alt+t\n                if (document.getElementById(\"divControl\")) {\n                  let divh3 = document.getElementById(\"divControl\");\n                  if (divh3) divh3.focus();\n                }\n                break;\n          case \"j\":\n            case \"J\":\n                 this.nextChannelSetClicked(e);            \n         //         if (document.getElementById(\"button_next_channel_page\")) {\n    //              let buttonNext = document.getElementById(\"button_next_channel_page\");\n    //              if (buttonNext) buttonNext.click();\n        //        }\n              break;\n            case \"g\":\n            case \"G\":\n                  this.prevChannelSetClicked(e);\n             //  if (document.getElementById(\"button_prev_channel_page\")) {\n    //              let buttonPrev = document.getElementById(\"button_prev_channel_page\");\n    //              if (buttonPrev) buttonPrev.click();\n           //    }\n               break;\n          default:\n            return this.altPlusKeyUp(e); \n            break;  \n      }\n    }\n  };\n\n  buttonHidePressed = (e) => {\n    let bValue = !this.state.hideButton;\n    var x = document.getElementById(\"hideDiv\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n    this.setState({ hideButton: bValue, hideButtonText: bValue ? \"Näytä ohje\" : \"Piilota ohje\" });\n  }\n\n  render(props, state) {\n    if (Config.bDebug) {\n      console.log(\"state\");\n      console.log(state);\n    }\n\n    let sectionwidth = \"\";\n    if (state.fetcheditems != null && state.fetcheditems.length > 0) {\n      sectionwidth = this.getSectionWidthCss();\n      this.section_width_css = sectionwidth;\n    }\n\n    let divDialogStyle =\n      props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"color: #FFF; background-color: black; border-color: #FFF;\"\n        : \"\";\n    const inputw =\n      \"float: none; display: inline-block; vertical-align: middle; \";\n    const buttoninputw =\n      \"float: none; display: inline-block; vertical-align: middle; \" +\n      (props.themevalue !== undefined && props.themevalue !== \"\"\n        ? \"\"\n        : \" color: white; \");\n\n    if (Config.bDebug) {\n      console.log(\"divDialogStyle\");\n      console.log(divDialogStyle);\n    }\n\n    let tableBorderStyle = \"\";\n    let table_border_color = \"black\";\n    if (state.bShowTableBorder) {\n      if (props.themevalue === \"--dark\") table_border_color = \"white\";\n      tableBorderStyle = \" border: 1px solid \" + table_border_color + \";\";\n    }\n\n    let channels = null;\n    let tableheaders = null;\n    let selectchannels = null;\n    let tabletds = null;\n    let headers = null;\n    if (state.channels !== null) {\n      // selected={child.title.fi===state.selectedcategory.title.fi}\n      /*\n\t\t\t\t\t\t\treturn <Select.Item id={i} \t\t\t\t\n\t\t\t\t>{child.title}</Select.Item>\n\t\t\t\t});\n\t\t\t\t*/\n      selectchannels = state.channels.map((child, i) => {\n        return (\n          <option\n            value={child.title}\n            id={i}\n            selected={i === this.state.selectedchannelindex}\n          >\n            {child.title}\n          </option>\n        );\n      });\n      let tableheaders_and_rows =\n        this.getTableHeadersAndTableRowsAfterChannels();\n      headers = tableheaders_and_rows.headers;\n      /*\n\t\t\tif (headers != null)\n\t\t\t\ttableheaders = headers.map((child, i) => {\n\t\t\t\t\treturn <th lang=\"fi\" tabIndex=\"0\" style={'vertical-align: top; padding-left: 5px; padding-right: 5px;' +tableBorderStyle}>{child}</th> \t\t\t\t\n\t\t\t\t});\n\t\t\t\t*/\n      channels = tableheaders_and_rows.channels;\n      tabletds = channels;\n      if (channels != null)\n        tabletds = channels.map((child, i) => {\n          return (\n            <td\n              id={\"telkkutablecol\" + i}\n              lang=\"fi\"\n              tabIndex=\"0\"\n              style={\n                \"vertical-align: top; padding-left: 5px; padding-right: 5px; \" +\n                tableBorderStyle\n              }\n            >\n              {child}\n            </td>\n          );\n        });\n    }\n\n    return (\n      <Fragment>\n        <div id=\"telkku_main_div\" style={divDialogStyle}\n        onKeyUp={this.altPlusKeyUpProgramHeader}>\n          <div\n            class={style.cardHeader}            \n          >\n            <h1 tabIndex=\"0\" lang=\"fi\" id=\"focus_1_element\">\n              Telkku {this.getFetchedDate()}\n            </h1>\n\n            <section\n              ref={this.sectionRef}\n              style={\n                this.state.themevalue === \"\" ? sectionwidth : this.sectionStyle\n              }\n            >\n              <div class={style.cardBody}>\n                <div\n                  lang=\"fi\"\n                  tabIndex=\"0\"\n                  aria-labelled=\"Miten ohjelmatiedot näytetään\"\n                >\n                  <div style={{ \"background-color\": \"red\", color: \"yellow\" }} tabIndex=\"0\">\n                    {state.errmsg}\n                  </div>\n                  <div class=\" mdc-typography--caption\" tabIndex=\"0\" id=\"divControl\">\n                    Miten ohjelmatiedot näytetään:\n                  </div>\n                </div>\n                <div class={style.cardBody}>\n                  <div>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.prevChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Aikaisemmat kanavat\"\n                        text=\"&lt;\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <space> </space>\n\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={\n                          state.channels == null ||\n                          (state.showChannelsAtSameTime == 1 &&\n                            state.bCheckShowChannelsAtSameTime) ||\n                          state.showChannelsAtSameTime >= state.channels.length\n                        }\n                        onClick={this.nextChannelSetClicked}\n                        style={buttoninputw}\n                        aria-label=\"Seuraavat kanavat\"\n                        text=\"&gt;\"\n                      ></Button>\n                    </span>\n\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showAllDescriptions}\n                        propref={this.showAllDescrRef}\n                        inputid=\"checkshowdescribtions\"\n                        style={inputw}\n                        labeltext=\"Näytä selitykset\"\n                        checked={state.bDisplayAllDescriptions}\n                      />\n                    </span>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showOneChannel}\n                        propref={this.showOneChannelRef}\n                        inputid=\"checkshowonechannel\"\n                        style={inputw}\n                        labeltext=\"Näytä yksi kanava:\"\n                        checked={state.bCheckShowChannelsAtSameTime}\n                      />\n\n                      <select\n                        tabIndex=\"0\"\n                        selectedIndex={this.state.selectedchannelindex}\n                        disabled={state.showChannelsAtSameTime !== 1}\n                        preselected\n                        outlined\n                        style={inputw}\n                        ref={this.selectChannelRef}\n                        onChange={(e) => {\n                          this.setState({\n                            selectedchannelindex: e.target.selectedIndex,\n                            bSearchButtonClicked: false,\n                          });\n                        }}\n                      >\n                        {selectchannels}\n                      </select>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <label for=\"input_number_columss\" style={inputw}>\n                        Näytettävien kanavien lkm:{\" \"}\n                      </label>\n                      <input\n                        id=\"input_number_columss\"\n                        name=\"input_number_columns\"\n                        style={inputw}\n                        disabled={this.state.bCheckShowChannelsAtSameTime}\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"10\"\n                        value={\n                          this.state.showChannelsAtSameTime === -1\n                            ? \"\"\n                            : this.state.showChannelsAtSameTime\n                        }\n                        onKeyUp={this.textFieldChannelsAtSameTimeChanged}\n                      />\n                    </span>\n                    <span>\n                      <label for=\"idsearchvalue\">\n                        Etsi tekstiä ohjelmista:\n                      </label>\n                      <input\n                        id=\"idsearchvalue\"\n                        type=\"text\"\n                        tabIndex=\"0\"\n                        outlined\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onKeyUp={this.textFieldSearchChanged}\n                        style={\" width: 30%;\"}\n                      />\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        style={inputw}\n                        disabled={state.channels == null || state.bUnderFetch}\n                        onClick={this.searchTextFromChannelsClicked}\n                        style={buttoninputw}\n                        aria-label=\"Hae\"\n                        text=\"Hae\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadMoreChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa +10 kanavaa\"\n                      ></Button>\n                    </span>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={state.bUnderFetch || state.bAllChannelsLoaded}\n                        onClick={this.loadAllChannelClicked}\n                        style={buttoninputw}\n                        text=\"Lataa kaikki kanavat\"\n                      ></Button>\n                    </span>\n                    <space> </space>\n                    <span>\n                      <SwitchCheckbox\n                        onChange={this.showTableBorders}\n                        style={inputw}\n                        propref={this.showTableBordersRef}\n                        inputid=\"checkTableBorders\"\n                        labeltext=\"Näytä taulun raamit\"\n                        checked={state.bShowTableBorder}\n                      />\n                    </span>\n                    <space> </space>\n                    <span>\n                      <Button\n                        tabIndex=\"0\"\n                        ripple\n                        raised\n                        disabled={!state.bUnderFetch}\n                        style={buttoninputw}\n                        onClick={this.abortFetchClicked}\n                        text=\"Keskeytä lataus\"\n                      ></Button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <br />\n            <br />\n            <section\n              style={this.state.themevalue === \"\" ? \"\" : this.tablesectionStyle}\n            >\n              <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n                {state.errmsg}\n              </div>\n              <div class=\" mdc-typography--caption\">\n                <h3 id=\"idprogramtableh3\" tabIndex=\"0\">\n                Ohjelmataulukko&emsp;\n                    <Button\n                    lang=\"fi\"\n                    ripple\n                    raised\n                    style={buttoninputw}\n                    text={state.hideButtonText}\n                    id=\"buttonHide\"\n                    onClick={this.buttonHidePressed}\n                    aria-label=\"Näytä/Piilota teksi\"\n                  ></Button>\n\n                </h3>\n                <div class={style.cardHeader} id=\"hideDiv\">\n                  <h3 lang=\"fi\" tabIndex=\"0\">\n                    -- Ohjelmataulukko, liikutaan hiirellä tai taulukon sisällä\n                    seuraavilla näppäimillä: alt+a = seuraava kanava, alt+k =\n                    edellinen kanava sekä alt+o = liikutaan kanavan otsakkeeseen.\n                    Myös ensimmäisen kerran/sama kanava on mahdollista\n                    painaa alt+c:ää, jolloin ruudunlukuohjelma sanoo kanavan nimen, mutta \n                    selauskohta ei muutu. Samoin atl+r:lla toistetaan \n                    kerran/ohjelmatieto sen teksti. Ohjelman kuvailun saa näkymään tab \n                    näppäimellä ja enterillä tai hiirenklikkauksella. \n                    Taulukon sisällä toimivat myös tab sekä shift-tab \n                    näppäimet. Taulukon yläpuolelle tekstin \"Ohjelmataulukko\" \n                    kohdalle pääsee komennolla alt+a. Myös seuraavat \n                      näppäimet toimivat, kun kanavia enemmän kuin taulukossa näytetään: \n                      edelliset kanavat: alt+g ja seuraavat kanavat: alt+j. Alt+n vie suoraan\n                      miten taulukon ohjelmatiedot näytetään yläpuolelle.\n                  </h3>\n                </div>\n                {state.bSearchButtonClicked && state.textSearch != null\n                  ? \" (haun tulokset)\"\n                  : \"\"}\n              </div>\n              <table id=\"programtable\" style=\"width:100%\" ref={this.tablCntl}>\n                <tbody>\n                  <tr>{tableheaders}</tr>\n                  <tr>{tabletds}</tr>\n                </tbody>\n              </table>\n            </section>\n          </div>\n          <Dialog\n            role=\"dialog\"\n            id=\"dialogloading\"\n            aria-labelledby=\"h1loading\"\n            aria-modal=\"false\"\n            lang=\"fi\"\n            ref={this.scrollingDlgRef}\n            title=\"Odota!\"\n            themevalue={props.themevalue}\n            okButtonPressed={this.onClickDisplayDialog}\n            okText=\"Sulje\"\n            scrollable={true}\n          >\n            <div style={divDialogStyle}>\n              <div class=\"card-header\">\n                <h3\n                  lang=\"fi\"\n                  id=\"h1loading\"\n                  default\n                  tabIndex=\"0\"\n                  class=\" mdc-typography--title\"\n                >\n                  Hetkinen tietoja haetaan par'aikaa...\n                </h3>\n              </div>\n            </div>\n          </Dialog>\n          <div id=\"screenreaderdiv\" tabindex=\"0\" aria-live=\"priority || polite\"\n               class=\"visually-hidden\" aria-label={this.state.screenreaderdiv} />\n       \n        </div>\n      </Fragment>\n    );\n  }\n}\n\n/*\n\n\t\t\t\t<Dialog role=\"dialog\" id=\"dialogloading\" aria-labelledby=\"h1loading\"\n     \t\t\t aria-modal=\"false\"\n\t\t\t\tref={this.scrollingDlgRef}>\n\t\t\t\t <Dialog.Header lang=\"fi\" tabIndex=\"0\" >Odota!</Dialog.Header>\n\t\t\t\t <Dialog.Body scrollable={false}>\n\t\t\t\t   <div class=\"card-header\">\n\t\t\t\t\t  <h3 lang=\"fi\" id=\"h1loading\" default tabIndex=\"0\" class=\" mdc-typography--title\">\n\t\t\t\t\t  Hetkinen tietoja haetaan par'aikaa...\n\t\t\t\t\t  </h3>\n\t\t\t\t\t  </div>\n\t\t\t\t </Dialog.Body>\n\t\t\t\t <Dialog.Footer>\n\t\t\t\t\t <Dialog.FooterButton lang=\"fi\" tabIndex=\"0\" role=\"button\" \n\t\t\t\t\t onCancel={this.onClickDisplayDialog} cancel={true} >Sulje</Dialog.FooterButton>\n\t\t\t\t </Dialog.Footer>\n\t\t\t </Dialog>\n\n\n\t\t\t\t\t<Chips>\n\t\t\t\t\t\t<Chips.Chip style={(state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length \n\t\t\t\t\t\t    ? 'display: none' :'' }>\n\t\t\t\t\t\t\t<Chips.Text>&lt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t\t<Chips.Chip disabled={state.channels == null\n\t\t\t\t\t\t    || state.showChannelsAtSameTime >= state.channels.length }>\n\t\t\t\t\t\t\t<Chips.Text>&gt;</Chips.Text>\n\t\t\t\t\t\t</Chips.Chip>\n\t\t\t\t\t</Chips>\n\n<LayoutGrid>\n\t\t\t\t\t\t\t<LayoutGrid.Inner>\n\t\t\t\t\t\t\t\t{channels}\n\t\t\t\t\t\t\t</LayoutGrid.Inner>\n        \t\t\t\t</LayoutGrid>\n\t\t\t\t\t\t*/\n","import { h, Component, createRef, Fragment } from \"preact\";\n//import Card from 'preact-material-components/Card';\n//import 'preact-material-components/Card/style.css';\n//import 'preact-material-components/Button/style.css';\n\nimport Config from \"../../utils/Config\";\nimport style from \"./style\";\n// import Category from './Category';\n// import GridOrList from './GridOrList';\nimport Telkku from \"../../components/telkku/Telkku\";\n\n// import StaticFunctions from '../../utils/StaticFunctions';\n\nexport default class TelkkuRoute extends Component {\n  control = null;\n\n  constructor(props) {\n    super(props);\n    if (Config.bDebug) {\n      console.log(\"YleRoute.js\");\n      console.log(\"props\");\n      console.log(props);\n    }\n\n    this.state = {\n      errmsg: null,\n    };\n    this.control = createRef();\n  }\n\n  componentDidMount() {\n    if (Config.bDebug) console.log(\"componentDidMount 1\");\n    // this.fetchProgCategories();\n  }\n\n  removelisteners = () => {\n    this.control.removelisteners();\n  };\n\n  /*\n\t\t'Origin': 'localhost:8080',\n\t\t\t'User-Agent': 'curl/7.55.1',\n\t\t\t'Host': 'external.api.yle.fi',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'Access-Control-Allow-Credentials': true,\n\t\t\t'Cross-Origin-Resource-Policy': 'cross-origin',\n\t\t\t'Access-Control-Allow-Methods': 'GET,OPTIONS',\n\t\t\t'Access-Control-Allow-Headers': 'Content-Type'\n*/\n\n  render(props, state) {\n    return (\n      <div class={`${style.home} page`}>\n        <Telkku\n          store={props.store}\n          ref={this.control}\n          themevalue={props.themevalue}\n        />\n        <div style={{ \"background-color\": \"red\", color: \"yellow\" }}>\n          {state.errmsg}\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n\t\t\t\t\t\t<FormField>\n\t\t\t\t\t\t\t<Radio id=\"radio_yle\" name='optsource' \n\t\t\t\t\t\t\t    checked={state.progsource == 'radio_yle'}\n\t\t\t\t\t\t\t\tonChange={this.radioProgSourceChanged} ></Radio>\n\t\t\t\t\t\t\t<label for=\"radio_yle\">Yle</label>\n\t\t\t\t\t\t</FormField>\n*/\n"],"sourceRoot":""}